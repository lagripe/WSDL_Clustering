<?xml version="1.0" encoding="UTF-8"?>
<!--  Copyright (C) eBay, Inc. (2004). All Rights Reserved. -->
<wsdl:definitions 
	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" 
	xmlns:ns="urn:ebay:apis:eBLBaseComponents" 
	xmlns="urn:ebay:apis:eBLBaseComponents"
	targetNamespace="urn:ebay:apis:eBLBaseComponents">
	<wsdl:types>
		<xs:schema targetNamespace="urn:ebay:apis:eBLBaseComponents"  
		xmlns:ns="urn:ebay:apis:eBLBaseComponents" 
		xmlns="urn:ebay:apis:eBLBaseComponents"
		xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
			<!-- Custom Security header element-->
			<xs:element name="RequesterCredentials" type="ns:CustomSecurityHeaderType"/>

				<!--  Call: GetItem -->
	<xs:element name="GetItemRequest" type="ns:GetItemRequestType"/>
	<xs:complexType name="GetItemRequestType">
		<xs:annotation>
			<xs:documentation>
          Contains the inputs that control what item data is retrieved. This
          includes the item ID that uniquely identifies the listing for which
          to retrieve data.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:ItemID">
						<xs:annotation>
							<xs:documentation>
                  Specifies the item ID that uniquely identifies the item listing for which
                  to retrieve the data. ItemID is a required input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IncludeWatchCount" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Indicates if the caller wants to include watch count for that item in the reponse.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetItem -->
	<xs:element name="GetItemResponse" type="ns:GetItemResponseType"/>
	<xs:complexType name="GetItemResponseType">
		<xs:annotation>
			<xs:documentation>
          Contains the item data returned by the call. The data for the specified item
          listing is returned in an ItemType object.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:Item" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  ItemType object that contains the data for the specified item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddItem -->
	<xs:element name="AddItemRequest" type="ns:AddItemRequestType"/>
	<xs:complexType name="AddItemRequestType">
		<xs:annotation>
			<xs:documentation>
          Defines a single new item and lists it on a specified eBay site. 
          To list multiple new items, execute AddItem once for each item, 
          with a new item definition each time. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:Item">
						<xs:annotation>
							<xs:documentation>
                  Child elements hold the values that define the new item. Item is a
                  required input. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:ExternalProductID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Causes eBay to list the item with Pre-filled Item Information based on 
                  an ISBN value, UPC value, or eBay catalog product ID, plus 
                  other meta-data that you specify. Only applicable for certain categories. 
                  See the Developer's Guide for information on the categories 
                  that currently support usage of this field.
                  Either ExternalProductID or Item.ProductListingDetails can be specified
                  in the request, but not both.
                  If the item's primary and secondary category are both catalog-enabled, 
                  this ID must be for a product associated with the primary category. 
                  If only one category is catalog-enabled, this ID must be for a product
                  that is associated with the catalog-enabled category. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddItem -->
	<xs:element name="AddItemResponse" type="ns:AddItemResponseType"/>
	<xs:complexType name="AddItemResponseType">
		<xs:annotation>
			<xs:documentation>
          Returns the item ID and the estimated fees for the new listing, as well as
          the start and end times of the listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:ItemID" minOccurs="0"/>
					<xs:element name="StartTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Starting date and time for the new listing.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Date and time when the new listing ends. This is the starting time 
                      plus the listing duration.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Fees" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Child elements contain the estimated listing fees for the new item listing. 
                      The fees do not include the Final Value Fee (FVF), which cannot be determined 
                      until an item is sold.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: VerifyAddItem -->
	<xs:element name="VerifyAddItemRequest" type="ns:VerifyAddItemRequestType"/>
	<xs:complexType name="VerifyAddItemRequestType">
		<xs:annotation>
			<xs:documentation>
          Defines a single new item and tests the definition for validity. Behaves exactly
          the same as AddItem (same inputs, same outputs, and same behavior and usage rules), 
          but without actually listing the item to an eBay site. Applications can use this call 
          to test the definition of an item before actually listing it to eBay with AddItem, 
          reducing item listing-related errors.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:Item">
						<xs:annotation>
							<xs:documentation>
                  ItemType object, the properties of which define the new item listing.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: VerifyAddItem -->
	<xs:element name="VerifyAddItemResponse" type="ns:VerifyAddItemResponseType"/>
	<xs:complexType name="VerifyAddItemResponseType">
		<xs:annotation>
			<xs:documentation>
          Returns the estimated fees that would be applicable for a new listing 
          (were the item actually listed to eBay with AddItem).
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:ItemID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Represents the item ID for the new listing. As VerifyAddItem does not 
                      actually list an item, returns 0 instead of a normal item ID.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Fees" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Child elements contain the estimated listing fees for the new item listing. 
                      The fees do not include the Final Value Fee (FVF), which cannot be determined 
                      until an item is sold.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetUser -->
	<xs:element name="GetUserRequest" type="ns:GetUserRequestType"/>
	<xs:complexType name="GetUserRequestType">
		<xs:annotation>
			<xs:documentation>
          Contains the inputs that control what user data is returned. This includes the
          eBay user ID for the user whose data is to be returned and the item ID for a
          listing to indicate a transactional relationship between the requestor and the
          target user.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:ItemID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the item ID for a successfully concluded listing in which
                      the requestor and target user were participants (one as seller and
                      the other as buyer). Necessary to return certain data (like an email
                      address). Not necessary of the requestor is retrieving own data.
                      ItemID is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="UserID" type="xs:string">
						<xs:annotation>
							<xs:documentation>
                      Specifies the user whose data will returned by the call. UserID is an
                      optional input. If not specified, the user data returned is that for
                      the requesting user.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetUser -->
	<xs:element name="GetUserResponse" type="ns:GetUserResponseType"/>
	<xs:complexType name="GetUserResponseType">
		<xs:annotation>
			<xs:documentation>
          Contains the data retrieved by the call. User data is returned in a User object.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:User" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains the returned user data for the specified eBay user.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetSellerEvents -->
	<xs:element name="GetSellerEventsRequest" type="ns:GetSellerEventsRequestType"/>
	<xs:complexType name="GetSellerEventsRequestType">
		<xs:annotation>
			<xs:documentation>
          Contains the inputs that control the items that are returned for seller events.
          This includes time-based filtering on the start time, end time, and/or modification
          time of the item listings.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:UserID"/>
					<xs:element name="StartTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the earliest (oldest) date to use in a date range filter based on item
                      start time. Must be specified if StartTimeTo is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the latest (most recent) date to use in a date range filter based on item
                      start time. Must be specified if StartTimeFrom is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the earliest (oldest) date to use in a date range filter based on item end
                      time. Must be specified if EndTimeTo is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the latest (most recent) date to use in a date range filter based on item
                      end time. Must be specified if EndTimeFrom is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the earliest (oldest) date to use in a date range filter based on the time
                      an item's record was modified. Must be specified if ModTimeTo is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the latest (most recent) date to use in a date range filter based on the
                      time an item's record was modified. Must be specified if ModTimeFrom is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NewItemFilter" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the only new items are to be returned. NewItemFilter is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetSellerEvents -->
	<xs:element name="GetSellerEventsResponse" type="ns:GetSellerEventsResponseType"/>
	<xs:complexType name="GetSellerEventsResponseType">
		<xs:annotation>
			<xs:documentation>
          Contains the items returned by the call. Items for which a seller event has
          occurred (and that meet any filters specified as input) are returned in an
          ItemArrayType object, within which are zero, one, or multiple ItemType objects.
          Each ItemType object contains the detail data for one item listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="TotalAvailable" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains a count of the total number of seller event items that are available to be
                      returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the latest (most recent) date for any date-based filtering specified as
                      input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:ItemArray" maxOccurs="1" minOccurs="1">
						<xs:annotation>
							<xs:documentation>
                      Indicates the earliest (oldest) date for any date-based filtering specified as input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: RelistItem -->
	<xs:element name="RelistItemRequest" type="ns:RelistItemRequestType"/>
	<xs:complexType name="RelistItemRequestType">
	<xs:annotation>
		<xs:documentation>
          Allows a seller to take a single item (or a single multi-item
          listing) that ended without bidders or buyers and re-list it on a
          specified eBay site. The listing may be re-listed with the same item
          properties as the original or the seller may change a number of the
          item's defining properties at re-listing time. The new listing will
          have a different item ID than the original one. RelistItem re-lists a
          single item (or a single multi-item listing) that has already ended.
          To re-list multiple items (multiple listings) that have ended,
          execute RelistItem once for each ended listing.
		</xs:documentation>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="ns:AbstractRequestType">
			<xs:sequence>
				<xs:element ref="ns:Item">
					<xs:annotation>
						<xs:documentation>
                  Child elements hold the values for item properties that change for the
                  item re-list. Item is a required input. At a minimum, the Item.ItemID
                  property must be set to the ID of the listing being re-listed (a
                  listing that ended in the past 90 days). By default, the new listing's
                  Item object properties are the same as those of the original (ended)
                  listing. By setting a new value in the Item object and citing that
                  changed Item property in the ModifiedFields property, the new listing
                  uses the new value rather than the corresponding value from the old
                  listing.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="ModifiedFields" type="ns:ModifiedFieldType" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>
                Array of item property changes. Each element in the array indicates a first
                level property in the Item object (specified in the Item property) that is
                changing in the re-list. Item properties not specified in ModifiedFields are
                not changed in the item re-list, even if a new value is specified in the
                property in the Item object. Properties not specified retain the same value
                as is present in the ended item listing being re-listed.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
	<!--  Call: RelistItem -->
	<xs:element name="RelistItemResponse" type="ns:RelistItemResponseType"/>
	<xs:complexType name="RelistItemResponseType">
		<xs:annotation>
			<xs:documentation>
          Returns the item ID and the estimated fees for the re-listed listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:ItemID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                     Unique item ID for the new listing.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Fees" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Child elements contain the estimated listing fees for the new item
                  listing. The fees do not include the Final Value Fee (FVF), which cannot
                  be determined until an item is sold.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Date and time the new listing became active on the eBay site.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Date and time when the new listing ends. This is the starting time plus
                  the listing duration.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: ReviseItem -->
	<xs:element name="ReviseItemRequest" type="ns:ReviseItemRequestType"/>
	<xs:complexType name="ReviseItemRequestType">
		<xs:annotation>
			<xs:documentation>
          Allows a seller to make changes to the definition of an active item
          listing. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:Item">
						<xs:annotation>
							<xs:documentation>
				  Required. Child elements hold the values for properties that are changing.
				  The Item.ID property must always be set to the ID of the item listing being
				  changed. Set values in the Item object only for those properties that are
				  changing. To remove a property, do not give it a value in Item, but 
				  specify it as changed in ModifiedFields. Each first-level property
				  that has a changed value must be listed in the ModifiedFields property.			
						</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModifiedFields" type="ns:ModifiedFieldType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Array of item property changes. Each element in the array indicates a
                  first level property in the Item object (specified in the Item property)
                  that is changing in the revision. Item properties not specified in
                  ModifiedFields are not changed in the item revision - even if a new value
                  is specified in the property in the Item object. Properties not specified
                  retain the same value as is present in the active item listing being
                  revised. To remove a property from the item, specify it as changed
                  in ModifiedFields, but do not specify a value in Item.
						</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: ReviseItem -->
	<xs:element name="ReviseItemResponse" type="ns:ReviseItemResponseType"/>
	<xs:complexType name="ReviseItemResponseType">
		<xs:annotation>
			<xs:documentation>
            Returns the item ID and the estimated fees for the revised listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:ItemID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Item ID that uniquely identifies the item listing that was revised.
                   Provided for confirmation purposes. The value returned should be the
                   same as the item ID specified in the ItemID property of the Item object
                   specified as input for the call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Fees" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Child elements contain the estimated listing fees for the revised item
                   listing. The fees do not include the Final Value Fee (FVF), which cannot
                   be determined until an item is sold. Revising an item does not itself
                   incur a fee. However, certain item properties are fee-based and result
                   in the return of fees in the call's response.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetSellerList -->
	<xs:element name="GetSellerListRequest" type="ns:GetSellerListRequestType"/>
	<xs:complexType name="GetSellerListRequestType">
		<xs:annotation>
			<xs:documentation>
          Contains the inputs that govern which seller for whom a list of items is returned.
          Other inputs filter the items returned based on the start date or end date of
          listings, control the pagination of returned data, and control the sort order of
          the returned items.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:UserID">
						<xs:annotation>
							<xs:documentation>
                      Specifies the seller whose items will be returned. UserID is an optional input.
                      If not specified, the requesting user is the seller whose items are returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the earliest (oldest) date to use in a date range filter based on item end
                      time. Must be specified if EndTimeTo is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the latest (most recent) date to use in a date range filter based on item
                      end time. Must be specified if EndTimeFrom is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Sort" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the order in which returned items are sorted (based on the end dates of the
                      item listings). Valid values:
                          0 = No sorting
                          1 = Sort in descending order
                          2 = Sort in ascending order
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the earliest (oldest) date to use in a date range filter based on item
                      start time. Must be specified if StartTimeTo is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the latest (most recent) date to use in a date range filter based on item
                      start time. Must be specified if StartTimeFrom is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Pagination" maxOccurs="1" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains the data controlling the pagination of the returned values: how many items
                      are returned per page of data (per call) and the number of the page to return with
                      the current call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetSellerList -->
	<xs:element name="GetSellerListResponse" type="ns:GetSellerListResponseType"/>
	<xs:complexType name="GetSellerListResponseType">
		<xs:annotation>
			<xs:documentation>
          Contains a list of the items listed by the seller specified as input. The list of
          items is returned in an ItemArrayType object, in which are returned zero, one, or
          multiple ItemType objects. Each ItemType object contains the detail data for one
          item listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:PaginationResult" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains information regarding the pagination of data (if pagination is used),
                      including total number of pages and total number of entries.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HasMoreItems" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether there are more items yet to be retrieved (if a value of true is
                      returned). Additional calls must be made to retrieve these items.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:ItemArray" maxOccurs="1" minOccurs="1">
						<xs:annotation>
							<xs:documentation>
                      Contains the list of the seller's items, one ItemType object per item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemsPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the number of items that are being returned per page of data (i.e., per
                      call). Will be the same as the value specified in the Pagination.EntriesPerPage
                      input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates which page of data was just returned. Will be the same as the value
                      specified in the Pagination.PageNumber input. (If the input is higher than the
                      total number of pages, the call fails with an error.)
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReturnedItemCountActual" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the total number of items returned (i.e., the number of ItemType objects
                      in ItemArray).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Seller" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the seller whose items are returned. Will be the same as the value specifed
                      in the UserID input (if a value is specified), otherwise the seller is the requesting
                      user making the call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetItemTransactions -->
<!--  Copyright (C) eBay, Inc. (2003). All Rights Reserved. -->
	<xs:element name="GetItemTransactionsRequest" type="ns:GetItemTransactionsRequestType"/>
	<xs:complexType name="GetItemTransactionsRequestType">
		<xs:annotation>
			<xs:documentation>
          A transaction contains the information about the sale of one or more items 
          by one buyer from a single listing. GetItemTransactions retrieves a 
          report containing information you can use to process one listing's transactions.
          (Often, it is more efficient to use GetSellerTransactions instead. 
          See the reference guide for more information.)
          As some listings can return large numbers of transactions, use the supplied 
          time filters to retrieve only those transactions whose status has been modified
          between two dates. Optionally, also configure the request to retrieve one page 
          of data at a time (where each page contains a more manageable number of transactions).
          All the listing's transactions that were modified within the specified date range can be retrieved,
          or a single transaction can be retrieved. However, retrieving transactions
          one at a time is inefficent and requires more API calls. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:ItemID">
						<xs:annotation>
							<xs:documentation>
                      Unique item ID for the item for which to retrieve transactions.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeFrom" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>
                      Describes the earliest (oldest) date to use in a date range filter based on the 
                      time the transaction status was modified. Filters out transactions whose status was 
                      last modified before this date. The date range between ModTimeFrom to ModTimeTo 
                      cannot be greater than 30 days.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeTo" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>
                      Describes the latest (most recent) date to use in a date range filter based on the 
                      time a transaction's status was modified. Filters out transactions whose status 
                      was last modified after this date. The date range between ModTimeFrom to ModTimeTo 
                      cannot be greater than 30 days. It is considered a best practice to always pass 
                      the current date-time, to ensure that no data is missed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:TransactionID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Identifies one transaction for a listing. To determine the valid transaction IDs 
                      for a listing, you typically need to have previously executed GetItemTransactionsCall 
                      or GetSellerTransactionsCall and stored all the listing's transactions.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Pagination" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Child elements control pagination of the output. Use its EntriesPerPage 
                      property to control the number of transactions to return per call and its 
                      PageNumber property to specify the page of data to return.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetItemTransactions -->
<!--  Copyright (C) eBay, Inc. (2003). All Rights Reserved. -->
	<xs:element name="GetItemTransactionsResponse" type="ns:GetItemTransactionsResponseType"/>
	<xs:complexType name="GetItemTransactionsResponseType">
		<xs:annotation>
			<xs:documentation>
          Returns an array of transaction data for the item specified in the request
          The results can be used to create a report of data that is commonly
          necessary for end-of-auction processing. 
          Zero, one, or many Transaction objects can be returned in the array.
          The set of transactions returned is limited to those that were modified between
          the times specified in the request's ModTimeFrom and ModTime filters. 
          Also returns the item object that spawned the transactions. 
          If pagination filters were specified in the request, returns meta-data describing
          the effects of those filters on the current response and the estimated effects if
          the same filters are used in subsequent calls.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:PaginationResult" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains the total number of pages (TotalNumberOfPages) and the total number 
                      of entries (TotalNumberOfEntries) that could be returned given repeated calls 
                      that use the same selection criteria as the call that returned this response.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HasMoreTransactions" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether there are additional transactions to retrieve.
                      That is, indicates whether more pages of data are available to be
                      returned, given the filters that were specified in the request. 
                      Returns false for the last page of data.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TransactionsPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Number of transactions returned per page (per call). May be a higher value 
                      than ReturnedTransactionCountActual if the page returned is the last page
                      and more than one page of data exists.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Page number for the page of transactions the response returned. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReturnedTransactionCountActual" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Number of transactions retrieved in the current page of results just returned. 
                      May be a lower value than TransactionsPerPage if the page returned is the last 
                      page and more than one page of data exists.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Item" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Item object that spawned the transaction. It is a purchase from this item's listing 
                      that the transaction represents. Only certain fields of the item are returned, 
                      and the list of returned fields can be further reduced 
                      depending on the detail level (DetailLevelCodeType) passed in the request. 
                      See the reference guide for information about the fields that are returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:TransactionArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      List of Transaction objects representing the transactions resulting 
                      from the listing. Each Transaction object contains the data for one purchase 
                      (of one or more items in the same listing). The Transaction.Item field is not
                      returned because the Item object is returned at the root level of the response.
                      See the reference guide for more information about the fields that are returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PayPalPreferred" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether the item's seller has the preference enabled that shows that the seller 
                      prefers PayPal as the method of payment for an item. This preference is indicated on 
                      an item's View Item page and is intended to influence a buyer to use PayPal 
                      to pay for the item. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetSellerTransactions -->
<!--  Copyright (C) eBay, Inc. (2003). All Rights Reserved. -->
	<xs:element name="GetSellerTransactionsRequest" type="ns:GetSellerTransactionsRequestType"/>
	<xs:complexType name="GetSellerTransactionsRequestType">
		<xs:annotation>
			<xs:documentation>
          A transaction contains the information about the sale of one or more items 
          by one buyer from a single listing. GetSellerTransactions retrieves a 
          report containing information you can use to process the requesting seller's transactions.
          As some listings can return large numbers of transactions, use the supplied 
          time filters to retrieve only those transactions whose status has been modified
          between two dates. Optionally, also configure the request to retrieve one page 
          of data at a time (where each page contains a more manageable number of transactions).
          The user making the request can only retrieve their own transactions.
          That is, a user cannot retrieve all the transactions for another seller.
          If the user needs to retrieve transactions for another seller's listing, 
          use GetItemTransactions instead.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ModTimeFrom" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>
                      Describes the earliest (oldest) date to use in a date range filter based on the 
                      time a transaction's status was modified. Filters out transactions whose status was 
                      last modified before this date. The date range between ModTimeFrom to ModTimeTo 
                      cannot be greater than 30 days.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeTo" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>
                      Describes the latest (most recent) date to use in a date range filter based on the 
                      time a transaction's status was modified. Filters out transactions whose status 
                      was last modified after this date. The date range between ModTimeFrom to ModTimeTo 
                      cannot be greater than 30 days. It is considered a best practice to always pass 
                      the current date-time, to ensure that no data is missed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Pagination" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Child elements control pagination of the output. Use its EntriesPerPage 
                      property to control the number of transactions to return per call and its 
                      PageNumber property to specify the page of data to return.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetSellerTransactions -->
<!--  Copyright (C) eBay, Inc. (2003). All Rights Reserved. -->
	<xs:element name="GetSellerTransactionsResponse" type="ns:GetSellerTransactionsResponseType"/>
	<xs:complexType name="GetSellerTransactionsResponseType">
		<xs:annotation>
			<xs:documentation>
          Returns an array of transaction data for the seller specified in the request
          The results can be used to create a report of data that is commonly
          necessary for end-of-auction processing. 
          Zero, one, or many Transaction objects can be returned in the array.
          The set of transactions returned is limited to those that were modified between
          the times specified in the request's ModTimeFrom and ModTime filters. 
          Also returns information about the seller whose transactions were requested.
          If pagination filters were specified in the request, returns meta-data describing
          the effects of those filters on the current response and the estimated effects if
          the same filters are used in subsequent calls.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:PaginationResult" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains the total number of pages (TotalNumberOfPages) and the total number 
                      of entries (TotalNumberOfEntries) that could be returned given repeated calls 
                      that use the same selection criteria as the call that returned this response.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HasMoreTransactions" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether there are additional transactions to retrieve.
                      That is, indicates whether more pages of data are available to be
                      returned, given the filters that were specified in the request. 
                      Returns false for the last page of data.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TransactionsPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Number of transactions returned per page (per call). May be a higher value 
                      than ReturnedTransactionCountActual if the page returned is the last page
                      and more than one page of data exists.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Page number for the page of transactions the response returned. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReturnedTransactionCountActual" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Number of transactions retrieved in the current page of results just returned. 
                      May be a lower value than TransactionsPerPage if the page returned is the last 
                      page and more than one page of data exists.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Seller" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains information about the seller whose transactions are being returned.
                      See the reference guide for information about the fields of the Seller object
                      that are returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:TransactionArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      List of Transaction objects representing the seller's recent sales. 
                      Each Transaction object contains the data for one purchase 
                      (of one or more items in the same listing). 
                      See the reference guide for more information about the fields that are returned
                      for each transaction.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PayPalPreferred" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether the seller has the preference enabled that shows that the seller 
                      prefers PayPal as the method of payment for an item. This preference is indicated on 
                      an item's View Item page and is intended to influence a buyer to use PayPal 
                      to pay for the item. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetCategories -->
	<xs:element name="GetCategoriesRequest" type="ns:GetCategoriesRequestType"/>
	<xs:complexType name="GetCategoriesRequestType">
		<xs:annotation>
			<xs:documentation>
          Contains the inputs that determine which categories to return and from
          which eBay site to get them. Retrieves the category hierarchy including
          and under the caregory(ies) specified in CategoryParent.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="CategorySiteID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the eBay site for which to retrieve the category hierarchy. CategorySiteID
                      is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryParent" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                      Specifies the top most category to return, along with subordinate subcategories. If
                      no parent category is specified, the category hierarchy returned begins at the root
                      category on the specified site. CategoryParent is an optional input. If not specified
                      then the category hierarchy returned begins at the root category on the specified
                      eBay site. May specify multiple top most categories and the hierarchies for each is
                      returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="LevelLimit" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies which subcategories to return, based on how deep into the category
                      hierarchy a give category is. Categories returned are those no more levels deep in
                      the category hierarchy than the number specified. LevelLimit is an optional input. If
                      not specified, then categories at all levels are returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ViewAllNodes" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies whether to return only leaf categories(those categories in which items can
                      be listed), if a value of true is passed. If a value of false is passed, both leaf
                      and container categories are returned. ViewAllNodes is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReservePriceInclusive" type="xs:boolean" minOccurs="0"/>
					<xs:element name="MinimumReservePrice" type="xs:double" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetCategories -->
	<xs:element name="GetCategoriesResponse" type="ns:GetCategoriesResponseType"/>
	<xs:complexType name="GetCategoriesResponseType">
		<xs:annotation>
			<xs:documentation>
          Contains the category data for the eBay site specified as input. The category
          data is contained in a CategoryArrayType object, within which are zero, one, or
          multiple CategoryType objects. Each CategoryType object contains the detail data
          for one category. Other fields tell how many categories are returned in a call,
          when the category hierarchy was last updated, and the version of the category
          hierarchy (all three of which can differ from one eBay site to the next).
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:CategoryArray">
						<xs:annotation>
							<xs:documentation>
                      List of the returned categories. The category array contains one CategoryType
                      object for each returned category.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryCount" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the number of categories returned (i.e., the number of CategoryType
                      objects in CategoryArray).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="UpdateTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the last date and time that eBay modified the category hierarchy for the
                      specified eBay site.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryVersion" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                             Indicates the version of the category hierarchy on the 
                             specified eBay site.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReservePriceInclusive" type="xs:boolean" minOccurs="0">
					  <xs:annotation>
						<xs:documentation>
	    				Indicates whether the site allows reserve prices for all categories. 
	    				The value of CategoryType.ORPA can override this setting
	    				for an individual category.
						</xs:documentation>
					  </xs:annotation>
					</xs:element>
					<xs:element name="MinimumReservePrice" type="xs:double" minOccurs="0">
					  <xs:annotation>
					  	<xs:documentation>
	    				Indicates the lowest possible reserve price for any items
	    				listed in the category.
						</xs:documentation>
					 </xs:annotation>
					</xs:element>
					<xs:element name="ReduceReserveInclusive" type="xs:boolean" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetAttributesCS -->
	<xs:element name="GetAttributesCSRequest" type="ns:GetAttributesCSRequestType"/>
	<xs:complexType name="GetAttributesCSRequestType">
		<xs:annotation>
			<xs:documentation>
      Retrieves an XML string that describes how to present Item Specifics to a seller.
      Use this information to present users with the equivalent of the Item Specifics portion
      of the eBay Title and Description pages and to validate selected eBay attributes 
      on the client before including them in an AddItem call or related calls. 
      The XML string contains a list of all the attributes that are applicable for 
      one or more requested categories, along with related meta-data. 
      The meta-data specifies all the possible values of each attribute, the 
      logic for presenting the attributes to a user, and rules for validating the user's selections. 
      See the Developer's Guide for an overview of Item Specifics and details about 
      the eBay attribute model.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  A version of the Item Specifics meta-data definitions for the site.
                  Typically, an application passes the version value that was returned the last 
                  time the application executed this call.
                  Filter that causes the call to return only the characteristics sets 
                  for which the attribute meta-data has changed since the specified version.
                  If not specified, all characteristics sets are returned.
                  The latest version value is not necessarily greater than the previous
                  value that was returned. Therefore, when comparing versions, only  
                  compare whether the value has changed.
                  AttributeSystemVersion is an optional input. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:AttributeSetID" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  An array of characteristics set IDs (which always correspond to attribute set IDs). 
                  Each characteristics set corresponds to a level in the eBay category hierarchy at
                  which all items share common characteristics. 
                  Multiple categories can be mapped to the same characteristics set.
                  AttributeSetIDs is an optional input. When IDs are specified, the call 
                  only returns meta-data for the corresponding characteristics sets.
                  When no IDs are specified, the call returns all the current meta-data in the system.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetAttributesCS -->
	<xs:element name="GetAttributesCSResponse" type="ns:GetAttributesCSResponseType"/>
	<xs:complexType name="GetAttributesCSResponseType">
		<xs:annotation>
			<xs:documentation>
      Returns XML that describes how to present Item Specifics to a seller 
      and how to validate selected eBay attributes on the client before including 
      them in an AddItem call or related calls.  
      See the Developer's Guide for an overview of Item Specifics and details about 
      the eBay attribute model. Also returns the current version of the meta-data system.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Current version of the Item Specifics meta-data system for the site.
                  This value changes each time changes are made to the meta-data.
                  The current version value is not necessarily greater than the previous
                  value. Therefore, when comparing versions, only compare whether the 
                  value has changed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:AttributeData" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  An XML string containing a list of all the attributes that are applicable 
                  for a requested category, along with related meta-data. 
                  The meta-data specifies all the possible values of each attribute, the 
                  logic for presenting attributes to a user, and rules for validating the 
                  user's selections. This data is returned as "raw" XML. Individual 
                  elements are not described in the base components schema. See the 
                  call reference guide for information about each element in the string.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetAttributesXSL -->
	<xs:element name="GetAttributesXSLRequest" type="ns:GetAttributesXSLRequestType"/>
	<xs:complexType name="GetAttributesXSLRequestType">
		<xs:annotation>
			<xs:documentation>
      Retrieves the Item Specifics SYI XSL stylesheet.Apply the stylesheet to the 
      XML returned from a call to GetAttributesCS or GetProductSellingPages to
      render a form like the Item Specifics portion of eBay's Title and Description page.
      See the Developer's Guide for an overview of Item Specifics and information
      on working with the XSL.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:FileName" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  The name of the XSL file to retrieve. If not specified, the call 
                  returns the latest versions of all available XSL files.
                  FileName is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:FileVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  The desired version of the XSL file. Required if FileName is specified.
                  If not specified, the call returns the latest versions of all 
                  available XSL files that could be returned by the call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetAttributesXSL -->
	<xs:element name="GetAttributesXSLResponse" type="ns:GetAttributesXSLResponseType"/>
	<xs:complexType name="GetAttributesXSLResponseType">
		<xs:annotation>
			<xs:documentation>
      Retrieves the Item Specifics SYI XSL stylesheet.Apply the stylesheet to the 
      XML returned from a call to GetAttributesCS or GetProductSellingPages to
      render a form like the Item Specifics portion of eBay's Title and Description page.
      See the Developer's Guide for an overview of Item Specifics and information
      on working with the XSL.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:XSLFile" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Child elements specify data related to one XSL file. See XSLFileType.
                  Multiple XSLFile objects can be returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductFinder -->
	<xs:element name="GetProductFinderRequest" type="ns:GetProductFinderRequestType"/>
	<xs:complexType name="GetProductFinderRequestType">
		<xs:annotation>
			<xs:documentation>
      GetProductFinder retrieves data that you use to construct valid "product finder" queries
      (queries against multiple attributes) against catalog products or listed items.
      The attributes describe search criteria (e.g., Manufacturer), as appropriate for the category.
      Use the results in combination with GetProductFinderXSL to render the Product Finder
      in a graphical user interface.
      GetProductFinder does not conduct the actual product or listing search.
      It only returns data about what you can search on. Use the data as input to 
      GetProductSearchResults to conduct the actual search for product information 
      or as input to GetSearchResults to conduct the search for listed items.
      To retrieve single-attribute search criteria (querying against a single attribute, like UPC), 
      use GetProductSearchPage instead (only applicable for catalog searches).
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products and for information about searching for listed items.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  A version of the product finder attribute definitions for the site.
                  Typically, an application passes the version value that was returned the last 
                  time the application executed this call.
                  Filter that causes the call to return only the Product Finders 
                  for which the attribute meta-data has changed since the specified version.
                  The latest version value is not necessarily greater than the previous
                  value that was returned. Therefore, when comparing versions, only  
                  compare whether the value has changed.
                  AttributeSystemVersion is an optional input. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:ProductFinderID" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  An array of product finder IDs. To determine the product finder ID for a category, 
                  call GetCategory2CS. 
                  Multiple categories can be mapped to the same product finder ID.
                  ProductFinderIDs is an optional input. When IDs are specified, the call 
                  only returns product finder meta-data for the specified product finders.
                  When no IDs are specified, the call returns all the current product finder 
                  meta-data available on the site.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductFinder -->
	<xs:element name="GetProductFinderResponse" type="ns:GetProductFinderResponseType"/>
	<xs:complexType name="GetProductFinderResponseType">
		<xs:annotation>
			<xs:documentation>
      For a category that supports product finders, GetProductFinder returns an XML string 
      that decribes the attributes a seller can use to form a query when searching for 
      Pre-filled Item Information, or attributes that can be used to search for listed items.
      Specifically, it retrieves data that you use to construct valid "product finder" queries
      (queries against multiple attributes). 
      Use the results in combination with GetProductFinderXSL to render the Product Finder
      in a graphical user interface.
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products and for information about searching for listed items.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Current version of the product search page data for the site.
                  This value changes each time changes are made to the search page data.
                  The current version value is not necessarily greater than the previous
                  value. Therefore, when comparing versions, only compare whether the 
                  value has changed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:ProductFinderData" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  An XML string containing a list of search attributes that can be used in a
                  "Product Finder" style query.
                  The attribute data is returned as "raw" XML. Individual 
                  elements are not described in the base components schema. See the 
                  call reference guide for information about each element in the string.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductFinderXSL -->
	<xs:element name="GetProductFinderXSLRequest" type="ns:GetProductFinderXSLRequestType"/>
	<xs:complexType name="GetProductFinderXSLRequestType">
		<xs:annotation>
			<xs:documentation>
      Retrieves the Product Finder XSL stylesheet. Apply the stylesheet to the 
      XML returned from a call to GetProductFinder to
      render a form that lets a user form a multi-attribute query against 
      eBay catalog data.
      See the Developer's Guide for an overview of Pre-filled Item Information
      and information on searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:FileName" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  The name of the XSL file to retrieve. If not specified, the call 
                  returns the latest versions of all available XSL files.
                  FileName is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:FileVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  The desired version of the XSL file. Required if FileName is specified.
                  IIf not specified, the call returns the latest versions of all 
                  available XSL files that could be returned by the call.
                  This is not a filter for retrieving changes to the XSL files.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductFinderXSL -->
	<xs:element name="GetProductFinderXSLResponse" type="ns:GetProductFinderXSLResponseType"/>
	<xs:complexType name="GetProductFinderXSLResponseType">
		<xs:annotation>
			<xs:documentation>
      Retrieves the Product Finder XSL stylesheet. Apply the stylesheet to the 
      XML returned from a call to GetProductFinder to
      render a form that lets a user form a multi-attribute query against 
      eBay catalog data.
      See the Developer's Guide for an overview of Pre-filled Item Information
      and information on searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:XSLFile" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Child elements specify data related to one XSL file. See XSLFileType.
                  Multiple XSLFile objects can be returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductSellingPages -->
	<xs:element name="GetProductSellingPagesRequest" type="ns:GetProductSellingPagesRequestType"/>
	<xs:complexType name="GetProductSellingPagesRequestType">
		<xs:annotation>
			<xs:documentation>
      Retrieves an XML string that describes how to present catalog product information to a seller.
      Use this information to present users with the equivalent of the Item Specifics portion
      of the eBay Title and Description pages and to validate user-specified values for
      eBay attributes on the client before including them in an AddItem call or related calls. 
      The XML string contains a list of all the attributes that are applicable for 
      one or more requested products, along with related meta-data. 
      The meta-data specifies the pre-filled values of each attribute, the 
      possible values of attributes that are not pre-filled, the logic for presenting 
      the attributes to a user, and rules for validating the user's selections.
      Use the results in combination with GetAttributesXSL to render the Item Specifics
      in a graphical user interface.
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:UseCase">
						<xs:annotation>
							<xs:documentation>
               Specifies the context in which the call is being executed, which will imply 
					certain validation rules. Use this property to make sure you retrieve the 
					appropriate version of product information and attribute meta-data 
					when you are listing, revising, or relisting an item with Pre-filled Item Information. Valid values:
					      SYI = Sell Your Item. Use before adding an item. Causes the response to include the 
					            latest product ID in the system (given an ID specified in the Products element) 
					            and the corresponding characteristic meta-data. 
					      RYI = Revise Your Item. Use this before revising an item. Causes the response to return
					            the product ID, attribute data, and other data associated with the version of the product
					            that you pass in the Products element. This is useful in case the product ID or associated data 
					            has changed in the system since the item was originally listed. When revising 
					            an item, this helps you make changes that are consistent with the original listing.
					      RELIST = Use this before relisting an item. Causes the response to include the 
					            latest product ID in the system (given an ID specified in the Products element) 
					            and the corresponding characteristic meta-data. (Same as SYI).
               UseCase is a required input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Product" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  An array of ProductType objects, each of which identifies a prototype description 
                  of a well-known type of item, such as a popular book.
                  Products is a required input. See the Developer's Guide for information about 
                  the ProductType properties that are required for this call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductSellingPages -->
	<xs:element name="GetProductSellingPagesResponse" type="ns:GetProductSellingPagesResponseType"/>
	<xs:complexType name="GetProductSellingPagesResponseType">
		<xs:annotation>
			<xs:documentation>
      Retrieves an XML string that describes how to present catalog product information to a seller.
      Use this information to present users with the equivalent of the Item Specifics portion
      of the eBay Title and Description pages and to validate user-specified values for
      eBay attributes on the client before including them in an AddItem call or related calls. 
      Use the results in combination with GetAttributesXSL to render the Item Specifics
      in a graphical user interface.
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:ProductSellingPagesData" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  An XML string containing a list of all the attributes that are applicable for 
                  one or more requested products, along with related meta-data. 
                  The meta-data specifies the pre-filled values of each attribute, the 
                  possible values of attributes that are not pre-filled, the logic for presenting 
                  the attributes to a user, and rules for validating the user's selections. 
                  The data is based on the GetAttributesCS response (AttributeData).
                  Product and attribute information is nested within a set of Product tags. 
                  The product-specific data is merged into the attribute data so that the same 
                  XSL stylesheet used to render the results of GetAttributeCS can be used to render 
                  product data.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetAccount -->
	<xs:element name="GetAccountRequest" type="ns:GetAccountRequestType"/>
	<xs:complexType name="GetAccountRequestType">
		<xs:annotation>
			<xs:documentation>
                  Retrieves seller account data for the requesting user. A user can only
                  retrieve his or her own account data. GetAccount returns credits and/or
                  debits (account entries) in one of three report formats: invoice, period,
                  or all history. Also returns summary data for the account, as well as
                  account information for any additional accounts.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="AccountHistorySelection" type="ns:AccountHistorySelectionCodeType">
						<xs:annotation>
							<xs:documentation>
                   Specifies the report format in which to return seller account entries.
                   Valid values are enumerated in the AccountHistorySelectionCodeType code
                   list.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="InvoiceDate" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Specifies the month and year that identifies the invoice to generate.
                   Used only with invoice reports (for specified invoices), causes the
                   report to include only those seller account entries that were included
                   in the invoice for the specified month and year. Note that this is not
                   the date on which an entry occurred, but the invoice in which an entry
                   was reported to the seller.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BeginDate" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Specifies the ealier date in a date range for returned seller account
                   entries. Used only with period reports, BeginDate and EndDate define
                   the date range within which a credit or debit entry had to have occurred
                   for it to be included in the report. Value must be less than or equal to
                   the value specified in EndDate. The date formats supported are YYYY-MM-DD
				   and YYYY-MM-DD HH:mm:ss.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndDate" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Specifies the later date in a date range for returned seller account
                   entries. Used only with period reports, BeginDate and EndDate define
                   the date range within which a credit or debit entry had to have occurred
                   for it to be included in the report. Value must be greater then or equal
                   to the value specified in BeginDate. The date formats supported are YYYY-MM-DD
				   and YYYY-MM-DD HH:mm:ss.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Pagination" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Child elements control pagination of the output. EntriesPerPage
                   specifies the maximum number of seller account entries to return per
                   call. The valid values are 0 to 2000, with a default of 500.
				   PageNumber specifies the page of data to return.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ExcludeBalance" type="xs:boolean" minOccurs="0">
					  <xs:annotation>
					    <xs:documentation>
					      Specifies whether to calculate balances. Default is
						  false, which calculates balances. True means do not
						  calculate balances. If true, 
						  AccountEntryType.Balance and AccountSummaryType.CurrentBalance
						  are not returned in the response.
					    </xs:documentation>
					  </xs:annotation>
					</xs:element>
					<xs:element name="ExcludeSummary" type="xs:boolean" minOccurs="0">
						<xs:annotation>
						  <xs:documentation>
							Specifies whether to return account summary information.
							Default is true, indicating that summary information should
							be returned.
						  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AccountEntrySortType" type="ns:AccountEntrySortTypeCodeType" minOccurs="0">
					  <xs:annotation>
						<xs:documentation>
							Specifies how account entries should be sorted in
							the response, by a field and then in ascending or
							descending order.
						</xs:documentation>
					  </xs:annotation>
					</xs:element>
					<xs:element name="Currency" type="ns:CurrencyCodeType" minOccurs="0" >
					  <xs:annotation>
						<xs:documentation>
						  Specifies the currency used in the account report.
						</xs:documentation>
					  </xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetAccount -->
	<xs:element name="GetAccountResponse" type="ns:GetAccountResponseType"/>
	<xs:complexType name="GetAccountResponseType">
		<xs:annotation>
			<xs:documentation>
	     			Returns information about an eBay user's own account.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="AccountID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Unique identifier for the requesting user's seller account at eBay.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AccountSummary" type="ns:AccountSummaryType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Contains summary data for the seller's account, such as the overall
                   balance, bank account and credit card information, and amount and
                   date of any past due amounts. Can also contain data for
                   one or more additional accounts, if the user has changed country
                   of residency.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Currency" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Indicates the currency in which monetary amounts in the report are
                   expressed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:AccountEntries" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Contains zero, one, or multiple individual seller account entries,
                   depending on how many fall into the report's scope or date range. Each
                   account entry represents one credit, debit, or administrative account
                   action.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:PaginationResult" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Contains the total number of pages (TotalNumberOfPages) and the total
                   number of account entries (TotalNumberOfEntries) that could be returned
                   given repeated calls that use the same report format and date criteria
                   (if applicable to the report format) as the call that returned this
                   response.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HasMoreEntries" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether there are more items yet to be retrieved (if a value of true is
                      returned). Additional calls must be made to retrieve these items.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EntriesPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the number of items that are being returned per page of data (i.e., per
                      call). Will be the same as the value specified in the Pagination.EntriesPerPage
                      input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates which page of data was just returned. Will be the same as the value
                      specified in the Pagination.PageNumber input. (If the input is higher than the
                      total number of pages, the call fails with an error.)
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddToItemDescription -->
	<xs:element name="AddToItemDescriptionRequest" type="ns:AddToItemDescriptionRequestType"/>
	<xs:complexType name="AddToItemDescriptionRequestType">
		<xs:annotation>
			<xs:documentation>
                  Retrieves seller account data for the requesting user. A user can only
                  retrieve his or her own account data. GetAccount returns credits and/or
                  debits (account entries) in one of three report formats: invoice, period,
                  or all history. Also returns summary data for the account, as well as
                  account information for any additional accounts.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:ItemID">
						<xs:annotation>
							<xs:documentation>
                   Unique item ID that identifies the target item listing, the description
                   of which is appended with the text specified in Description.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Description" type="xs:string">
						<xs:annotation>
							<xs:documentation>
                   Specifies the text to append to the end of the listings description.
                   Text appended to a listing's description must abide by the rules
                   applicable to this data (such as no JavaScript) as is the case when
                   first listing the item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddToItemDescription -->
	<xs:element name="AddToItemDescriptionResponse" type="ns:AddToItemDescriptionResponseType"/>
	<xs:complexType name="AddToItemDescriptionResponseType">
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: EndItem -->
	<xs:element name="EndItemRequest" type="ns:EndItemRequestType"/>
	<xs:complexType name="EndItemRequestType">
		<xs:annotation>
			<xs:documentation>
          Ends the specified item listing. Used by a seller to end the
          listing before it would normally end, such as before the
          specified duration has passed or the item was purchased via
          a Buy It Now option. Only the item's seller may call EndItem
          to end the item listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:ItemID">
						<xs:annotation>
							<xs:documentation>
                   Unique item ID that identifies the item listing to end.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndingReason" type="ns:EndReasonCodeType">
						<xs:annotation>
							<xs:documentation>
                   Indicates the seller's reason for ending the listing early. A reason
                   code is required if the seller is ending the item early and the item
                   did not successfully sell. Possible values are enumerated in the
                   ReasonCodeType code list.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: EndItem -->
	<xs:element name="EndItemResponse" type="ns:EndItemResponseType"/>
	<xs:complexType name="EndItemResponseType">
		<xs:annotation>
			<xs:documentation>
          Includes the acknowledgement of date and time the auction was
          ended due to the call to EndItem.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Indicates the date and time (returned in GMT) the specified item listing
                   was ended.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetHighBidders -->
	<xs:element name="GetHighBiddersRequest" type="ns:GetHighBiddersRequestType"/>
	<xs:complexType name="GetHighBiddersRequestType">
		<xs:annotation>
			<xs:documentation>
          Request to get a list of high bidders for the Dutch auction specified
          in the ItemId property of the request.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:ItemID" minOccurs="1">
						<xs:annotation>
							<xs:documentation>
                  Unique item ID that identifies the Dutch auction listing for which to
                  retrieve a list of the high bidders.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetHighBidders -->
	<xs:element name="GetHighBiddersResponse" type="ns:GetHighBiddersResponseType"/>
	<xs:complexType name="GetHighBiddersResponseType">
		<xs:annotation>
			<xs:documentation>
          Returns a list of high bidders for the Dutch auction specified in the
          ItemId property of the request.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:sequence>
						<xs:element name="BidArray" type="ns:OfferArrayType">
							<xs:annotation>
								<xs:documentation>
                  Contains a list of zero, one, or multiple OfferType objects. Each
                  OfferType object represents the data for one high bidder. See the schema
                  documentation for OfferType for details on its properties and their
                  meanings.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetCategory2CS -->
	<xs:element name="GetCategory2CSRequest" type="ns:GetCategory2CSRequestType"/>
	<xs:complexType name="GetCategory2CSRequestType">
		<xs:annotation>
			<xs:documentation>
      Retrieves mappings between categories and characteristics sets that are available for an eBay site. 
      Retrieves all mappings or just those that match category IDs passed in the call.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:CategoryID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  ID of a category for which to retrieve mappings. If not specified, the call 
                  retrieves a map for all categories.
                  CategoryID is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  A version of the mappings for the site.
                  Typically, an application passes the version value that was returned the last 
                  time the application executed this call.
                  Filter that causes the call to return only the categories 
                  for which the mappings have changed since the specified version.
                  If not specified, all category-to-characteristics set mappings are returned.
                  This value changes each time changes are made to the mappings.
                  The current version value is not necessarily greater than the previous
                  value. Therefore, when comparing versions, only compare whether the 
                  value has changed.
                  AttributeSystemVersion is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetCategory2CS -->
	<xs:element name="GetCategory2CSResponse" type="ns:GetCategory2CSResponseType"/>
	<xs:complexType name="GetCategory2CSResponseType">
		<xs:annotation>
			<xs:documentation>
      Returns data that indicates the categories that are mapped to characteristics sets, 
      for the eBay site to which the call was routed. 
      Retrieves all mappings or just the one that matches the category ID passed as input.
      The data is returned in a CategoryArrayType object, which can contain multiple mappings.
      The response also contains information about categories for which the mappings have changed.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:MappedCategoryArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                    Contains data about categories that are mapped to characteristics sets.
                    Use this data to determine:
                    - The names and IDs of the characteristics sets 
                    - The availability of the Pre-filled Item Information feature for listings in that category
                      (i.e., whether the category is catalog-enabled)
                    - For catalog-enabled categories, the available product search methods 
                    - The current version information for the complete mapping 
                    - The version information for each characteristics set
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:UnmappedCategoryArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                    Contains data about categories whose characteristics set mappings have changed 
                    since the version specified in the request. When a characteristics set mapping 
                    changes, the data appears in both the UnmappedCategoryArray object 
                    (to indicate that the change occurred) and the MappedCategoryArray object.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                    Current version of the mappings for the site.
                    This value changes each time changes are made to the mappings.
                    The current version value is not necessarily greater than the previous
                    value. Therefore, when comparing versions, only compare whether the 
                    value has changed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SiteWideCharacteristicSets" type="ns:SiteWideCharacteristicsType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation> 
		            A list of one or more characteristics sets mapped to the category. Use this
                  information when working with Item Specifics (Attributes) and Pre-filled Item
		            Information (Catalogs) functionality.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductSearchResults -->
	<xs:element name="GetProductSearchResultsRequest" type="ns:GetProductSearchResultsRequestType"/>
	<xs:complexType name="GetProductSearchResultsRequestType">
		<xs:annotation>
			<xs:documentation>
      GetProductSearchResults performs a product search and collects the results. 
      Result attributes for each product/product family are grouped and identified 
      with a product ID.  This call will perform a keyword search 
      for product matches in a characteristics set, or a batch of searches within multiple 
      characteristics sets. Each search is against a specified searchable attribute, 
      a combination of such attributes, or a string keyword query. To determine the 
      valid list of searchable attributes, call GetProductSearchPage or GetProductFinder.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ProductSearch" type="ns:ProductSearchType" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Specifies the keywords or attributes that make up the product query, 
                  with pagination instructions.
                  ProductSearch is a required input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductSearchResults -->
	<xs:element name="GetProductSearchResultsResponse" type="ns:GetProductSearchResultsResponseType"/>
	<xs:complexType name="GetProductSearchResultsResponseType">
		<xs:annotation>
			<xs:documentation>
      GetProductSearchResults performs a product search and collects the results. 
      Result attributes for each product/product family are grouped and identified 
      with a product ID. If more matches are found than the max amount specified per family, 
      only the product family information is returned. In this case, call GetProductFamilyMembers 
      to retrieve more products within the same family.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="DataElementSets" type="ns:DataElementSetType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Container for one or more DataElement fields containing supplemental helpful data. 
                  A DataElement field is an HTML snippet that specifies hints for the user, help links, 
                  help graphics, and other supplemental information that varies per characteristics set. 
                  Usage of this information is optional and may require developers to inspect the information 
                  to determine how it can be applied in an application. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductSearchResult" type="ns:ProductSearchResultType" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Contains the attributes and product details that match the product query passed in the request.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetMyeBay -->
	<xs:element name="GetMyeBayRequest" type="ns:GetMyeBayRequestType"/>
	<xs:complexType name="GetMyeBayRequestType">
		<xs:annotation>
			<xs:documentation>
        Retrieves data for the requesting user's My eBay page. This data
        includes a list of items the user is watching and a list of items the
        user has bid on.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="BiddingSort" type="ns:ItemSortTypeCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Specifies how the items in the active list (the items the user has bid
                  on) are sorted in the result set. The items may be sorted by item ID,
                  price, title, bid count, and listing end time. See the code list
                  ItemSortTypeCodeType for valid input values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="LostSort" type="ns:ItemSortTypeCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Specifies how the items in the lost list (items the user has bid on but has
			not won) are sorted in the result set. The items may be sorted by item ID,
                  price, title, bid count, and listing end time. See the code list
                  ItemSortTypeCodeType for valid input values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxItemsPerList" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Specifies maximum number of items to display in each of the lists.
                  Recommended value is 5. If not specified, all possible items for each
                  list are returned. One maximum is specified and applies to all of the
                  lists in the result set.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxItemAgeInDays" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Specifies the number of days prior to the current time (based on item end time) to retrieve items. Applies only to the items won and items lost lists. Default value is 2. Maximum value is 30.

							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="WatchSort" type="ns:ItemSortTypeCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Specifies how the items in the watch list (the items the user is watching)
                  are sorted in the result set. The items may be sorted by item ID,
                  price, title, bid count, and listing end time. See the code list
                  ItemSortTypeCodeType for valid input values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="WonSort" type="ns:ItemSortTypeCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Specifies how the items in the won list (the items the user has won)
                  are sorted in the result set. The items may be sorted by item ID,
                  price, title, bid count, and listing end time. See the code list
                  ItemSortTypeCodeType for valid input values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>

				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetMyeBay -->
	<xs:element name="GetMyeBayResponse" type="ns:GetMyeBayResponseType"/>
	<xs:complexType name="GetMyeBayResponseType">
		<xs:annotation>
			<xs:documentation>
        Contains the lists of items from the requesting user's My
        eBay page. This includes a list of the items the user has bid
        on and a list of the items the user is watching. The number of
        items returned in any list can be controlled using the MaxItemsPerList
        property of the request object.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:BiddingItemArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Contains the list of items the requesting user has bid on. BiddingItemArray is
                  an array of ItemType objects, each of which represents one item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:LostItemArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Contains the list of items the requesting user has bid on but not has won. 
			LostItemArray is an array of ItemType objects, each of which represents one item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:WatchItemArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Contains the list of items the requesting user is watching. WatchItemArray is
                  an array of ItemType objects, each of which represents one item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:WonItemArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Contains the list of items the requesting user has won. WonItemArray is
                  an array of ItemType objects, each of which represents one item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductSearchPage -->
	<xs:element name="GetProductSearchPageRequest" type="ns:GetProductSearchPageRequestType"/>
	<xs:complexType name="GetProductSearchPageRequestType">
		<xs:annotation>
			<xs:documentation>
      This call is applicable for use cases related to listing items with Pre-filled Item Information.
      For a category that is catalog-enabled, GetProductSearchPage retrieves the attributes 
      a seller can use to form a query when searching for Pre-filled Item Information. 
      Specifically, it retrieves data that you use to construct valid "single-attribute" queries. 
      The attributes describe search criteria (e.g., Author) and sorting criteria (e.g., Publication Year), 
      as appropriate for the category. GetProductSearchPage does not conduct the actual product search.
      It only returns data about what you can search on. Use the data as input to 
      GetProductSearchResults to conduct the actual search for product information.
      To retrieve Product Finder search criteria (querying against multiple attributes), use 
      GetProductFinder instead.
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:AttributeSystemVersion">
						<xs:annotation>
							<xs:documentation>
                  A version of the search page definitions for the site.
                  Typically, an application passes the version value that was returned the last 
                  time the application executed this call.
                  Filter that causes the call to return only the search pages 
                  for which the attribute meta-data has changed since the specified version.
                  The latest version value is not necessarily greater than the previous
                  value that was returned. Therefore, when comparing versions, only  
                  compare whether the value has changed.
                  AttributeSystemVersion is an optional input. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:AttributeSetID" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  A characteristics set ID that is associated with a 
                  catalog-enabled category that supports product search pages. 
                  You can pass an array of these IDs in the request. 
                  Each characteristics set corresponds to a level in the 
                  eBay category hierarchy at which all items share common characteristics. 
                  Multiple categories can be mapped to the same characteristics set.
                  Each ID is used as a filter to limit the response content to fewer 
                  characteristics sets. When IDs are specified, the call only returns 
                  search page data for the corresponding characteristics sets. 
                  When no IDs are specified, the call returns all the current 
                  search page data in the system.
                  AttributeSetID is an optional input. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductSearchPage -->
	<xs:element name="GetProductSearchPageResponse" type="ns:GetProductSearchPageResponseType"/>
	<xs:complexType name="GetProductSearchPageResponseType">
		<xs:annotation>
			<xs:documentation>
      For a category that is catalog-enabled, GetProductSearchPage retrieves the attributes 
      a seller can use to form a query when searching for Pre-filled Item Information. 
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
				    <xs:element name="AttributeSystemVersion" type="xs:string">
					    <xs:annotation>
							<xs:documentation>
          Current version of the product search page data for the site.
          This value changes each time changes are made to the search page data.
          The current version value is not necessarily greater than the previous
          value. Therefore, when comparing versions, only compare whether the 
          value has changed.
					          </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductSearchPage" type="ns:ProductSearchPageType" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Current version of the product search page data for the site.
                  This value changes each time changes are made to the search page data.
                  The current version value is not necessarily greater than the previous
                  value. Therefore, when comparing versions, only compare whether the 
                  value has changed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetSearchResults -->
	<xs:element name="GetSearchResultsRequest" type="ns:GetSearchResultsRequestType"/>
	<xs:complexType name="GetSearchResultsRequestType">
		<xs:annotation>
			<xs:documentation>
          Conducts a search for items based on a user-specified set of one or
          more keywords. Returns those item listings where the keywords appear
          in the title, sub-title, and (optionally) the description. Request
          includes properties to filter the listings returned based on listing
          type, whether PayPal is a payment method, and other criteria.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="MotorsGermanySearchable" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Filters the response based on each item's eligibility to appear on the mobile.de site. 
                  If false, excludes eligible items from search results. If true, queries for 
                  eligible items only. If not specified, the search results are not affected. 
                  Only applicable for items listed on the eBay Germany site (site ID 77) in subcategories of 
                  mobile.de search-enabled categories.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Query" type="xs:string">
						<xs:annotation>
							<xs:documentation>
                  Specifies a search string. The search string consists of one or more 
                  keywords to search for in the listing title and/or description. 
                  The words "and" and "or" are treated like any other word. Only use "and", 
                  "or", or "the" if you are searching for listings containing these words. 
                  You can use AND or OR logic by including certain modifiers. 
                  Wildcards (e.g., *) are also supported. Be careful when using spaces before 
                  or after modifiers and wildcards (+, -, or *). See the Developers Guide 
                  for a list of valid modifiers and examples. Max 350 characters. 
                  Query is not applicable in combination with ExternalProductID or ProductID.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:CategoryID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Limits the result set to just those items listed in the specified
                  category. Defaults to all categories if no category ID is specified. If
                  the specified category ID does not match an existing category for the
                  site, an invalid-category error message is returned.
                  You must pass ProductID, Query, ExternalProductID, or CategoryID in the request.
                  CategoryID can be used in combination with Query. It is not 
                  allowed with ExternalProductID, ProductID, or when SearchRequest is used. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SearchFlags" type="ns:SearchFlagsCodeType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Specifies the search to include text in item descriptions, to limit the
                  search results to only charity items, or to limit the result set to those
                  items with PayPal as a payment method.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:PriceRangeFilter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Limits the result set to just those items where the price is within the
                  specified range. The PriceRangeFilterType includes a minimum and a maximum
                  price.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:ProximitySearch" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Limits the result set to just those items whose location is within a 
								specified distance of a postal code. The ProximitySearchType includes 
								a maximum distance and a postal code.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:ItemTypeFilter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Limits the result set to just those listings of the specified type (or
                  all types). ItemTypeFilterCodeType values filter between only auction
                  type listings, only fixed-price listings, or all.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SearchType" type="ns:SearchTypeCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Limits the listings in the result set based on whether they are in the
                  Gallery. The choices are items in the Gallery or Gallery and non-Gallery
                  items.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:UserIdFilter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Limits the the result set to just those items listed by one or more
                  specified sellers or those items not listed by the one or more specified
                  sellers.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:SearchLocationFilter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Limits the result set to just those items that meet location criteria:
                  listed in a specified eBay site, location where the seller has the item,
                  location from which the user is searching, and/or items listed with a
                  specified currency.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:StoreSearchFilter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Limits the result set to just those items that meet criteria related to
                  eBay Stores: items listed in a particular store name or all stores.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Order" type="ns:SearchSortOrderCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Specifies the sort order in which the listings are returned in the result
                  set. Listings may be sorted by end time, start time, or other item
                  properties.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Pagination" type="ns:PaginationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Controls the pagination of the result set. Child elements specify the
                  maximum number of item listings to return per call and which page of data
                  to return.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SearchRequest"
						type="ns:SearchRequestType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  A query consisting of a set of attributes (Item Specifics). If the 
                  query includes multiple attributes, the search engine will apply "AND" 
                  logic to the query. Use GetProductFinder to determine the list of 
                  valid attributes and how many are permitted for the specified characteristic set. 
                  Applicable in combination with the Query argument. Cannot be used in 
                  combination with ProductID or ExternalProductID. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  An exclusive query to retrieve items that were listed with the specified eBay catalog product. 
                  You must pass ProductID, Query, ExternalProductID, or CategoryID in the request.
                  If you use ProductID, do not use Query, ExternalProductID, or CategoryID.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ExternalProductID" type="ns:ExternalProductIDType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Query to only retrieve items that were listed with the specified ISBN or UPC. 
                  Only applicable for items that were listed with Pre-filled Item Information 
                  in media categories (Books, Music, DVDs and Movies, and Video Games). 
                  You must pass ProductID, Query, ExternalProductID, or CategoryID in the request.
                  If you use ExternalProductID, do not use Query, ProductID, or CategoryID.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Categories" type="ns:RequestCategoriesType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Controls the retrieval of categories (not items) that contain items that match the query. 
                  At least one child element must also be specified in order to retrieve 
                  matching categories. If not specified, no matching category information 
                  is returned
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TotalOnly" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Filter to return only the total quantity of matching items, without 
                  returning the item data. See PaginationResult.TotalNumberOfEntries 
                  in the response.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Filter to retrieve items ending within a time range. 
                  EndTimeFrom specifies the beginning of the time range. Specify a time in the future. 
                  If you specify a time in the past, the current time is used. If specified, 
                  EndTimeTo must also be specified (with a value equal to or later than EndTimeFrom). 
                  Express the time in GMT. Cannot be used with the ModTimeFrom filter. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Filter to retrieve items ending within a time range. EndTimeTo specifies 
                  the end of the time range. If specified, EndTimeFrom must also be specified 
                  (with a value equal to or earlier than EndTimeTo). Express the time in GMT. 
                  Cannot be used with the ModTimeFrom filter.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Filter that limits the response to active items whose status has changed 
                  since the specified time. Specify a time in the past. 
                  Express the time in GMT. Cannot be used with the EndTime filters.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetSearchResults -->
	<xs:element name="GetSearchResultsResponse" type="ns:GetSearchResultsResponseType"/>
	<xs:complexType name="GetSearchResultsResponseType">
		<xs:annotation>
			<xs:documentation>
          Response contains the item listings that have the specified keyword(s)
          in the title, sub-title, and (optionally) the description. If the
          request uses any of the optional filtering properties, the item
          listings returned are those containing the keyword(s) and meeting the
          filter criteria.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="SearchResultItemArray" type="ns:SearchResultItemArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Contains the returned item listings. The data for each listing is returned in an
                  ItemType object.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemsPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the maximum number of ItemType objects that can be returned in
                  SearchResultItemArray for any given call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the page of data returned by the current call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HasMoreItems" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>
                  Indicates whether there are additional item listings with the input
                  keyword(s) and meeting the specified filtering criteria.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:PaginationResult" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the results of the pagination, including the total number of
                  pages of data there are to be returned and the total number of items
                  there are to be returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:CategoryArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Statistical information about categories that contain items that match 
                  the query. (For categories associated with specific items, see items returned 
                  in each search result.)
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddSecondChanceItem -->
	<xs:element name="AddSecondChanceItemRequest" type="ns:AddSecondChanceItemRequestType"/>
	<xs:complexType name="AddSecondChanceItemRequestType">
		<xs:annotation>
			<xs:documentation>
          AddSecondChanceItem request to create a new Second Chance Offer listing
          for an item to one of that item's bidders.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="RecipientBidderUserID" type="ns:UserIDType">
						<xs:annotation>
							<xs:documentation>
                  Specifies the bidder from the original, ended listing to whom the seller
                  is extending the second chance offer.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BuyItNowPrice" type="ns:AmountType">
						<xs:annotation>
							<xs:documentation>
                  Specifies the amount the offer recipient must pay to purchase the item
                  from tthe second chance offer listing. Use only when the original item
                  was an eBay Motors and it ended unsold because the reserve price was
                  not met. Call fails with an error for any other item conditions.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CopyEmailToSeller" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>
                  Specifies whether to send a copy of the second chance offer notification
                  email that goes to the recipient user also to the seller.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Duration" type="ns:SecondChanceOfferDurationCodeType">
						<xs:annotation>
							<xs:documentation>
                  Specifies the length of time the second chance offer listing will be
                  active. The recipient bidder has that much time to purchase the item or
                  the listing expires.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemID" type="ns:ItemIDType">
						<xs:annotation>
							<xs:documentation>
                  Specifies the item ID for the original, ended listing from which the
                  second chance offer item comes.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Site">
						<xs:annotation>
							<xs:documentation>
                  Reserved for internal or future use.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddSecondChanceItem -->
	<xs:element name="AddSecondChanceItemResponse" type="ns:AddSecondChanceItemResponseType"/>
	<xs:complexType name="AddSecondChanceItemResponseType">
		<xs:annotation>
			<xs:documentation>
          AddSecondChanceItem response for a new Second Chance Offer listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:Fees">
						<xs:annotation>
							<xs:documentation>
                  Contains the listing fees for the new second chance offer listing.
									EU residents who sell items on EU sites may be subject to VAT. (See documentation on Value-Added Tax.)
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemID" type="ns:ItemIDType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Contains the item ID for the new second chance offer listing.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the date and time when the the new second chance offer listing
                  became active and the recipient user could purchase the item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the date and time when the second chance offer listing expires,
                  at which time the listing ends (if the recipient user does not purchase
                  the item first).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: VerifyAddSecondChanceItem -->
	<xs:element name="VerifyAddSecondChanceItemRequest" type="ns:VerifyAddSecondChanceItemRequestType"/>
	<xs:complexType name="VerifyAddSecondChanceItemRequestType">
		<xs:annotation>
			<xs:documentation>
          Emulates the creation of a new Second Chance Offer for an item to one
          of that item's bidders.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="RecipientBidderUserID" type="ns:UserIDType">
						<xs:annotation>
							<xs:documentation>
                  Specifies the bidder from the original, ended listing to whom the seller
                  is extending the second chance offer.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BuyItNowPrice" type="ns:AmountType">
						<xs:annotation>
							<xs:documentation>
                  Specifies the amount the offer recipient must pay to purchase the item
                  from tthe second chance offer listing. Use only when the original item
                  was an eBay Motors and it ended unsold because the reserve price was
                  not met. Call fails with an error for any other item conditions.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CopyEmailToSeller" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>
                  Specifies whether to send a copy of the second chance offer notification
                  email that goes to the recipient user also to the seller.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Duration" type="ns:SecondChanceOfferDurationCodeType">
						<xs:annotation>
							<xs:documentation>
                  Specifies the length of time the second chance offer listing will be
                  active. The recipient bidder has that much time to purchase the item or
                  the listing expires.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemID" type="ns:ItemIDType">
						<xs:annotation>
							<xs:documentation>
                  Specifies the item ID for the original, ended listing from which the
                  second chance offer item comes.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Site">
						<xs:annotation>
							<xs:documentation>
                  Reserved for internal or future use.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: VerifyAddSecondChanceItem -->
	<xs:element name="VerifyAddSecondChanceItemResponse" type="ns:VerifyAddSecondChanceItemResponseType"/>
	<xs:complexType name="VerifyAddSecondChanceItemResponseType">
		<xs:annotation>
			<xs:documentation>
		              VerifyAddSecondChanceItem request to emulate creation of a new Second Chance Offer for an item to one of 
		              that item's bidders.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:Fees">
						<xs:annotation>
							<xs:documentation>
                  Contains the listing fees for the new second chance offer listing. No
                  fees are actually assessed as VerifyAddSecondChanceItem does not actually
                  create the new second chance offer listing. Provides an estimate of the
                  fees should the offer actually be made using AddSecondChanceItem. 
									EU residents who sell items on EU sites may be subject to VAT. (See documentation on Value-Added Tax.)
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the date and time when the the new second chance offer listing
                  became active and the recipient user could purchase the item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the date and time when the second chance offer listing expires,
                  at which time the listing ends (if the recipient user does not purchase
                  the item first).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductFamilyMembers -->
	<xs:element name="GetProductFamilyMembersRequest" type="ns:GetProductFamilyMembersRequestType"/>
	<xs:complexType name="GetProductFamilyMembersRequestType">
		<xs:annotation>
			<xs:documentation>
      The GetProductFamilyMembers call is similar to the GetProductSearchResults call. 
      Instead of passing in a query, you pass in a product ID. This product ID is used to 
      find all the members of the product family that the specified product is a member of. 
      Use this call when more matches are found than the  max amount specified per family 
      in a call to GetProductSearchResults.
      This call supports batch requests. This means you can retrieve products in 
      multiple families by using a single request.
      The results are compatible with the results from GetProductSearchResults,  
      so similar application logic can be used to handle both requests and responses.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ProductSearch" type="ns:ProductSearchType" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Specifies the ID of a product in the family to be retrieved, 
                  along with pagination and sorting instructions.
                  ProductSearch is a required input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetProductFamilyMembers -->
	<xs:element name="GetProductFamilyMembersResponse" type="ns:GetProductFamilyMembersResponseType"/>
	<xs:complexType name="GetProductFamilyMembersResponseType">
		<xs:annotation>
			<xs:documentation>
      GetProductFamilyMembers performs a product search and returns results comprising
      all the children in the product family identified by a product ID that was 
      specified in the request. Use this call when more matches are found than the 
      max amount specified per family in a call to GetProductSearchResults.
      This call supports batch requests. This means you can retrieve products in 
      multiple families by using a single request.
      The results are compatible with the results from GetProductSearchResults,  
      so similar application logic can be used to handle both requests and responses.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
				     <xs:element name="DataElementSets" type="ns:DataElementSetType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Container for one or more DataElement fields containing supplemental helpful data. 
                  A DataElement field is an HTML snippet that specifies hints for the user, help links, 
                  help graphics, and other supplemental information that varies per characteristics set. 
                  Usage of this information is optional and may require developers to inspect the information 
                  to determine how it can be applied in an application. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductSearchResult" type="ns:ProductSearchResultType" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
               Contains the attributes and summary product details for all products that match  
               the product ID (or IDs) passed in the request.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetCategoryListings -->
	<xs:element name="GetCategoryListingsRequest" type="ns:GetCategoryListingsRequestType"/>
	<xs:complexType name="GetCategoryListingsRequestType">
		<xs:annotation>
			<xs:documentation>
          Retrieves seller account data for the requesting user. A user can only
          retrieve his or her own account data. GetAccount returns credits and/or
          debits (account entries) in one of three report formats: invoice, period,
          or all history. Also returns summary data for the account, as well as
          account information for any additional accounts.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="MotorsGermanySearchable" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Filters the response based on each item's eligibility to appear on the mobile.de site. 
                  If false, excludes eligible items from search results. If true, queries for 
                  eligible items only. If not specified, the search results are not affected. 
                  Only applicable for items listed on the eBay Germany site (site ID 77) in subcategories of 
                  mobile.de search-enabled categories.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:CategoryID">
						<xs:annotation>
							<xs:documentation>
                  Specifies the category for which to retrieve item listings.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Currency" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Numeric ID for a currency type. Limits the result set to just those items listed 
                  using a specified currency. Not applicable to US eBay Motors searches. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:ItemTypeFilter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Limits the result set to just those listings of the specified type (or
                  all types).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SearchType" type="ns:CategoryListingsSearchCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Specifies whether to limit the item listings to just those that are
                  category featured or super featured or all items.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="OrderBy" type="ns:CategoryListingsOrderCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Specifies the order in which the item listings returned will be sorted.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Pagination" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Controls the pagination of the result set. Child elements specify the
                  maximum number of item listings to return per call and which page of data
                  to return.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:SearchLocation" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Limits the result set to just those items that meet location criteria:
                  listed in a specified eBay site, location where the seller has the item,
                  location from which the user is searching, and/or items listed with a
                  specified currency.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:ProximitySearch" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
				  Limits the result set to just those items that meet proximity search criteria:
				  postal code and max distance.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetCategoryListings -->
	<xs:element name="GetCategoryListingsResponse" type="ns:GetCategoryListingsResponseType"/>
	<xs:complexType name="GetCategoryListingsResponseType">
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:ItemArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Contains the item listings for the specified category and which meet the
                  input filtering criteria (if any is specified). Consists of one ItemType
                  object for each returned item listing.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Category" type="ns:CategoryType">
						<xs:annotation>
							<xs:documentation>
                  Indicates the category from which the listings were drawn.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SubCategories" type="ns:CategoryArrayType">
						<xs:annotation>
							<xs:documentation>
                  Collection of the sub-categories that are child to the category indicated
                  in Category. Data for each sub-category is conveyed in a CategoryType
                  object.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemsPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the maximum number of item listings that will be returned per
                  call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the page of data returned in the current call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HasMoreItems" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>
                  Indicates whether there are more item listings that can be returned
                  (items listed in the specified category and that meet any input filtering
                  criteria).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:PaginationResult" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the results of the pagination, including the total number of
                  pages of data there are to be returned and the total number of items
                  there are to be returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: LeaveFeedback -->
	<xs:element name="LeaveFeedbackRequest" type="ns:LeaveFeedbackRequestType"/>
	<xs:complexType name="LeaveFeedbackRequestType">
		<xs:annotation>
			<xs:documentation>
          Allows a user to leave feedback about another user. Both users (the
          sender  and the recipient) must have a transactional relationship.
          That is, they must have both been participants in a successfully
          concluded item sale transaction that took place no more than 90 days
          prior. Also, the sending user cannot have already left feedback for
          the recipient for the transaction.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ItemID" type="ns:ItemIDType">
						<xs:annotation>
							<xs:documentation>
                  Item ID for the listing from which the transaction relating the users
                  (the feedback sender and recipient). Transaction must not have been
                  created more than 90 days prior to the attempt to leave feedback.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CommentText" type="xs:string">
						<xs:annotation>
							<xs:documentation>
                  Textual comment that explains, clarifies, or justifies the feedback
                  score specified in CommentType.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CommentType" type="ns:CommentTypeCodeType">
						<xs:annotation>
							<xs:documentation>
                  Score for the feedback being left. May be Positive, Neutral, or
                  Negative.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:TransactionID">
						<xs:annotation>
							<xs:documentation>
                  The item purchase transaction from the listing specified in ItemID for
                  which the feedback is being left. Required if the listing identified in
                  ItemID was a multi-item listing (Dutch auction or multi-item fixed-price
                  listing).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TargetUser" type="ns:UserIDType">
						<xs:annotation>
							<xs:documentation>
                  Specifies the recipient user about whom the feedback is being left.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: LeaveFeedback -->
	<xs:element name="LeaveFeedbackResponse" type="ns:LeaveFeedbackResponseType"/>
	<xs:complexType name="LeaveFeedbackResponseType">
		<xs:annotation>
			<xs:documentation>
          LeaveFeedback response message includes an acknowledgement if the
          feedback was successfully left.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="FeedbackID" type="xs:string" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetFeedback -->
	<xs:element name="GetFeedbackRequest" type="ns:GetFeedbackRequestType"/>
	<xs:complexType name="GetFeedbackRequestType">
		<xs:annotation>
			<xs:documentation>
		      Retrieves the accumulation of feedback left for the specified user by
		      other users. Returns summary feedback data and (in a detail level value
		      of ReturnAll is specified) individual feedbacks.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:Pagination">
						<xs:annotation>
							<xs:documentation>
                  Controls the pagination of the result set. Child elements specify the
                  maximum number of individual feedbacks to return per call and which page
                  of data to return. Only applicable if a detail level value of ReturnAll
                  is specified to return feedback details. feedback summary data is not
                  paginated (but is still returned when pagination is used).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="UserID" type="ns:UserIDType">
						<xs:annotation>
							<xs:documentation>
                  Specifies the user whose feedback data is to be returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetFeedback -->
	<xs:element name="GetFeedbackResponse" type="ns:GetFeedbackResponseType"/>
	<xs:complexType name="GetFeedbackResponseType">
		<xs:annotation>
			<xs:documentation>
			       The GetFeedback response contains the specified user's total
			       feedback score, feedback summary data, and (if the applicable
			       detail level is specified) an array of individual feedbacks.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:FeedbackDetailArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Contains the individual feedbacks for the user, one FeedbackDetailType
                  object for each feedback. Only populated with data when a detail level of
                  ReturnAll is specified in the request.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="FeedbackDetailItemTotal" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the number of FeedbackDetailType objects returned in the
                  FeedbackDetailArray property. Only applicable if feedback details are
                  returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:FeedbackSummary" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Summary feedback data for the user. Contains counts of positive, neutral,
                  and negative feedback for predefined time periods.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="FeedbackScore" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Indicates the total feedback score for the user.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetMemberMessages -->
	<xs:element name="GetMemberMessagesRequest" type="ns:GetMemberMessagesRequestType"/>
	<xs:complexType name="GetMemberMessagesRequestType">
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:ItemID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The ID of the message.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MailMessageType" type="ns:MessageTypeCodeType">
						<xs:annotation>
							<xs:documentation>
								The type of message.
							</xs:documentation>
						</xs:annotation>
					</xs:element>					
					<xs:element name="MessageStatus" type="ns:MessageStatusTypeCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The status of the message. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>			
					<xs:element name="DisplayToPublic" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies if the message should be displayed on the 
								website with the item listing.
							</xs:documentation>
						</xs:annotation>
					</xs:element>					
					<xs:element name="StartCreationTime" type="xs:date" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Used as beginning of date range filter.
							</xs:documentation>
						</xs:annotation>
					</xs:element>		
					<xs:element name="EndCreationTime" type="xs:date" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Used as end of date range filter.
							</xs:documentation>
						</xs:annotation>
					</xs:element>						
					<xs:element name="Pagination" type="ns:PaginationType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Standard pagination argument used to reduce response.
							</xs:documentation>
						</xs:annotation>
					</xs:element>	
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetMemberMessages -->
	<xs:element name="GetMemberMessagesResponse" type="ns:GetMemberMessagesResponseType"/>
	<xs:complexType name="GetMemberMessagesResponseType">
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="MemberMessage" type="ns:MemberMessageExchangeArrayType" minOccurs="0"/>
					<xs:element name="PaginationResult" type="ns:PaginationResultType" minOccurs="0"/>
					<xs:element name="HasMoreItems" type="xs:boolean" minOccurs="0">
					<xs:annotation>
						<xs:documentation>
							Specifies whether response has more items.
						</xs:documentation>
					</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddMemberMessage -->
	<xs:element name="AddMemberMessageRequest" type="ns:AddMemberMessageRequestType"/>
		<xs:complexType name="AddMemberMessageRequestType">
				<xs:annotation>
					<xs:documentation>
				        	Provides ability to send messages to eBay users who have asked 
				        	questions about active item listings
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="ns:AbstractRequestType">
						<xs:sequence>
							<xs:element ref="ns:ItemID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
							                	The unique ID of the item about which
							                	the question was asked.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="MemberMessage" type="ns:MemberMessageType">
								<xs:annotation>
									<xs:documentation>
							                	The message itself.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>			
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
	<!--  Call: AddMemberMessage -->
	<xs:element name="AddMemberMessageResponse" type="ns:AddMemberMessageResponseType"/>
			
			<xs:complexType name="AddMemberMessageResponseType">
				<xs:complexContent>
					<xs:extension base="ns:AbstractResponseType"/>
				</xs:complexContent>
			</xs:complexType>
	<!--  Call: SetReturnURL -->
	<xs:element name="SetReturnURLRequest" type="ns:SetReturnURLRequestType"/>
	<xs:complexType name="SetReturnURLRequestType">
		<xs:annotation>
			<xs:documentation>
          Adds, deletes, or modifies an authentication data entry for the application.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:AuthenticationEntry">
						<xs:annotation>
							<xs:documentation>
                  The authentication data entry that is being added, deleted, or modified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ApplicationDisplayName" type="xs:string">
						<xs:annotation>
							<xs:documentation>
							    This optional field sets a display name for the application, which is shown
							    on the eBay signin page.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Action" type="ns:ModifyActionCodeType">
						<xs:annotation>
							<xs:documentation>
                  Specifies whether the entry is being added, deleted, or modified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>

				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: SetReturnURL -->
	<xs:element name="SetReturnURLResponse" type="ns:SetReturnURLResponseType"/>
	<xs:complexType name="SetReturnURLResponseType">
		<xs:annotation>
			<xs:documentation>
          Returned after calling SetReturnURLRequest. This serves as confirmation that 
          the authentication data information was successfully submitted.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetReturnURL -->
	<xs:element name="GetReturnURLRequest" type="ns:GetReturnURLRequestType"/>
	<xs:complexType name="GetReturnURLRequestType">
		<xs:annotation>
			<xs:documentation>
          Returns all of the application authentication data entries 
          for the application. This call must be authenticated using the application's 
          username and password, rather than a token.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetReturnURL -->
	<xs:element name="GetReturnURLResponse" type="ns:GetReturnURLResponseType"/>
	<xs:complexType name="GetReturnURLResponseType">
		<xs:annotation>
			<xs:documentation>
			    Includes all the application authentication entries for the application.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="ApplicationDisplayName" type="xs:string">
						<xs:annotation>
							<xs:documentation>
							    Display name for the application shown on the eBay signin page.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:AuthenticationEntryArray">
						<xs:annotation>
							<xs:documentation>
							    The application authentication entries for the application.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetRuName -->
	<xs:element name="GetRuNameRequest" type="ns:GetRuNameRequestType"/>
	<xs:complexType name="GetRuNameRequestType">
		<xs:annotation>
			<xs:documentation>
          Returns a globally unique runame (unique identifier for an authentication data entry). 
          This call must be authenticated using the application's username and password, rather than
          a token.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ClientUseCase" type="xs:string">
						<xs:annotation>
							<xs:documentation>
                  Optional value that is appended to the generated runame.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetRuName -->
	<xs:element name="GetRuNameResponse" type="ns:GetRuNameResponseType"/>
	<xs:complexType name="GetRuNameResponseType">
		<xs:annotation>
			<xs:documentation>
          Contains the generated runame (unique identifier for an authentication data entry).
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="RuName" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  The generated globally unique runame.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: FetchToken -->
	<xs:element name="FetchTokenRequest" type="ns:FetchTokenRequestType"/>
	<xs:complexType name="FetchTokenRequestType">
		<xs:annotation>
			<xs:documentation>
          Gets an authentication token for the user. Can be used to get the token
          only after the user gives consent for the token to be generated via the
          eBay signin page. This call must be authenticated using the application's 
          username and password, rather than a token.
			</xs:documentation>
		</xs:annotation>		
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="SecretID" type="xs:string">
						<xs:annotation>
							<xs:documentation>
					        A value that is associated with the token retrival request. The secret ID is 
					        a value that is defined by the application, and is passed in redirect URL to
					        the eBay signin page. eBay recommends using a UUID for the secret ID value.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: FetchToken -->
	<xs:element name="FetchTokenResponse" type="ns:FetchTokenResponseType"/>
	<xs:complexType name="FetchTokenResponseType">
		<xs:annotation>
			<xs:documentation>
          Includes the authentication token for the user and the date it expires.
			</xs:documentation>
		</xs:annotation>		
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="eBayAuthToken" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
					        The authentication token for the user.
							</xs:documentation>
						</xs:annotation>					
					</xs:element>
					<xs:element name="HardExpirationTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
					        Date and time at which the token returned in eBayAuthToken expires
					        and can no longer be used to authenticate the user for that application.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetStore -->
	<xs:element name="GetStoreRequest" type="ns:GetStoreRequestType"/>
	<xs:complexType name="GetStoreRequestType">
		<xs:annotation>
			<xs:documentation>
				Retrieves the Store configuration for the user.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetStore -->
	<xs:element name="GetStoreResponse" type="ns:GetStoreResponseType"/>
	<xs:complexType name="GetStoreResponseType">
		<xs:annotation>
			<xs:documentation>
        Contains the Store configuration for the user.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:Store" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
      				  The Store configuration.
							</xs:documentation>
						</xs:annotation>					
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: SetStore -->
	<xs:element name="SetStoreRequest" type="ns:SetStoreRequestType"/>
	<xs:complexType name="SetStoreRequestType">
		<xs:annotation>
			<xs:documentation>
				Contains the Store configuration that is being set by this call.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:Store">
					  <xs:annotation>
					    <xs:documentation>
					      Specifies the Store configuration that is being set for the user.
					    </xs:documentation>
					  </xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: SetStore -->
	<xs:element name="SetStoreResponse" type="ns:SetStoreResponseType"/>
	<xs:complexType name="SetStoreResponseType">
	  <xs:annotation>
	    <xs:documentation>
	      Returned after calling SetStoreRequest. This serves as confirmation that 
        the Store configuration was successfully submitted.
	    </xs:documentation>
	  </xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetStoreCustomPage -->
	<xs:element name="GetStoreCustomPageRequest" type="ns:GetStoreCustomPageRequestType"/>
	<xs:complexType name="GetStoreCustomPageRequestType">
		<xs:annotation>
			<xs:documentation>
				Gets the custom page or pages for the user's Store.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="PageID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								If a PageID is specified, then that page is returned, and
								the returned page contains the page Content.
								If no PageID is specified, then all pages are returned, without
								the page Content.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetStoreCustomPage -->
	<xs:element name="GetStoreCustomPageResponse" type="ns:GetStoreCustomPageResponseType"/>
	<xs:complexType name="GetStoreCustomPageResponseType">
		<xs:annotation>
			<xs:documentation>
				Contains the custom page or pages for the user's Store.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:CustomPageArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The custom page or custom pages.
							</xs:documentation>
						</xs:annotation>					
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: SetStoreCustomPage -->
	<xs:element name="SetStoreCustomPageRequest" type="ns:SetStoreCustomPageRequestType"/>
	<xs:complexType name="SetStoreCustomPageRequestType">
	  <xs:annotation>
	    <xs:documentation>
	      Sets a Store custom page.
	    </xs:documentation>
	  </xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:CustomPage">
				  	<xs:annotation>
	    				<xs:documentation>
	   				  	The custom page being submitted.
	  					</xs:documentation>
	  				</xs:annotation>			
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: SetStoreCustomPage -->
	<xs:element name="SetStoreCustomPageResponse" type="ns:SetStoreCustomPageResponseType"/>
	<xs:complexType name="SetStoreCustomPageResponseType">
	  <xs:annotation>
	    <xs:documentation>
	      Returned after calling SetStoreCustomPageRequest. This serves as
	      confirmation that the custom page was successfully submitted.
	    </xs:documentation>
	  </xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:CustomPage" minOccurs="0">
		  			<xs:annotation>
	    				<xs:documentation>
	   				  	The custom page that was submitted.
	  					</xs:documentation>
						</xs:annotation>				
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetStoreOptions -->
	<xs:element name="GetStoreOptionsRequest" type="ns:GetStoreOptionsRequestType"/>
	<xs:complexType name="GetStoreOptionsRequestType">
		<xs:annotation>
			<xs:documentation>
				Retrieves the current list of Store configuration options.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetStoreOptions -->
	<xs:element name="GetStoreOptionsResponse" type="ns:GetStoreOptionsResponseType"/>
	<xs:complexType name="GetStoreOptionsResponseType">
		<xs:annotation>
			<xs:documentation>
        Contains the current list of options for Store configurations.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="BasicThemeArray" type="ns:StoreThemeArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
       					The current set of basic themes. Each basic theme definition
       					specifies a valid color scheme for the theme.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AdvancedThemeArray" type="ns:StoreThemeArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
       					The current set of advances themes. Unlike basic themes, you
       					can use any color	scheme with an advanced theme.       					
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="LogoArray" type="ns:StoreLogoArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
       					The current set of Store logos.       					
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SubscriptionArray" type="ns:StoreSubscriptionArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
       					The current set of Store subscription levels.       					
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddDispute -->
	<xs:element name="AddDisputeRequest" type="ns:AddDisputeRequestType" />
	<xs:complexType name="AddDisputeRequestType">
	  <xs:annotation>
	    <xs:documentation>
	     Creates a single new dispute when passed an item ID and transaction ID.
	     Can only be used by the seller at least 7 days after the transaction
	     is created, unless the buyer is no longer a registered eBay user or has
	     requested shipment to a country the seller does not ship to.
	    </xs:documentation>
	  </xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:DisputeExplanation">
						<xs:annotation>
							<xs:documentation>
							An explanation of the dispute that supplements
							the dispute reason. The values come from DisputeExplanationCodeType,
							but the value of DisputeReason determines which values
							are allowed. See the SOAP API Guide for details.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:DisputeReason">
						<xs:annotation>
							<xs:documentation>
							The top-level reason for the dispute. The value 
							comes from DisputeReasonCodeType and 
							determines which values of DisputeExplanation you
							can use. DisputeReason generates a notice to the buyer.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:ItemID">
						<xs:annotation>
							<xs:documentation>
							The eBay ID of the item being disputed,
							made available when the item was listed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:TransactionID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							The eBay ID of a transaction, created when
							a buyer commits to purchasing an item, but before
							the buyer has paid. A transaction
							ID is unique within an item but not across the entire
							eBay site. The transaction ID must be combined with an
							item ID to uniquely identify an item. Required.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddDispute -->
	<xs:element name="AddDisputeResponse" type="ns:AddDisputeResponseType" />

	<xs:complexType name="AddDisputeResponseType">
		<xs:annotation>
			<xs:documentation>
          Returned after calling AddDisputeRequest. The response serves as confirmation that 
          the dispute was successfully created.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:DisputeID">
					  <xs:annotation>
                        <xs:documentation>
	    				The unique identifier of the dispute.
                        </xs:documentation>
                      </xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: SetStorePreferences -->
	<xs:element name="SetStorePreferencesRequest" type="ns:SetStorePreferencesRequestType"/>
	<xs:complexType name="SetStorePreferencesRequestType">
		<xs:annotation>
			<xs:documentation>
				Contains the Store configuration that is being set by this call.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:StorePreferences">
						<xs:annotation>
							<xs:documentation>
					      Specifies the store preferences.
					    </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: SetStorePreferences -->
	<xs:element name="SetStorePreferencesResponse" type="ns:SetStorePreferencesResponseType"/>
	<xs:complexType name="SetStorePreferencesResponseType">
		<xs:annotation>
			<xs:documentation>
	      Returned after calling SetStorePreferencesRequest. This serves as confirmation that 
        the Store preferences were successfully submitted.
	    </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetStorePreferences -->
	<xs:element name="GetStorePreferencesRequest" type="ns:GetStorePreferencesRequestType"/>
	<xs:complexType name="GetStorePreferencesRequestType">
		<xs:annotation>
			<xs:documentation>
				Retrieves a user's Store preferences.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetStorePreferences -->
	<xs:element name="GetStorePreferencesResponse" type="ns:GetStorePreferencesResponseType"/>
	<xs:complexType name="GetStorePreferencesResponseType">
		<xs:annotation>
			<xs:documentation>
				Contains the Store preferences retrieved for a user.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:StorePreferences" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The user's Store preferences.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetDispute -->
	<xs:element name="GetDisputeRequest" type="ns:GetDisputeRequestType"/>
	<xs:complexType name="GetDisputeRequestType">
		<xs:annotation>
			<xs:documentation>
			Requests the record of a dispute with a given dispute ID.
			The dispute record contains the dispute state and other
			information.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:DisputeID">
						<xs:annotation>
							<xs:documentation>
							The unique identifier of the dispute, returned
							when the dispute is created.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetDispute -->
	<xs:element name="GetDisputeResponse" type="ns:GetDisputeResponseType"/>
	<xs:complexType name="GetDisputeResponseType">
		<xs:annotation>
			<xs:documentation>
            Returned after calling GetDisputeRequest. Returns the record of
            a single dispute, including the dispute state and other information.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:Dispute">
						<xs:annotation>
							<xs:documentation>
							The dispute record, containing information about
							the buyer, seller, dispute state, dispute status,
							comments added to the dispute, or resolutions.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetUserDisputes -->
	<xs:element name="GetUserDisputesRequest" type="ns:GetUserDisputesRequestType"/>
	
	<xs:complexType name="GetUserDisputesRequestType">
		<xs:annotation>
			<xs:documentation>
			Requests a list of disputes in which the calling
			user is either a buyer or seller.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="DisputeFilterType" type="ns:DisputeFilterTypeCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							A filter that specifies a subset of disputes to return.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DisputeSortType" type="ns:DisputeSortTypeCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							The value and sequence by which the returned
							disputes should be sorted.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Pagination" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							The virtual page number of the result set
							to display. A result set has a number of disputes
							divided into virtual pages, with 200 disputes
							per page. The response can only display one page. The
							first page returned is 1. Required.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetUserDisputes -->
	<xs:element name="GetUserDisputesResponse" type="ns:GetUserDisputesResponseType"/>
	<xs:complexType name="GetUserDisputesResponseType">
		<xs:annotation>
			<xs:documentation>
            Returns a list of disputes that involve the calling user
            as buyer or seller, in response to a GetUserDisputesRequest.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="StartingDisputeID" type="ns:DisputeIDType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							The DisputeID of the first dispute in the result set.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndingDisputeID" type="ns:DisputeIDType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							The DisputeID of the last dispute in the result set.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:DisputeArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							The array of disputes returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemsPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  			The number of disputes displayed per page. This
                  			value is preset to 200.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  			The page of the total result set returned in the current call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DisputeFilterCount" type="ns:DisputeFilterCountType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
							The number of disputes that involve the requester as
							buyer or seller and match a given filter type.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:PaginationResult" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							The result of the pagination, including the total number
							of virtual pages in the result set and the total number of
							disputes to be returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddDisputeResponse -->
	<xs:element name="AddDisputeResponseRequest" type="ns:AddDisputeResponseRequestType" />

	<xs:complexType name="AddDisputeResponseRequestType">
		<xs:annotation>
			<xs:documentation>
			Defines a response to an open dispute. The response can be a
			comment or can close the dispute. The requester must be the
			seller who opened the dispute.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:DisputeID">
						<xs:annotation>
							<xs:documentation>
							The unique identifier of the dispute,
							returned when the dispute was created.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MessageText" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							The text of a comment or response being posted
							to the dispute. Required when DisputeActivity is
							SellerAddInformation; otherwise, optional.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DisputeActivity" type="ns:DisputeActivityCodeType">
						<xs:annotation>
							<xs:documentation>
							The type of activity the seller is taking on the dispute.
							The allowed value is determined by the current value of
							DisputeState, returned in the dispute record by GetDispute
							or GetUserDisputes.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddDisputeResponse -->
	<xs:element name="AddDisputeResponseResponse" type="ns:AddDisputeResponseResponseType" />
	<xs:complexType name="AddDisputeResponseResponseType">
		<xs:annotation>
			<xs:documentation>
			Returned after taking an action on a dispute with AddDisputeResponseRequest. 
			Contains an EBayTime and a CallStatus.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: SellerReverseDispute -->
	<xs:element name="SellerReverseDisputeRequest" type="ns:SellerReverseDisputeRequestType"/>
	<xs:complexType name="SellerReverseDisputeRequestType">
		<xs:annotation>
			<xs:documentation>
			Allows a seller to reverse a dispute that has been closed. 
			The seller's Final Value Fee credit and the buyer's strike
			are both reversed.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:DisputeID">
						<xs:annotation>
							<xs:documentation>
							The unique identifier of the dispute that was
							returned when the dispute was created.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:DisputeResolutionReason" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							The reason the dispute is being reversed. Required.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: SellerReverseDispute -->
	<xs:element name="SellerReverseDisputeResponse" type="ns:SellerReverseDisputeResponseType"/>
	<xs:complexType name="SellerReverseDisputeResponseType">
		<xs:annotation>
			<xs:documentation>
             Returned after calling SellerReverseDisputeRequest.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetItemShipping -->
	<xs:element name="GetItemShippingRequest" type="ns:GetItemShippingRequestType"/>
	<xs:complexType name="GetItemShippingRequestType">
		<xs:annotation>
			<xs:documentation>
	Contains the input necessary to determine shipping information
	for an item.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:ItemID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
	The item ID that uniquely identifies the item listing for which
	to retrieve the data. Required input.							
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="QuantitySold" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
	The number of items sold.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DestinationPostalCode" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
	Destination country postal code (or zipcode, for US). Ignored if no 
	country code is provided. Optional tag for some countries. More likely to 
	be required for large countries.
						</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DestinationCountryCode" type="ns:CountryCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
	Destination country code.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


	<!--  Call: GetItemShipping -->
	<xs:element name="GetItemShippingResponse" type="ns:GetItemShippingResponseType"/>
	<xs:complexType name="GetItemShippingResponseType">
		<xs:annotation>
			<xs:documentation>
		Contains the data returned by the call. The shipping 
		details for the specified item are returned in a 
		ShippingDetails object.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:ShippingDetails">
						<xs:annotation>
							<xs:documentation>
		Shipping-related details for the specified item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetCrossPromotions -->
	<xs:element name="GetCrossPromotionsRequest" type="ns:GetCrossPromotionsRequestType"/>
	<xs:complexType name="GetCrossPromotionsRequestType">
		<xs:annotation>
			<xs:documentation>
			 Requests a list of cross-promoted items associated with a
			 referring item.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:ItemID">
						<xs:annotation>
							<xs:documentation>
							The unique ID of the referring item. The cross-promoted
							items will supplement this item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PromotionMethod" type="ns:PromotionMethodCodeType">
						<xs:annotation>
							<xs:documentation> 
							The cross-promotion method you want to use for the
							returned list, either UpSell or CrossSell.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PromotionViewMode" type="ns:TradingRoleCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							The role of the person requesting to view the cross-promoted
							items, either seller or buyer. Default is buyer.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetCrossPromotions -->
	<xs:element name="GetCrossPromotionsResponse" type="ns:GetCrossPromotionsResponseType"/>
	<xs:complexType name="GetCrossPromotionsResponseType">
		<xs:annotation>
			<xs:documentation>
             Returns a list of either upsell or cross-sell items for a given item ID.
			 The list can be filtered by the viewer's role, either buyer or seller. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="CrossPromotion" type="ns:CrossPromotionsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							  A list of cross-promoted items defined for a specific
							  referring item. The list is either upsell or cross-sell
							  items, according to the value of PromotionMethod in 
							  GetCrossPromotionsRequest.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetNotificationPreferences -->

			<xs:element name="GetNotificationPreferencesRequest"  type="ns:GetNotificationPreferencesRequestType"/>
			<xs:complexType name="GetNotificationPreferencesRequestType">
			 <xs:annotation>
			 			<xs:documentation>
						  Retrieves the requesting application's notification preferences.									
			 			</xs:documentation>
		   </xs:annotation>
				<xs:complexContent>
					<xs:extension base="ns:AbstractRequestType">
						<xs:sequence>
							<xs:element name="PreferenceLevel" type="ns:NotificationRoleCodeType">
								<xs:annotation>
								 <xs:documentation>
						       Specifies what type of Preference to retrieve.
								 </xs:documentation>
								</xs:annotation>
						 </xs:element>	
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
	<!--  Call: GetNotificationPreferences -->

			<xs:element name="GetNotificationPreferencesResponse"  type="ns:GetNotificationPreferencesResponseType"/>
			<xs:complexType name="GetNotificationPreferencesResponseType">
				 <xs:annotation>
			 			<xs:documentation>
						 Contains the requesting application's notification preferences.									
			 			</xs:documentation>
		   </xs:annotation>		
		    <xs:complexContent> 
					<xs:extension base="ns:AbstractResponseType">
						<xs:sequence>
							<xs:element ref="ns:ApplicationDeliveryPreferences" minOccurs="0">
							<xs:annotation>
 	   					 <xs:documentation>
					       Specifies application-based event preferences that have been enabled.
							 </xs:documentation>
							</xs:annotation>
						 </xs:element>	
							<xs:element ref="ns:UserDeliveryPreferenceArray" minOccurs="0">
							<xs:annotation>
						 	 <xs:documentation>
								 Specifies user-based event preferences that have been enabled.  
							 </xs:documentation>
							</xs:annotation>
						 </xs:element>	
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

	<!--  Call: SetNotificationPreferences -->
			<xs:element name="SetNotificationPreferencesRequest"  type="ns:SetNotificationPreferencesRequestType"/>
			<xs:complexType name="SetNotificationPreferencesRequestType">
				<xs:annotation>
					<xs:documentation>
						Used to manage your notification preferences. These preferences can be at the application level, or at the user level.
					</xs:documentation>
		  	</xs:annotation>		
			<xs:complexContent>
					<xs:extension base="ns:AbstractRequestType">
						<xs:sequence>
							<xs:element ref="ns:ApplicationDeliveryPreferences" minOccurs="0">
								<xs:annotation>
  	   						<xs:documentation>
										Specifies application-based event preferences that have been enabled.
									</xs:documentation>
								</xs:annotation>
						  </xs:element>	
							<xs:element ref="ns:UserDeliveryPreferenceArray" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										Array of NotificationEventEnableTypes. Each NotificationEventEnableType contains an EventSetting and an EventType.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

	<!--  Call: SetNotificationPreferences -->
 		<xs:element name="SetNotificationPreferencesResponse"  type="ns:SetNotificationPreferencesResponseType"/>
			<xs:complexType name="SetNotificationPreferencesResponseType">
			 <xs:annotation>
				<xs:documentation>
					Returned after a call to SetNotificationPreferences to indicate that the call succeeded.
				</xs:documentation>
		   </xs:annotation>		
		<xs:complexContent>
					<xs:extension base="ns:AbstractResponseType">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

	<!--  Call: GetPromotionRules -->
	<xs:element name="GetPromotionRulesRequest" type="ns:GetPromotionRulesRequestType"/>
	<xs:complexType name="GetPromotionRulesRequestType">
		<xs:annotation>
			<xs:documentation>
			 Requests a list of the cross-promotion rules associated with 
			 a specific referring item or store category.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:ItemID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							 The unique ID of the referring item for which
							 you want promotion rules. Specify a value for
							 either ItemID or StoreCategoryID, never both.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StoreCategoryID" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							 The unique ID of the store category for which you
							 want promotion rules. Specify a value for
							 either ItemID or StoreCategoryID, never both.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PromotionMethod" type="ns:PromotionMethodCodeType">
						<xs:annotation>
							<xs:documentation> 
							 The type of promotion rules to retrieve, either UpSell
							 or CrossSell.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetPromotionRules -->
	<xs:element name="GetPromotionRulesResponse" type="ns:GetPromotionRulesResponseType"/>
	<xs:complexType name="GetPromotionRulesResponseType">
		<xs:annotation>
			<xs:documentation>
              Returns a list of promotion rules associated with a specific
			  item or store category. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:PromotionRuleArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							  An array of upsell or cross-sell promotion rules
							  associated with the item or category specified in
							  the request. All rules in the array are either
							  upsell or cross-sell, according to the value of
							  PromotionMethod specified in GetPromotionRulesRequest.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: SetPromotionRules -->
	<xs:element name="SetPromotionRulesRequest" type="ns:SetPromotionRulesRequestType"/>
	<xs:complexType name="SetPromotionRulesRequestType">
		<xs:annotation>
			<xs:documentation>
			 Requests to define cross-promotion rules for an item
			 or store category.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:PromotionRuleArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							 A list of cross-promotion rules you want to set.
							 Each rule defines a referring item or store category
							 and the cross-promoted items or store categories.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: SetPromotionRules -->
	<xs:element name="SetPromotionRulesResponse" type="ns:SetPromotionRulesResponseType"/>
	<xs:complexType name="SetPromotionRulesResponseType">
		<xs:annotation>
			<xs:documentation>
          	  Returned after calling SetPromotionRulesRequest to indicate
			  whether the rules have been set successfully.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: ReviseCheckoutStatus -->
	<xs:element name="ReviseCheckoutStatusRequest" type="ns:ReviseCheckoutStatusRequestType"/>
	<xs:complexType name="ReviseCheckoutStatusRequestType">
		<xs:annotation>
			<xs:documentation>
				Enables a seller to update the status of an item after a user has gone through checkout.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ItemID" type="ns:ItemIDType">
						<xs:annotation>
							<xs:documentation>
								The item ID that uniquely identifies the item 
								listing for which to retrieve the data. ItemID is a 
								required input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TransactionID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
								Unique ID for the transaction associated with the checkout. 
								For Chinese auctions, the value passed in the TransactionId 
								argument must be 0 or the call will fail with an error. 
								Call GetItemTransactions or GetSellerTransactions to 
								determine the correct transaction ID.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="OrderID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Unique ID for a multi-item order. If specified, ItemID and
                  TransactionID are ignored in the same request. Changes to the 
                  checkout status are applied to the specified order as a whole 
                  (and thus to the child transactions associated with the order).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AmountPaid" type="ns:AmountType" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
								Amount the buyer paid for the item specified in ItemId. For 
								an eBay Stores item, the value passed in the AmountPaid 
								argument is the transaction price. For a US eBay Motors 
								item, AmountPaid is the total amount paid by 
								the buyer for the deposit. For regular auction items, the 
								value is the item purchase price. This amount does not 
								include the adjustment amount, if any.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PaymentMethodUsed" type="ns:BuyerPaymentMethodCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
								Payment method used by the buyer.
								Required if CheckoutStatus is Complete.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CheckoutStatus" type="ns:CompleteStatusCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
								The current status of the checkout process for the transaction. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ShippingService" type="ns:ShippingServiceCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
								Indicates the shipping service that would be used
								to ship the item (such as UPS Ground).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: ReviseCheckoutStatus -->
	<xs:element name="ReviseCheckoutStatusResponse" type="ns:ReviseCheckoutStatusResponseType"/>
	<xs:complexType name="ReviseCheckoutStatusResponseType">
		<xs:annotation>
			<xs:documentation>
				Returns the item ID and the estimated fees for the revised listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetOrders -->
	<xs:element name="GetOrdersRequest" type="ns:GetOrdersRequestType"/>
	<xs:complexType name="GetOrdersRequestType">
		<xs:annotation>
			<xs:documentation>
				Retrieves all of the orders for which the user is a participant (as
				either buyer or seller) that meet the criteria specified in the request
				object.
				
				There are two mutually exclusive sets of filtering input arguments
				that can be used to query for orders. The first set is based on specific
				order IDs (one or more order IDs are passed in the call). The second set
				is a combination of date range, order role, and order status. If one set
				of filtering arguments is used, the arguments for the other set should not
				be specified in the same call. If a given call to GetOrders includes both
				criteria sets, the query based on order IDs is used, and the criteria for
				date range/order status/order role is ignored.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:OrderIDArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								A set of orders to retrieve.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CreateTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The starting date of the date range for the orders to retrieve.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CreateTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The ending date of the date range for the orders to retrieve.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="OrderRole" type="ns:TradingRoleCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Filters the returned orders to only those where the user for 
								whom the call is being made is a participant in the order in the specified role.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="OrderStatus" type="ns:OrderStatusCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Filters the returned orders by order status.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetOrders -->
	<xs:element name="GetOrdersResponse" type="ns:GetOrdersResponseType"/>
	<xs:complexType name="GetOrdersResponseType">
		<xs:annotation>
			<xs:documentation>
				Returns the set of orders that match the order IDs or filter criteria specified.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="OrderArray" type="ns:OrderArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The set of orders that match the order IDs or filter criteria specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetSuggestedCategories -->
	<xs:element name="GetSuggestedCategoriesRequest" type="ns:GetSuggestedCategoriesRequestType"/>
	<xs:complexType name="GetSuggestedCategoriesRequestType">
	  <xs:annotation>
	    <xs:documentation>
	     Requests a list of up to 10 categories with
	     the highest percentage of listings whose titles or descriptions
	     contain the keywords you specify.
	    </xs:documentation>
	  </xs:annotation>
	<xs:complexContent>
				<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="Query" type="xs:string">
					  <xs:annotation>
					    <xs:documentation>
					     Specifies the search string, consisting of one or
					     more words to search for in the listing title. 
					  	 The words "and" and "or" are treated like any other
					  	 word. The * character is a wildcard. You can also use
					  	 certain modifiers (see the SOAP API Guide for details).
						</xs:documentation>
					  </xs:annotation>
					</xs:element>
					</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetSuggestedCategories -->
	<xs:element name="GetSuggestedCategoriesResponse" type="ns:GetSuggestedCategoriesResponseType"/>
	<xs:complexType name="GetSuggestedCategoriesResponseType">
	  <xs:annotation>
	    <xs:documentation>
	      Returns a list of categories with the highest number 
	      of listings whose titles or descriptions contain the keywords 
	      specified in a GetSuggestedCategoriesRequest.
	    </xs:documentation>
	  </xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:SuggestedCategoryArray" minOccurs="0">
					  <xs:annotation>
					    <xs:documentation>
					     Contains the categories that contain listings
					     that match the query string in the request. The array
					     can have up to 10 categories.  
					    </xs:documentation>
					  </xs:annotation>
					</xs:element>
					<xs:element name="CategoryCount" type="xs:int" minOccurs="0">
					  <xs:annotation>
					    <xs:documentation>
					    Indicates the number of categories in the array.
					    </xs:documentation>
					  </xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GeteBayOfficialTime -->
	<xs:element name="GeteBayOfficialTimeRequest" type="ns:GeteBayOfficialTimeRequestType"/>
	<xs:complexType name="GeteBayOfficialTimeRequestType">
	 <xs:annotation>
	   <xs:documentation>
	     Gets the official eBay system time in GMT.
	   </xs:documentation>
	 </xs:annotation>
		<xs:complexContent>
		 <xs:extension base="ns:AbstractRequestType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GeteBayOfficialTime -->
	<xs:element name="GeteBayOfficialTimeResponse" type="ns:GeteBayOfficialTimeResponseType"/>
	<xs:complexType name="GeteBayOfficialTimeResponseType">
		<xs:annotation>
			<xs:documentation>
				 Contains the official eBay system time in GMT.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent> 
			<xs:extension base="ns:AbstractResponseType">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetAllBidders -->
	<xs:element name="GetAllBiddersRequest" type="ns:GetAllBiddersRequestType"/>
	<xs:complexType name="GetAllBiddersRequestType">
		<xs:annotation>
			<xs:documentation>
		Contains the input to requests the list of bidders for a 
		given ItemID.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:ItemID">
						<xs:annotation>
							<xs:documentation>
		Specifies the item ID that uniquely identifies the item 
		listing for which to retrieve the data. ItemID is a 
		required input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CallMode" type="ns:GetAllBiddersModeCodeType">
						<xs:annotation>
							<xs:documentation>
		Specifies which bidder information to return.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetAllBidders -->
	<xs:element name="GetAllBiddersResponse" type="ns:GetAllBiddersResponseType"/>
	<xs:complexType name="GetAllBiddersResponseType">
		<xs:annotation>
			<xs:documentation>
		Includes the list of bidders for the requested item as part of the general item listing data. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
			<xs:sequence>
				<xs:element name="BidArray" type="ns:OfferArrayType">
					<xs:annotation>
						<xs:documentation>
		Contains a list of OfferType objects. Each
		OfferType object represents the data for one bidder and bid.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="HighBidder" type="ns:UserIDType" minOccurs="0">
					<xs:annotation>
						<xs:documentation>
		eBay user ID for the user with the highest bid (a second chance offer candidate).
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="HighestBid" type="ns:AmountType" minOccurs="0">
					<xs:annotation>
						<xs:documentation>
		Bid amount offered by the High Bidder.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetFinanceOffers -->
	<xs:element name="GetFinanceOffersRequest" type="ns:GetFinanceOffersRequestType"/>
	<xs:complexType name="GetFinanceOffersRequestType">
		<xs:complexContent>
			<xs:annotation>
				<xs:documentation>
					Retrieves either the current set of finance offers or a specific 
					finance offer.
				</xs:documentation>
			</xs:annotation>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="FinanceOfferID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
          			If specified, retrieves the finance offer indicated by this ID.
            	</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="LastModifiedDate" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
          			Date from which to search for finance offers. If this is specified but
          			FinanceOfferID is not, this call will return those finance offers that
          			have been changed since this date.
            	</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetFinanceOffers -->
	<xs:element name="GetFinanceOffersResponse" type="ns:GetFinanceOffersResponseType"/>
	<xs:complexType name="GetFinanceOffersResponseType">
		<xs:annotation>
			<xs:documentation>
				Contains either the number of finance offers and, if the detail level was set to 
				retrieve them, the current set of finance offers.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="Count" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Number of finance offers currently available.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:FinanceOfferArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Set of currently available finance offers or a set that contains
								a specific finance offer (if a particular finance offer ID was 
								specified in the call input).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetCategory2FinanceOffer -->
			<xs:element name="GetCategory2FinanceOfferRequest" type="ns:GetCategory2FinanceOfferRequestType"/>
			<xs:complexType name="GetCategory2FinanceOfferRequestType">
				<xs:annotation>
					<xs:documentation>
						Retrieves the promotional financing offers available in a specified category
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="ns:AbstractRequestType">
						<xs:sequence>
							<xs:element ref="ns:CategoryID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										Retrieve the promotional financing offers for this category.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="LastModifiedDate" type="xs:dateTime" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										Date from which to retrieve financing offers.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
	<!--  Call: GetCategory2FinanceOffer -->
	<xs:element name="GetCategory2FinanceOfferResponse" type="ns:GetCategory2FinanceOfferResponseType"/>
	<xs:complexType name="GetCategory2FinanceOfferResponseType">
		<xs:complexContent>
			<xs:annotation>
				<xs:documentation>
					Contains either the set of finance offers for a given category, or the number
					of finance offers for a given category.
				</xs:documentation>
			</xs:annotation>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="Count" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Number of finance offers that apply to the specified category.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:CategoryFinanceOfferArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Set of finance offers that apply to the specified category.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetApiAccessRules -->
	<xs:element name="GetApiAccessRulesRequest" type="ns:GetApiAccessRulesRequestType"/>
	<xs:complexType name="GetApiAccessRulesRequestType">
		<xs:annotation>
			<xs:documentation>
       		 Requests the rules for accessing eBay API calls and the
       		 application's daily and hourly usage of each. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
			 <xs:annotation>
  				<xs:documentation>
	    		 The base request type made to all calls. GetApiAccessRulesRequest
	    		 supports varying detail levels.
				</xs:documentation>
			</xs:annotation>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetApiAccessRules -->
	<xs:element name="GetApiAccessRulesResponse" type="ns:GetApiAccessRulesResponseType"/>
	<xs:complexType name="GetApiAccessRulesResponseType">
		<xs:annotation>
			<xs:documentation>
   			  Returns a list of API access rules, in response
   			  to a GetApiAccessRulesRequest.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="ApiAccessRule" type="ns:ApiAccessRuleType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  			  Contains the description of an API access rule, including the
                  			  call name, the application's current daily and hourly usage,
                  			  and other values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddOrder -->
	<xs:element name="AddOrderRequest" type="ns:AddOrderRequestType"/>
	<xs:complexType name="AddOrderRequestType">
		<xs:annotation>
			<xs:documentation>
				Combines two or more transactions into a single order. A transaction is
				the commitment by a buyer to purchase an item. On a successful call to
				AddOrder, the multiple transactions are combined into a single order.
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:Order">
						<xs:annotation>
							<xs:documentation>
								The order that is being created.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: AddOrder -->
	<xs:element name="AddOrderResponse" type="ns:AddOrderResponseType"/>
	<xs:complexType name="AddOrderResponseType">
		<xs:annotation>
			<xs:documentation>
				Returns a unique identifier for the order. A buyer may make a single
				payment to purchase all of the item transactions that are included
				in the order.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:OrderID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The unique identifier for the order.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CreatedTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The date and time the order was created.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetMyMessages -->
	<xs:element name="GetMyMessagesRequest" type="ns:GetMyMessagesRequestType" />
	<xs:complexType name="GetMyMessagesRequestType">
		<xs:annotation>
			<xs:documentation>
				Used to retrieve information about the messages and alerts sent to a given user. Depending on 
				the detail level, this information can include message and alert counts, resolution and flagged 
				status, message and/or alert headers, and message and/or alert body text.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:AlertIDs" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Contains a list of up to 10 AlertID values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:MessageIDs" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Contains a list of up to 10 MessageID values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetMyMessages -->
	
  <xs:element name="GetMyMessagesResponse" type="ns:GetMyMessagesResponseType"/>
	<xs:complexType name="GetMyMessagesResponseType">
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="Summary" type="ns:MyMessagesSummaryType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Summary data for a given user's alerts and messages. This includes the numbers of 
								new alerts and messages, unresolved alerts, flagged messages, and 
								total alerts and messages. The amount and type of data returned is the same whether 
								or not the request included specific AlertID or MessageID values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Alerts" type="ns:MyMessagesAlertArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Contains the alert information for each alert specified in AlertIDs. The amount and type of 
								information returned varies based on the requested detail level. Contains one 
								MyMessagesAlertType object per alert.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Messages" type="ns:MyMessagesMessageArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Contains the message information for each message specified in MessageIDs. The 
								amount and type of information returned varies based on the requested detail level. 
								Contains one MyMessagesMessageType object per message.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: ReviseMyMessages -->
	<xs:element name="ReviseMyMessagesRequest" type="ns:ReviseMyMessagesRequestType" />
	<xs:complexType name="ReviseMyMessagesRequestType">
		<xs:annotation>
			<xs:documentation>
				Use to set the read and flagged states of all messages specified in a request 
				by their MessageID values. ReviseMyMessages does not apply to alerts.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:MessageIDs" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Contains a list of up to 10 MessageID values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Read" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Changes the read states of all messages specified in a request 
								by their MessageID values. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Flagged" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Changes the flagged states of all messages specified in a request 
								by their MessageID values. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: ReviseMyMessages -->
	<xs:element name="ReviseMyMessagesResponse" type="ns:ReviseMyMessagesResponseType"/>
	<xs:complexType name="ReviseMyMessagesResponseType">
		<xs:annotation>
			<xs:documentation>
				The response to ReviseMyMessagesRequestType. If the request was successful, 
				ReviseMyMessages returns nothing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: DeleteMyMessages -->
	<xs:element name="DeleteMyMessagesRequest" type="ns:DeleteMyMessagesRequestType" />
	<xs:complexType name="DeleteMyMessagesRequestType">
		<xs:annotation>
			<xs:documentation>
			Use to remove delete selected alerts and messages for a given user. Alerts that require action and 
			have not been resolved by the user, can not be deleted.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ns:AlertIDs" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Contains a list of up to 10 AlertID values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:MessageIDs" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Contains a list of up to 10 MessageID values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: DeleteMyMessages -->
	<xs:element name="DeleteMyMessagesResponse" type="ns:DeleteMyMessagesResponseType"/>
	<xs:complexType name="DeleteMyMessagesResponseType">
		<xs:annotation>
			<xs:documentation>
				The response to DeleteMyMessagesRequestType. If the request was successful, 
				DeleteMyMessages returns nothing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetUserPreferences -->

			<xs:element name="GetUserPreferencesRequest" type="ns:GetUserPreferencesRequestType"/>
			<xs:complexType name="GetUserPreferencesRequestType">
				<xs:complexContent>
				  <xs:annotation>
				    <xs:documentation>
				      Retrieves a user's preferences. The set of preferences retrieved depends
				      on the set of boolean flags that is specified in the request.
				    </xs:documentation>
				  </xs:annotation>
					<xs:extension base="ns:AbstractRequestType">
						<xs:sequence>
							<xs:element name="ShowBidderNoticePreferences"  type="xs:boolean"/>
							<xs:element name="ShowCombinedPaymentPreferences"  type="xs:boolean">
							  <xs:annotation>
							    <xs:documentation>
							      If this boolean flag is specified, the user's combined payment preferences
							      are retrieved.
							    </xs:documentation>
							  </xs:annotation>
							</xs:element>
							<xs:element name="ShowCrossPromotionPreferences"  type="xs:boolean">
							  <xs:annotation>
							    <xs:documentation>
							      If this boolean flag is specified, the user's cross promotion preferences
							      are retrieved.
							    </xs:documentation>
							  </xs:annotation>
							</xs:element>
							<xs:element name="ShowSellerPaymentPreferences"  type="xs:boolean">
							  <xs:annotation>
							    <xs:documentation>
							      If this boolean flag is specified, the user's seller payment preferences
							      are retrieved.
							    </xs:documentation>
							  </xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

	<!--  Call: GetUserPreferences -->



			<xs:element name="GetUserPreferencesResponse" type="ns:GetUserPreferencesResponseType"/>
			<xs:complexType name="GetUserPreferencesResponseType">
			  <xs:annotation>
			    <xs:documentation>
			      Contains the user's preferences that were requested.
			    </xs:documentation>
			  </xs:annotation>
				<xs:complexContent>
					<xs:extension base="ns:AbstractResponseType">
						<xs:sequence>
							<xs:element ref="ns:BidderNoticePreferences" minOccurs="0"/>
							<xs:element ref="ns:CombinedPaymentPreferences" minOccurs="0">
							  <xs:annotation>
							    <xs:documentation>
							      Contains the user's combined payment preferences.
							    </xs:documentation>
							  </xs:annotation>
							</xs:element>
							<xs:element ref="ns:CrossPromotionPreferences" minOccurs="0">
							  <xs:annotation>
							    <xs:documentation>
							      Contains the user's cross promotion preferences.
							    </xs:documentation>
							  </xs:annotation>
							</xs:element>
							<xs:element ref="ns:SellerPaymentPreferences" minOccurs="0">
							  <xs:annotation>
							    <xs:documentation>
							      Contains the user's seller payment preferences.
							    </xs:documentation>
							  </xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

	<!--  Call: SetUserPreferences -->

			<xs:element name="SetUserPreferencesRequest" type="ns:SetUserPreferencesRequestType"/>
			<xs:complexType name="SetUserPreferencesRequestType">
			  <xs:annotation>
			    <xs:documentation>
			      Sets the user's preferences to those specified in the request.
			    </xs:documentation>
			  </xs:annotation>
				<xs:complexContent>
					<xs:extension base="ns:AbstractRequestType">
						<xs:sequence>
							<xs:element ref="ns:BidderNoticePreferences" minOccurs="0"/>
							<xs:element ref="ns:CombinedPaymentPreferences" minOccurs="0">
							  <xs:annotation>
							    <xs:documentation>
							      The user's combined payment preferences to be set.
							    </xs:documentation>
							  </xs:annotation>
							</xs:element>
							<xs:element ref="ns:CrossPromotionPreferences" minOccurs="0">
							  <xs:annotation>
							    <xs:documentation>
							      The user's cross promotion preferences to be set.
							    </xs:documentation>
							  </xs:annotation>
							</xs:element>
							<xs:element ref="ns:SellerPaymentPreferences" minOccurs="0">
							  <xs:annotation>
							    <xs:documentation>
							      The user's seller payment preferences to be set.
							    </xs:documentation>
							  </xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

	<!--  Call: SetUserPreferences -->

			<xs:element name="SetUserPreferencesResponse" type="ns:SetUserPreferencesResponseType"/>
			<xs:complexType name="SetUserPreferencesResponseType">
			  <xs:annotation>
			    <xs:documentation>
			      Returned after a call to SetUserPreferences to indicate that the call succeeded.
			    </xs:documentation>
			  </xs:annotation>
				<xs:complexContent>
					<xs:extension base="ns:AbstractResponseType">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

	<!--  Call: GetBestOffers -->
	<xs:element name="GetBestOffersRequest" type="ns:GetBestOffersRequestType"/>
	<xs:complexType name="GetBestOffersRequestType">
		<xs:annotation>
			<xs:documentation>
				Retrieves best offers associated with ItemID according to
				the BestOfferStatus filter, where Active is the default.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ItemID" type="ns:ItemIDType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The item for which Best Offer data is to be returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BestOfferID" type="ns:BestOfferIDType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The specific Best Offer for which details are to be retrieved.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BestOfferStatus" type="ns:BestOfferStatusCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								A filter determining which Best Offers to return for an item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Call: GetBestOffers -->
	<xs:element name="GetBestOffersResponse" type="ns:GetBestOffersResponseType"/>
	<xs:complexType name="GetBestOffersResponseType">
		<xs:annotation>
			<xs:documentation>
				The details of all best offers associated with the item (specified in the input) and having a particular status. For 
				notification client usage, this response has a single Best Offer.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ns:BestOfferArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								All best offers for the item according to the filter
								or best offer id (or both) used in the input. The buyer
								and seller messages are returned only if the detail 
								level is defined.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ns:Item" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							  The item for which Best Offers were retrieved.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


			<!--   Copyright (C) eBay, Inc. (2003). All Rights Reserved. -->

	<!-- Definition of AmountType BaseComponent-->
	<xs:complexType name="AmountType">
      <xs:annotation>
		<xs:documentation>
	        Basic type for specifying monetary amounts. A decimal value (e.g., 1.00)
	        is meaningful as an amount when accompanied by a specification of the currency,
	        in which case the value specifies the amount in that currency.
	        An AmountType expresses both the value (a decimal) and the currency. 
	        Details such as prices, fees, costs, and payments are specified as amount types.
		</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="currencyID" type="ns:CurrencyCodeType" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="BasicAmountType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="currencyID" type="ns:CurrencyCodeType" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<!-- Definition of MeasureType -->
	<xs:complexType name="MeasureType">
      <xs:annotation>
			<xs:documentation>
        Basic type for specifying measures. A decimal value (e.g., 10.25) is meaningful 
        as a measure when accompanied by a definition of the unit of measure (e.g., Pounds), 
        in which case the value specifies the quantity of that unit. 
        A MeasureType expresses both the value (a decimal) and the unit. 
        Details such as shipping weights are specified as measure types.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:decimal">
				<xs:attribute name="unit" type="xs:token" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<!-- Definition of QuantityType -->
	<xs:complexType name="QuantityType">
      <xs:annotation>
			<xs:documentation>
        Basic type for specifying quantities.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:decimal">
				<xs:attribute name="unit" type="xs:token" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<!-- Definition of UUIDType (as a simpleType)-->
	<xs:simpleType name="UUIDType">
		<xs:annotation>
			<xs:documentation>
		  Specifies a universally unique identifier. The UUID can 
        only contain digits from 0-9 and letters from A-F. The 
        UUID must be 32 characters long.  For example, 
        1FB02B2-9D27-3acb-ABA2-9D539C374228
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:length value="36"/>
		</xs:restriction>
	</xs:simpleType>

			
			<!--  

##### from file eBLBaseComponents/eBLBaseComponents.xsd #####

-->
		<xs:annotation>
		<xs:documentation>
			This file defines re-useable base and aggregate components of the 

			eBay Business Language (eBL) that would be used to compose 

			message payloads for eBay APIs.

 		</xs:documentation>
	</xs:annotation>
<xs:simpleType name="ItemIDType">
		<xs:annotation>
			<xs:documentation>

        Type that represents the unique identifier for a single item listing.

			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
<xs:simpleType name="UserIDType">
		<xs:restriction base="xs:string">
			<xs:length value="127"/>
		</xs:restriction>
	</xs:simpleType>
<xs:simpleType name="OrderIDType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
<xs:simpleType name="BestOfferIDType">
		<xs:annotation>
			<xs:documentation>
				Unique identifier for a best offer (to differentiate from
				other best offers for the same item).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
<xs:complexType name="ApiAccessRuleType">
		<xs:annotation>
			<xs:documentation> 
			 Contains the definition of an API access rule.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CallName" type="xs:string">
				<xs:annotation>
					<xs:documentation>
					 The name of the call that has an access rule.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CountsTowardAggregate" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>
					Whether access to this call counts toward the application's 
					aggregate limit for all calls.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DailyHardLimit" type="xs:int">
				<xs:annotation>
					<xs:documentation>
					The number of calls per day that your application
					can make to this call before being refused. The
					day starts at midnight, 00:00:00 PST. Note that the
					time is in PST, not GMT.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DailySoftLimit" type="xs:int">
				<xs:annotation>
					<xs:documentation>
					 The number of calls per day that your application
					 can make to this call before you receive a warning.
					 The day starts at midnight, 00:00:00 PST.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DailyUsage" type="xs:int">
				<xs:annotation>
					<xs:documentation>
					 The number of times your application has used this
					 call today. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HourlyHardLimit" type="xs:int">
				<xs:annotation>
					<xs:documentation>
					 The number of calls per hour that your application
					 can make to this call before being refused. Each count
					 begins on the hour, at 12:00:00, 1:00:00, and so on.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HourlySoftLimit" type="xs:int">
				<xs:annotation>
					<xs:documentation>
					 The number of calls per hour that your application
					 can make to this call before you receive a warning.
					 Each count begins on the hour, at 12:00:00, 1:00:00, and so on.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HourlyUsage" type="xs:int">
				<xs:annotation>
					<xs:documentation>
					 The number of times your application has used this
					 call this hour.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ModTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
					 The date and time this access rule was last modified.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RuleCurrentStatus" type="ns:AccessRuleCurrentStatusCodeType">
				<xs:annotation>
					<xs:documentation>
					 Your application's current status for this rule,
					 including whether the rule is not set, the hourly
					 limit is exceeded, or the daily limit exceeded.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RuleStatus" type="ns:AccessRuleStatusCodeType">
				<xs:annotation>
					<xs:documentation>
					  The status of the access rule, including whether the
					  rule is turned on or off, or whether the application is
					  currently blocked from using this call.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="AccountEntryType">
		<xs:annotation>
			<xs:documentation> 

        Contains the data for a single account detail entry. Each detail entry is a

        transaction posted to the account and may be: a credit, a debit, or an

        administrative action (such as an update putting a credit card on file for

        the account).

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AccountDetailsEntryType" type="ns:AccountDetailEntryCodeType">
				<xs:annotation>
					<xs:documentation>

                Indicates the type of transaction or reason for the transaction. For example,

                a value of FeeGallery indicates a debit for listing an item in the Gallery.

                Possible values are enumerated in the AccountDetailEntryCodeType code list.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
				  A description of the transaction. Returned with compatibility
				  level 387.
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:Balance">
				<xs:annotation>
					<xs:documentation>
                Balance after the account entry's credit or debit amount has been applied.
                Can be 0.00. With compatibility level 387, the value is positive for debits
				and negative for credits, reversing the sign of earlier versions.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Credit" type="ns:AmountType">
				<xs:annotation>
					<xs:documentation>
                Credit amount for a detail entry. Will be 0.00 if the entry is a debit.
                Obsolete (not returned) with compatibility level 387 and higher.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Date" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
                Date entry was posted to the account, in GMT. (Also see the Data Types
                appendix for more information on how GMT dates are handled in SOAP.)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Debit" type="ns:AmountType">
				<xs:annotation>
					<xs:documentation>
                Debit amount for this detail entry. Will be 0.00 if the entry is a credit.
				Obsolete (not returned) with compatibility level 387 and higher.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GrossDetailAmount" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
                Gross fees that are assessed by eBay (net fees plus VAT, if any).
				Returned even if VAT does not apply.
				With compatibility level 387, the value is positive for debits
				and negative for credits, reversing the sign of earlier versions.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ItemID">
				<xs:annotation>
					<xs:documentation>

                Item ID (if the account detail entry is associated with an item listing) or

                0 (if no item listing is associated with the account entry).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Memo" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Memo line for the account entry, can be an empty string.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NetDetailAmount" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
                Net fees that are assessed by eBay, excluding additional surcharges and VAT (if any).
				Returned even if VAT does not apply.
				With compatibility level 387, the value is positive for debits
				and negative for credits, reversing the sign of earlier versions.
 					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RefNumber" type="xs:string">
				<xs:annotation>
					<xs:documentation>

                eBay reference number for the account entry. May return no value for some

                account transactions, such as an administrative action like placing the

                user's credit card on file.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VATPercent" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						VAT rate for the item. When the VATPercent is specified, the 
						item's VAT information appears on the item's listing page. In 
						addition, the seller can choose to print an invoice that 
						includes the item's net price, VAT percent, VAT amount, and 
						total price, as required by European law. Since VAT rates vary 
						depending on the item and on the user's country of residence, a 
						seller is responsible for entering the correct VAT rate; it is 
						not calculated by eBay. To specify a VATPercent, a seller must 
						have a VAT-ID registered with eBay and must be listing the item 
						on a site in the European Union or Switzerland. Max precision 3 
						decimal places. Max length 5 characters. Note: The View Item 
						page displays the precision to 2 decimal places with no 
						trailing zeros. However, the full value you send in is stored.
						Returned for all users, not just VAT users, with GetAccountResponse.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="AccountEntriesType">
		<xs:annotation>
			<xs:documentation> 

        Collection of zero, one, or multiple individual detail account entries. Contains

        one AccountEntry object for each account entry returned. (See the schema

        documentation for AccountEntryType for details on its properties.)

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:AccountEntry" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

                Contains the data for one account entry. (See the schema

                documentation for AccountEntryType for details on its properties.)

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="AdditionalAccountType">
		<xs:annotation>
			<xs:documentation>

            Contains the data for one additional account. An additional account is

            created when the user has an active account and changes country of

            registry (i.e., registers with the eBay site for the new country). A

            new account is created and the old account becomes inactive as an

            additional account. A user who never changes country of residency while

            having an account will never have any additional accounts.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Balance">
				<xs:annotation>
					<xs:documentation>

                Indicates the current balance of the additional account.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:Currency">
				<xs:annotation>
					<xs:documentation>

                Indicates the currency in which monetary amounts for the additional account

                are expressed.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:AccountCode">
				<xs:annotation>
					<xs:documentation>

                Indicates the unique identifier for the additional account (the account ID).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="AccountSummaryType">
		<xs:annotation>
			<xs:documentation>

        Summary data for the requesting user's seller account as a whole. This includes a

        balance for the account, any past due amount and date, and defining data for

        additional accounts (if the user has changed country of residency while having an

        active eBay account).

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AccountState" type="ns:AccountStateCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Indicates the current state of the account (such as active or inactive).

                Possible values are enumerated in the AccountStateCodeType code list.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InvoicePayment" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
				  Specifies payment made since the previous invoice, but is
				  returned only if AccountHistorySelection is LastInvoice or Specified
				  Invoice. With compatibility level 387, the value is positive for 
				  debits and negative for credits, reversing the sign of earlier versions.
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InvoiceCredit" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
				  Specifies credits granted since the previous invoice, but
				  is only returned AccountHistorySelection is LastInvoice or Specified
				  Invoice. 
				  With compatibility level 387, the value is positive for debits 
				  and negative for credits, reversing the sign of earlier versions.
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InvoiceNewFee" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
				  Specifies fees incurred since the last invoice, including
				  tax if applicable. Returned only if AccountHistorySelection 
				  is LastInvoice or Specified Invoice. With compatibility level 387, 
				  the value is positive for debits and negative for credits, reversing 
				  the sign of earlier versions.
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalAccount" type="ns:AdditionalAccountType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
                Contains the data for one additional account. An AccountSummaryType object
                may return zero, one, or multiple additional accounts. See the schema
                documentation for AdditionalAccountType for details on additional accounts.
				With compatibility level 387, the value is positive for debits
				and negative for credits, reversing the sign of earlier versions.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:AmountPastDue" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
                Amount past due, 0.00 if not past due.
				With compatibility level 387, the value is positive for debits
				and negative for credits, reversing the sign of earlier versions.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BankAccountInfo" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                First four digits of the bank account the user associated with the seller

                account (with remainder Xed-out). This may be an empty string depending

                upon the payment type the user selected for the account (e.g., if no

                debit-card specified).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BankModifyDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Indicates the date and time BankAccountInfo was last modified, in GMT.

                (Also see the Data Types appendix for more information on how GMT dates are

                handled in SOAP.) This may be an empty string depending upon the payment

                type the user selected for the account (e.g., if no debit-card specified).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BillingCycleDate" type="xs:int">
				<xs:annotation>
					<xs:documentation>

                Indicates the billing cycle in which eBay sends a billing invoice to the

                user. A value of 0 (zero) indicates an invoice sent on the last day of the

                month. A value of 15 indicates an invoice sent on the 15th day of the

                month.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreditCardExpiration" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Expiration date for the credit card selected by the user as payment method

                for the account, in GMT. (Also see the Data Types appendix for more

                information on how GMT dates are handled in SOAP.) Empty string if no

                credit card is on file or if the account is inactive - even if there is a

                credit card on file.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreditCardInfo" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Last four digits of the credit card the user selected as payment method for

                the account. Empty string if no credit is on file.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreditCardModifyDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Indicates the date and time credit card or credit card expiration date was

                last modified, in GMT. (Also see the Data Types appendix for more

                information on how GMT dates are handled in SOAP.) This may be an empty

                string depending on the payment method the user selected for the account

                (e.g., Empty string if no credit card is on file.)

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:CurrentBalance">
				<xs:annotation>
					<xs:documentation>
                Current balance for the account. Can be 0.00, positive, or negative.
				With compatibility level 387, the value is positive for debits
				and negative for credits, reversing the sign of earlier versions. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:Email" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Email address for the user.  Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InvoiceBalance" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Amount of last invoice. 0.00 if account not yet invoiced.
				With compatibility level 387, the value is positive for debits
				and negative for credits, reversing the sign of earlier versions.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InvoiceDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Date of last invoice sent by eBay to the user, in GMT. (Also see the Data

                Types appendix for more information on how GMT dates are handled in SOAP.)

                Empty string if this account has not been invoiced yet.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastAmountPaid" type="ns:AmountType">
				<xs:annotation>
					<xs:documentation>
                Amount of last payment posted, 0.00 if no payments posted.
				With compatibility level 387, the value is positive for debits
				and negative for credits, reversing the sign of earlier versions. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastPaymentDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Date of last payment by the user to eBay, in GMT. (Also see the Data Types

                appendix for more information on how GMT dates are handled in SOAP.) Empty

                string if no payments have been posted. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PastDue" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>

                Indicates whether the account has past due amounts outstanding. A value of

                true indicates that the account is past due. A value of false indicates the

                account is current.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaymentMethod" type="ns:SellerPaymentMethodCodeType">
				<xs:annotation>
					<xs:documentation>

                Indicates the method the user selected to pay eBay with for the account.

                The values for PaymentMethod vary from one global eBay site to the next.

                Payment methods are enumerated in the SellerPaymentMethodCodeType code

                list.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="AttributeType">
		<xs:annotation>
			<xs:documentation> 

      A salient aspect or feature of an item. Used in the Item Specifics 

      section of a listing to describe an item 

      in a standard way so that buyers can find it more easily.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Value" type="ns:ValType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            List of one or more valid values for the attribute.

            See the Developer's Guide topics on Item Specifics and Pre-filled Item Information 

            for information about determining valid attribute values.

			       </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="attributeID" type="xs:int">
			<xs:annotation>
				<xs:documentation>

         Constant value that identifies the attribute in a language-independent way.

         Unique within the attribute set.

         See the Developer's Guide topics on Item Specifics and Pre-filled Item Information 

         for information about determining valid attribute IDs.

				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
<xs:complexType name="AttributeSetType">
		<xs:annotation>
			<xs:documentation> 
      (in/out) A set of salient aspects or features that describe an item in a standardized way.
      Most commonly used in the Item Specifics section of a listing.
      See the Developer's Guide information on 
      working with Item Specifics and Pre-filled Item Information.
      See the Developer's Guide for information about 
      characteristics meta-data and how to determine when attributes are required.
               </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Attribute" type="ns:AttributeType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            A salient aspect or feature of an item. Used to describe an item 

            in a standard way so that buyers can find it more easily. 

            In item-listing requests, multiple attributes can be specified. 

            Some categories (e.g., Tickets) always require certain attributes to be specified. 

            Therefore, in item-listing requests, specify "editable" attributes 

            (Type 0 and editable Type 2 attributes) 

            that are identified as required in the characteristics set meta-data. 

            See the guide for information about characteristics meta-data, how to determine 

            the valid attributes for a category, and how to determine whether attributes

            are required.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="attributeSetID" type="xs:int">
			<xs:annotation>
				<xs:documentation>

         Constant value that identifies the attribute set in a language-independent way.

         Unique across all eBay sites. Corresponds to a characteristics set ID. 

         Call GetCategory2CS to determine valid characteristics set IDs.

				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="attributeSetVersion" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>

         Version of the attribute set being specified (in requests) or that is

         currently on the site. This value changes each time changes are made to the mappings.

         The current version value is not necessarily greater than the previous

         value. Therefore, when comparing versions, only compare whether the

         value has changed.

				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
<xs:complexType name="AttributeSetArrayType">
		<xs:annotation>
			<xs:documentation> 

		(in/out) Applicable for listings that include eBay's Item Specifics or Pre-filled Item Information features.
      A list of attribute sets. An attribute set contains a list of attributes
      that describe category-specific aspects or features of an item in a standardized way.
      See the Developer's Guide for more information. In item-listing requests, 
      this property is required if attributes are identified as required in the 
      characteristics set meta-data. 
      See the Developer's Guide for information about characteristics meta-data and how to 
      determine when attributes are required.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AttributeSet" type="ns:AttributeSetType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Contains a list of attributes that describe category-specific aspects or 
            features of an item in a standardized way. 
            An AttributeSetArrayType can contain a maximum of 2 full attribute sets 
            (one for each category in which the item is listed) if the primary and secondary categories 
            are mapped to different characteristics sets. If they are mapped to the same characteristics set, 
            the AttributeSetArrayType can contain one full attribute set.
            An AttributeSetArrayType can also contain any number of additional site-wide attribute sets.
            In item-listing requests, this property is required if attributes 
            are identified as required in the characteristics set meta-data. 
            See the Developer's Guide for information about 
            characteristics meta-data and validation rules that are applicable when listing items.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="LookupAttributeArrayType">
		<xs:annotation>
			<xs:documentation> 

       A list of optional attributes and values that the seller wants to include in the listing. 

       Enables you to specify attributes by name rather than by ID.

       Only valid when using AddItem for items in Media categories 

       (Books, DVD and Movies, Music, and Video Game categories). 

       You can pass either AttributeSetArrayType or 

       LookupAttributeArrayType, but you cannot pass both containers in the same request.

       See the Developer's Guide for additional information.

       Input only.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LookupAttribute" type="ns:LookupAttributeType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            An optional attributes that the seller wants to include in the listing. 

            Enables you to specify an attribute by name rather than by ID.

            Only valid in Media categories (Books, DVD and Movies, Music, and Video Game categories). 

            See LookupAttributeType.

            Input only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="LookupAttributeType">
		<xs:annotation>
			<xs:documentation> 

          An optional attribute that the seller wants to include in the listing. 

          Enables you to specify an attribute by name rather than by ID.

          Only valid in Media categories (Books, DVD and Movies, Music, and Video Game categories).

          Currently, only the Condition attribute is supported.

	       Input only.

				</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation> 

            The literal name of the attribute. Pass "Condition" (without quotes).

            Input only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Value" type="xs:string">
				<xs:annotation>
					<xs:documentation> 

            The literal name of the attribute value. Pass "New" or "Used" (without quotes).

            Input only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AuthenticationEntry" type="ns:AuthenticationEntryType"/>
<xs:complexType name="AuthenticationEntryType">
		<xs:annotation>
			<xs:documentation>
			
			  A set of authentication data for an application.

    	</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AcceptURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            The URL the end-user is redirected to after consenting to the token authorization.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrivacyPolicyURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            The privacy policy URL that is shown to the user on the eBay sign-in page

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RejectURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            The URL the end-user is redirected to if he or she does not consent to the 
            
            token authorization.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RuName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            The unique identifier for the authentication entry.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TokenReturnMethod" type="ns:TokenReturnMethodCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Specifies whether or not to return the token in the HTTP response stream 
            
            sent to the accept URL.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="BuyerType">
		<xs:annotation>
			<xs:documentation>

          Contains information about a user as a buyer.

				</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:ShippingAddress" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Contains the address of the buyer in the transaction, to which the seller

            would ship the item(s). See AddressType for its child elements.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CategoryType">
		<xs:annotation>
			<xs:documentation>

        Container for data on one listing category.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			
			<xs:element name="BestOfferEnabled" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						Whether the category supports best offers.
					</xs:documentation>
				</xs:annotation>
			</xs:element>					
			<xs:element name="AutoPayEnabled" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates that the category supports immediate payment.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="B2BVATEnabled" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates that the category supports business-to-business (B2B) VAT

            listings. Applicable for the eBay Germany (DE), Austria (AT), or Switzerland

            (CH) site only.

			    Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CatalogEnabled" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, the category is associated with catalog content and the corresponding

            catalog is identified by the characteristics set ID. See CharacteristicsSets.

            As the Pre-filled Item Information feature uses the Item Specifics feature, the

            set of catalog-enabled categories is a subset of the categories that are mapped

            to characteristics sets. Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryID" type="xs:string">
				<xs:annotation>
					<xs:documentation> 

            Category ID for the category represented by the CategoryType object.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryLevel" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Indicates depth of the category in the overall category hierarchy for the
            specified site. If CategoryLevel has a value of 2, then the category is two
            levels below the root category. 
            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Textual name of the category indicated in CategoryID. Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryParentID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Category ID identifying the category that is parent in the category hierarchy

            to the category indicated in CategoryID. Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryParentName" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Textual name of the category indicated in CategoryParentID. Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductFinderID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Returned from GetCategory2CS calls. Supports listing with Pre-filled Item Information.

            Specifies the product finder ID associated with this category, if any. Only

            returns a value when ProductFinderAvailable is true. Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductSearchPageAvailable" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Returned from GetCategory2CS calls. Supports listing with Pre-filled Item Information.

            If the category supports single-attribute search, this field returns a value of

            true. Otherwise this field is returned as null or false. Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductFinderAvailable" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Returned from GetCategory2CS calls. Supports listing with Pre-filled Item Information.

            If the category supports a product finder-based search, this field returns a

            value of true. Otherwise this field returns null or false. Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductFinderIDs" type="ns:ExtendedProductFinderIDType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="CharacteristicsSets" type="ns:CharacteristicsSetType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Returned from GetCategory2CS calls. 

            A list of one or more characteristics sets mapped to the category. Use this

            information when working with Item Specifics (Attributes) and Pre-filled Item

            Information (Catalogs) functionality. Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expired" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates a category that has expired and to which items may not be

            listed. Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IntlAutosFixedCat" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates that the category is a fixed-fee category. Use this

            information to identify categories are not eligible for eBay Stores Inventory

            format listings. You cannot list eBay Store Inventory format listings in

            fixed-fee categories on international sites. Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LeafCategory" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates that the category indicated in CategoryID is a leaf category,

            in which items may be listed (if the category is not also expired or virtual).

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Virtual" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates the that category indicated in CategoryID is a

            virtual category, to which items may not be listed.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NumOfItems" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            The total quantity of matching items in the category.
            In the GetSearchResults response, matching categories at the same level 
            (i.e., sibling categories) are sorted by this value. That is, if the request 
            specifies that fewer categories or subcategories should be returned, 
            the ones with the most matching items are returned first. 
            See the Developer's guide for more information.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerGuaranteeEligible" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates whether this category is eligible for Motors Seller Guarantee program.

            This tag is being emitted for eligible categories only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ORPA" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
					Indicates whether this category overrides 
					the value of ReservePriceInclusive for the site. If 
					ReservePriceInclusive for the site is true, and ORPA for
					the category is also true, the override is in effect and
					the category does not allow reserve prices.
					If ReservePriceInclusive is true and ORPA is false,
					the category does allow reserve prices.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ORRA" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
	    If true, indicates this category allows or disallows reduce reserve price
	    depending on the prevailing site configuration.  Indicates this category
	    is an exception to the normal policy for the listing site re. reserve price.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LSD" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
	    If true, indicates this category does not permit items to be listed with Lot Size.  
	    Otherwise, it is not returned.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CategoryArrayType">
		<xs:annotation>
			<xs:documentation> 

            Container for a list of categories.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Category" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            Contains the data for one category. See the schema documentation for

            CategoryType for details on its properties and their meanings.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ExtendedProductFinderIDType">
		<xs:sequence>
			<xs:element name="ProductFinderID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            A list of product finder IDs. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductFinderBuySide" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            If true, the product finder can be used as input to GetSearchResults
            to search for listings with Item Specifics on the eBay site.
            If false or not present, the product finder can be used as input to 
            GetProductSearchResults to search for catalog data (Pre-filled Item Information) 
            that a seller might want to include in a listing.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CharacteristicType">
		<xs:annotation>
			<xs:documentation>

        A salient aspect or feature of an item. Used to describe an item in a

        standard way so that buyers can find it more easily. An individual,

        standardized characteristic that is common to all items within the

        specified characteristics set. Applicable when working with Item

        Specifics (Attributes) and Pre-filled Item Information (Catalogs)

        functionality. See the Developer's Guide for more information.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:AttributeID">
				<xs:annotation>
					<xs:documentation>

         Constant value that identifies the characteristic in a language-independent way.

         Unique within the characteristics set.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DateFormat" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Applicable when working with Pre-filled Item Information (Catalogs) functionality.

            Returned if the characteristic is a Date data type. Specifies the pattern 

            to use when presenting the date to a user. Possible values:

            Day/Month/Year, Month/Year, Year Only.

            For example, the Year Only format would indicate that date 

            would be a value like 1999.  

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DisplaySequence" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            The suggested order in which the characteristic should be presented 

            to the user in a list. 

            The sort attribute with the lowest display sequence value (0) in the 

            GetProductSearchPage response is used as the default sort attribute for 

            GetProductSearchResults if you do not specify a sort attribute in the 

            GetProductSearchResults request.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DisplayUOM" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Applicable when working with Pre-filled Item Information (Catalogs) functionality.

            The unit of measure (e.g., Inch) to use when the characteristic is numeric. 

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label" type="ns:LabelType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Applicable when working with Pre-filled Item Information (Catalogs) functionality.

            The label to display when presenting the attribute to a user. 

            Not necessarily the same as the attribute's label as defined in the 

            characteristics set (i.e., the label could be overridden by the catalog). 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SortOrder" type="ns:SortOrderCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Applicable when working with Pre-filled Item Information (Catalogs) functionality.

            Indicates the order in which the search engine will sort the results if you 

            pass this characteristic as a sort attribute in GetProductSearchResults. 

            Applications cannot change the sort order of a characteristic. 

            If SortOrder is not returned at all, it means the results will be returned 

            in the order in which they are stored. This is useful for 

            international sites that use ideographic characters.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ValueList" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            List of one or more valid values for the characteristic.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CharacteristicsSetType">
		<xs:annotation>
			<xs:documentation>

      A level in the eBay category hierarchy at which a particular group of 

      items can share a common set of attributes. A set of characteristics 

      that can be used to describe similar kinds of items in a standardized way.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

         The well-known name of the characteristics set (e.g., "Tickets" or "Books"). 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AttributeSetID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

         Constant value that identifies the characteristics set in a language-independent way.

         Unique across all eBay sites.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AttributeSetVersion" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Version of the characteristics set. Not to be confused with AttributeSystemVersion, 

            which can be used to retrieve changes to attribute meta-data.

            In item-listing requests, if you specify the version of the attribute set

            that you have stored locally, eBay will compare it to the current version on 

            the site and return a warning if the versions do not match. 

            If an error occurs due to invalid attribute data, this warning can be useful 

            to help determine if you might be sending outdated data.

            The current value of version is not necessarily "greater than" the 

            previous value. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Characteristics" type="ns:CharacteristicType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            A salient aspect or feature of an item. Used to describe an item 

            in a standard way so that buyers can find it more easily. 

            An individual, standardized characteristic that is common to all 

            items within the specified characteristics set. 

            See the guide for more information.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CharityType">
		<xs:annotation>
			<xs:documentation> 

              Identifies a Giving Works listing and beneficiary. 

              Not applicable for US eBay Motors, international, Real Estate, and Tickets. 

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CharityName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            The name of the benefiting nonprofit organization 

            the seller selected. Max length 254.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharityNumber" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            The number assigned to the nonprofit organization by the provider of 

            the Giving Assistant for eBay Giving Works. Max 10 digits.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DonationPercent" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            The percentage of the purchase price that the seller chose to donate to 

            the selected nonprofit organization. Possible values: 1.0 to 100.0. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ExternalProductIDType">
		<xs:annotation>
			<xs:documentation>

      Contains an ISBN value, UPC value, or eBay catalog product ID, plus 
      other meta-data. Only applicable for certain categories. 
      Either ExternalProductID or Item.ProductListingDetails can be specified
      in listing use cases (AddItem or GetRecommendations), but do not 
      specify both in the same requst. Either ExternalProductID or 
      ProductID can be specified in a GetSearchResults request, but not both.
      See the Developer's Guide for information on the categories 
      that support usage of this field in listing and searching use cases. 
      Not applicable when revising and relisting items.
      Input only.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Value" type="xs:string">
				<xs:annotation>
					<xs:documentation>
            For search and listing use cases, an ISBN value or UPC value 
            (dictated by the Type property).
            For listing use cases (not searching), an eBay catalog product ID can be passed instead.
            In this case, if the primary and secondary categories are 
            both catalog-enabled, this value must correspond to the primary category.
            Max length 10 for ISBN, 12 for UPC, and 4000 for ProductID.
            Input only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReturnSearchResultOnDuplicates" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Applicable for listing use cases only (not searching).
            Indicates what eBay should do if more than one product matches 
            the value passed in Value. Only takes effect when more than one 
            match is found. If true, the response should include an error 
            and all matching product IDs. If false, the response should include 
            an error but should not return the matching product IDs.
            Input only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="ns:ExternalProductCodeType">
				<xs:annotation>
					<xs:documentation>
            The kind of identifier being passed in. The choices are listed 
            in the ExternalProductCodeType code list.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CheckoutType">
		<xs:sequence>
			<xs:element name="CheckoutDetails" type="ns:CheckoutDetailsType"/>
			<xs:element name="CheckoutStatus" type="ns:CheckoutStatusType"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CheckoutDetailsType">
		<xs:sequence>
			<xs:element name="CheckoutInstructions" type="xs:string"/>
			<xs:element name="InsuranceFee" type="ns:AmountType">
				<xs:annotation>
					<xs:documentation> 
						(in/out) Cost of shipping insurance set by the seller. If the
						buyer bought more than one of this item, this is the insurance
						for just a single item. Exception: for GetItemShipping, this is
						proportional to QuantitySold. Default
						is 0.00. Value should be greater than 0.00 if InsuranceOption
						is Optional or Required. For flat shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InsuranceOption" type="ns:InsuranceOptionCodeType"/>
			<xs:element name="InsuranceWanted" type="xs:boolean"/>
			<xs:element name="AllowPaymentEdit" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>
	    			Specifies whether a seller allows buyers to edit
	    			the total cost of an item while in checkout.
        		  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SalesTax" type="ns:SalesTaxType"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CheckoutStatusType">
		<xs:sequence>
			<xs:element name="eBayPaymentStatus" type="ns:PaymentStatusCodeType">
				<xs:annotation>
					<xs:documentation>
	    		 Indicates the success or failure of a buyer's online payment.
  			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastModifiedTime" type="xs:dateTime"/>
			<xs:element name="PaymentMethod" type="ns:BuyerPaymentMethodCodeType">
				<xs:annotation>
					<xs:documentation>
	    		 The payment method the buyer uses to purchase the
	    		 item.
			   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="ns:CompleteStatusCodeType"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="DistanceType">
		<xs:annotation>
			<xs:documentation>
		 	DistanceType used in proximity search
					</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DistanceMeasurement" type="xs:int">
				<xs:annotation>
					<xs:documentation>
			The measurement used in a proximity search distance calculation.
							</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DistanceUnit" type="xs:string">
				<xs:annotation>
					<xs:documentation>
			The unit used in a proximity search distance calculation.
							</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FeeType">
		<xs:annotation>
			<xs:documentation>

          Identifies the name and monetary amount of a fee that a member pays
          to eBay (or an eBay company). Returned in AddItemResponseType and related response types.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Name of the fee, for identification purposes.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Fee" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Amount of the fee.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FeesType">
		<xs:annotation>
			<xs:documentation>
          Identifies a set of one or more fees that a member pays to eBay (or
          an eBay company). Instances of this type can hold one or more fees.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Fee" type="ns:FeeType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Contains the data for one fee (such as name and amount).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FeedbackDetailArrayType">
		<xs:annotation>
			<xs:documentation> 

          Contains multiple individual feedback detail entries.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:FeedbackDetail" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Contains a single feedback detail entry. Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FeedbackDetailType">
		<xs:annotation>
			<xs:documentation> 

          Detailed feedback information for a user. Conveys the score for the

          feedback, textual comment from the leaving user, and other

          information.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CommentingUser" type="ns:UserIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            eBay user ID for the user who left the feedback.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommentingUserScore" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Feedback score of the user indicated in CommentingUser.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommentText" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Text message left by user specified in CommentingUser. Used to provide a more

            in-depth description of the user's opinion of their transaction with the user

            about whom they left feedback. Returned as text in the language that the

            comment was originally left in. Note: Max length 80 (125 for Taiwan).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommentTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Date and time (in GMT) that the feedback was submitted to eBay.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommentType" type="ns:CommentTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Type of feedback. Can be Positive, Neutral, or Negative (see the

            CommentTypeCodeType code list). Positive feedbacks add to the user's total

            feedback score, negative feedbacks lower the score, and neutral feedbacks do

            not affect the score (but do affect the overall picture of the user's online

            reputation).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackResponse" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Textual comment that the user targeted by feedback may leave in response or

            rebuttal to the feedback. Max length 80 (125 for Taiwan). (Cannot be submitted

            or edited via the API.) Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Followup" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Explanation a user can give to a response. Max length 80 (125 for Taiwan).

            (Cannot be submitted or edited via the API.) Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ItemID" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            The ID that uniquely identifies the item listing.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Role" type="ns:TradingRoleCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Indicates whether the user who was the feedback recipient was a Buyer or the

            Seller for that transaction.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemTitle" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            The title of the item as it was originally listed.

            (Cannot be submitted or edited via the API.) Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            The price of the item as it was originally listed.

            (Cannot be submitted or edited via the API.) Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Unique identifier for the feedback entry.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
			      Unique identifier for the transaction about which 
			      this feedback entry was left.
          </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FeedbackPeriodArrayType">
		<xs:annotation>
			<xs:documentation> 

          Container for a set of feedback statistics. Contains zero one or

          multiple FeedbackPeriod objects. Output only, for the summary

          feedback data returned by GetFeedback.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:FeedbackPeriod" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            Contains one feedback statistic giving length of the period being reported

            (e.g. last 7 days prior to the call), and total number of feedback entries

            (of the type given by the container, e.g. positive feedback) submitted during

            the indicated period.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FeedbackPeriodType">
		<xs:annotation>
			<xs:documentation> 

          Contains the data for one type of feedback for one predefined time

          period. Parent FeedbackPeriodArrayType object indicates the type of

          feedback counted: positive, neutral, negative, or total. Output only,

          in the summary feedback data returned by GetFeedback.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PeriodInDays" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates the time period for the feedback count. Returns a value indicating

            the number of days prior to the call for which feedbacks of the particular

            type are counted.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Count" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Count of the feedbacks received by the user for the time period prior to the

            call indicated in PeriodInDays.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FeedbackSummaryType">
		<xs:annotation>
			<xs:documentation>

          Specifies all feedback summary information (except Score). Contains

          FeedbackPeriodArrayType objects that each convey feedback counts for

          positive, negative, neutral, and total feedback counts - for various

          time periods each. Also conveys counts of bid retractions for the

          predefined time periods.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:BidRetractionFeedbackPeriodArray" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Bid retractions count, for multiple predefined time periods preceding the call.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:NegativeFeedbackPeriodArray" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Negative feedback entries count, for multiple predefined time periods preceding

            the call.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:NeutralFeedbackPeriodArray" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Neutral feedback entries count, for multiple predefined time periods preceding

            the call.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:PositiveFeedbackPeriodArray" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Positive feedback entries count, for multiple predefined time periods preceding

            the call.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:TotalFeedbackPeriodArray" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Total feedback score, for multiple predefined time periods preceding the call.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NeutralCommentCountFromSuspendedUsers" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Number of neutral comments received from suspended users.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniqueNegativeFeedbackCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Number of unique negative comments.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniquePositiveFeedbackCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Number of unique positive comments.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="BestOfferArrayType">
			<xs:annotation>
				<xs:documentation> 
					A collection of best offers for an item.
				</xs:documentation>
			</xs:annotation>
			<xs:sequence>
				<xs:element ref="ns:BestOffer" maxOccurs="unbounded" minOccurs="0">
					<xs:annotation>
						<xs:documentation> 
							Details for a single best offer.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
	</xs:complexType>
<xs:complexType name="BestOfferType">
		<xs:annotation>
			<xs:documentation> 
				Details for a single best offer for an item.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BestOfferID" type="ns:BestOfferIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Unique identifier for a best offer (to differentiate from
						other offers for the same item).
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpirationTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Date and time (in GMT) that the best offer naturally expires
						(if not accepted or declined by the seller).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Buyer" type="ns:UserType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Information about the bidder.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Price" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The best offer price.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="ns:BestOfferStatusCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The current state of the best offer (for example, pending, 
						declined, accepted, expired).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Quantity" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The number of items for which the buyer made a best offer 
						(which can only be great than 1 for a multiple item listing).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyerMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A message from the bidder to the seller when the bidder
						created the best offer. Max length 500.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A message from the seller to the bidder who created the
						best offer. Note: Max length 500.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>	
	</xs:complexType>	
<xs:complexType name="NameValueListType">
		<xs:annotation>
			<xs:documentation>
      A name and corresponding value (a name/value pair).
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>
            A name in a name/value pair.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Value" type="xs:string" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            The value in a name/value pair.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="NameValueListArrayType">
		<xs:annotation>
			<xs:documentation>
      A list of one or more valid names and corresponding values.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="NameValueList" type="ns:NameValueListType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
         A name and corresponding value (a name/value pair).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FinanceOfferType">
		<xs:annotation>
			<xs:documentation>
				A promotional offer that allow the buyer to purchase items on credit.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FinanceOfferID" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						The unique ID associated with a particular financing offer. This value
						is used in other calls such as AddItem to indicate that an item has 
						a particular financing offer.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyerTerms" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						Text that the buyer sees describing the details of the financing offer.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerTerms" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						Text that the seller sees describing the details of the financing offer.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StartDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
						Date on which the offer first becomes active.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastModifiedDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
						The date the offer was last modified.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinimumAmount" type="ns:AmountType">
				<xs:annotation>
					<xs:documentation>
						The minimum amount for an item to which the offer applies.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RateFactor" type="xs:double">
				<xs:annotation>
					<xs:documentation>
						Interest charges associated with the finance offer.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Priority" type="xs:int">
				<xs:annotation>
					<xs:documentation>
						The priority of the financing offer.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FinanceOfferArrayType">
		<xs:annotation>
			<xs:documentation>
				A set of financing offers: promotional offers that allow the buyer to 
				purchase items on credit.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FinanceOffer" type="ns:FinanceOfferType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						A financing offer.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CategoryFinanceOfferType">
		<xs:annotation>
			<xs:documentation>
				A financing offer valid within a particular category.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FinanceOfferID" type="xs:string" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						The unique ID for the financing offer. Call GetFinanceOffers using the FinanceOfferID
						to get more information about the offer.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryID" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						The category within which the financing offer is valid.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CategoryFinanceOfferArrayType">
		<xs:annotation>
			<xs:documentation>
				A set of financing offers, each valid within one particular category.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CategoryFinanceOffer" type="ns:CategoryFinanceOfferType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						A financing offer valid within a particular category.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ItemType">
		<xs:annotation>
			<xs:documentation> 

          Contains the data defining one item. A seller populates an object of

          this type at listing time with the definition of a new item. A seller

          also uses an object of this type to re-list or revise an item. Calls

          that retrieve item data (such as the GetItem call) return an object of

          this type, filled with the item's data.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ApplicationData" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Returns custom, application-specific data associated with the item. The data in

            this field is stored with the item in the items table at eBay, but is not used

            in any way by eBay. Use ApplicationData to store such special information as a

            part or SKU number. Maximum 32 characters in length.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AttributeSetArray" type="ns:AttributeSetArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Carries one or more instances of AttributeSet in a list. An item will be

            associated with no more than two full attribute sets (one for the primary

            category and one for the secondary category). For some international sites, an

            item can specify additional site-wide attribute sets.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LookupAttributeArray" type="ns:LookupAttributeArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            A list of optional attributes that the seller wants to include in the listing.

            Enables you to specify attributes by name rather than by ID. Only valid in

            Media categories (Books, DVD and Movies, Music, and Video Game categories).

            Currently, only the Condition attribute is supported. Input only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApplyShippingDiscount" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Multiple Item Shipping Discount. Seller specifies as input when listing,

            re-listing, or revising an item to indicate whether a shipping discount is to

            be applied when the buyer pays for the item in the checkout process and the

            item's transaction is combined with other transactions into an order. Returned

            with retrieved item data, indicating a shipping discount is applicable.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AutoPay" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, the seller requests immediate payment for the item. If false,

            immediate payment is not requested. (In responses, does not indicate whether

            the item is actually still a candidate for purchase via immediate payment.) Only

            applicable for items listed on PayPal-enabled sites in categories that support

            immediate payment, when seller has a Premier or Business PayPal account.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BiddingDetails" type="ns:BiddingDetailsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MotorsGermanySearchable" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
				(in/out) Listing upgrade that features the item in eBay search results on 
				the mobile.de partner site. 
				If true in listing requests and responses, the seller is purchasing 
				or has purchased cross-promotional placement on the mobile.de site. 
				 See the Developer's Guide for applicable categories, revise and relist rules, 
				 and additional information on featuring vehicles on the Mobile.de Site. 
				  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyerProtection" type="ns:BuyerProtectionCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates the status of the item's eligibility for the Buyer Protection Program.

            Applicable for items listed to the main US site and to the Parts and Accessories

            category or Everything Else category (or their subcategories) on the US eBay

            Motors site.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyItNowPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Amount a Buyer would need to bid to take advantage of the Buy It Now feature

            (if the seller lists the item with this option). Not applicable to fixed-price 

            items (ListingTypeCodeType type StoresFixedPrice or FixedPriceItem) or

            AdFormat-type listings. For fixed-price items, see StartPrice instead. See Developer Guide for validation rules when revising US Motors listings.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryMappingAllowed" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Controls how eBay handles cases in which an ID specified in PrimaryCategory

            and/or SecondaryCategory no longer exists in the current category structure: If

            you pass a value of "true" in CategoryMappingAllowed, eBay will look up the

            current ID that is mapped to the same (or equivalent) category and use the new

            ID for the listing. If CategoryMappingAllowed is not set or contains a value of

            "false" (the default), an error will be returned if a selected category ID no

            longer exists. Not applicable for US eBay Motors (site ID "eBayMotors")

            listings.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Charity" type="ns:CharityType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Identifies a Giving Works listing and the benefiting nonprofit organization the

            seller selected. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:Country" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Two-letter ISO 3166 country code. Along with Location, indicates the city and

            country where the item is located.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CrossPromotion" type="ns:CrossPromotionsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
					Container for cross-promoted items related to a specific item ID.
					The items are either upsell or cross-sell, according to the promotion
					method passed in the request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:Currency" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Currency associated with the item's price information. 3-letter ISO 4217

            currency code that corresponds to the site specified in the item-listing

            request.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						Brief description of the item. Max 500,000 characters. When
						used as input, this should be submitted using CDATA if you want
						to use HTML or XML-reserved characters in the description. An
						error is returned if this contains malicious JavaScript
						content. (For related eBay policy, see
						http://pages.ebay.com/help/policies/listing-javascript.html.)
						The Description field is required for all listings, except
						certain listings that include Pre-filled Item Information. (See
						"About the Pre- filled Item Information API.") Even if your
						application does not support listings items with Pre-filled
						Item Information, you should be aware that this also means
						GetItem, GetSellerList, and GetBidderList may return some items
						with empty Description fields. If the listing has an image
						embedded in the description but no image URL specified in
						PictureURL, see "Camera Icon Note" in "Including Pictures in an
						Item Listing."
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Distance" type="ns:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						The distance used in a proximity search distance calculation.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Escrow" type="ns:EscrowCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates whether escrow is used for a listing. See EscrowCodeType for specific values. Cannot use with

            real estate auctions. Escrow is recommended for transactions over $500.

            Escrow service protects both buyer and seller by

            acting as a trusted third-party during the transaction and managing the payment

            process from start to finish.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FinanceOfferID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies a promotional offer that allow the buyer to purchase items on credit. You can call
						GetFinanceOffers to retrieve the current set of valid offers that can be specified for items.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GiftIcon" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If set, a generic gift icon displays next the listing's title in search and

            browse pages. GiftIcon must be set to be able to use GiftServices options.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GiftServices" type="ns:GiftServicesCodeType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Optional gift services that the seller is offering if the buyer chooses to

            purchase the item as a gift.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HitCounter" type="ns:HitCounterCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates whether an optional hit counter is displayed on the item's listing

            page and, if so, what type. See HitCounterCodeType for specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ItemID" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            (in/out) The ID that uniquely identifies the item listing.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListingDetails" type="ns:ListingDetailsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Various details about the listing that are calculated or derived after the item

            is listed. These include the start and end time, converted (localized) prices,

            and certain flags that indicate whether the seller specified fields (e.g., a

            reserve price) whose values aren't visible to the requesting user.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListingDesigner" type="ns:ListingDesignerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Contains the detail data for the Listing Designer theme and template (if either

            are used), which can optionally be used to enhance the appearance of the

            description area of an item's description. See ListingDesignerType for its

            child elements.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ListingDuration" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Describes the number of days the seller wants the listing to be active

            (available for bidding/buying). The valid choice of values depends on the

            listing type. The duration specifies the seller's initial intent at listing

            time. If the listing ends early, the value of the listing duration does not

            change.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListingEnhancement" type="ns:ListingEnhancementsCodeType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Describes the types of for-fee enhancements the seller selects for the item's

            listing, such as title bolding and featuring the listing on the eBay home page.

            See ListingEnhancementsCodeType for specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListingType" type="ns:ListingTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates the type of listing the seller chooses for an item or items. (such as

            Chinese, Dutch, FixedPrice, etc.). See ListingTypeCodeType for specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Location" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates the geographical location of the item (along with Country). Maximum

            length 45.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LotSize" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						When the value is greater than 1, indicates that the item is a lot (a collection 
						of similar items) and gives the number of items in each lot. When a listed item 
						is a lot, Quantity gives the number of lots offered.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NowAndNew" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
				(in/out) If true in listing requests and responses, the item is listed with Now and New. 
				Only applicable for Buy It Now, fixed-price, and Store Inventory listings 
				on certain eBay sites. See the Developer's Guide for details. 
				In requests that list items, only valid if the seller also specifies 
				the item condition (as new), predefined return policy attributes, and shipping costs. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PartnerCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            eBay Partner ID specified when a partner lists an item.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PartnerName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Textual name of the eBay Partner that corresponds to the ID specified in

            PartnerCode.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:PaymentMethods" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Identifies the payment method or methods (such as credit card or money order)

            the seller will accept for the buyer to pay for the purchase of the item. See

            BuyerPaymentMethodCodeType for specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PayPalEmailAddress" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Valid PayPal email address which is used as the seller's PayPal member ID.

            Automatically used by eBay to identify the seller the buyer needs to pay during

            the checkout process. Applicable if seller has chosen PayPal as a payment

            method (PaymentMethods) for the item.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrimaryCategory" type="ns:CategoryType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Category ID for the first (or only) category in which the item is listed (or is

            to be listed in the case of new, as-yet unlisted items).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrivateListing" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, designates the listing as a private auction. The list of bidders on

            private auctions is hidden when the active listing is viewed. Not applicable to

            fixed-price items (type StoresFixedPrice and FixedPriceItem listings). 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductListingDetails" type="ns:ProductListingDetailsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Container node for stock product information that can be included in a listing.
            Only required when listing items with Pre-filled Item Information. Either
            ExternalProductID or Item.ProductListingDetails can be specified in AddItem
            requests, but not both. If the item's primary and secondary category are both
            catalog-enabled, the product listing details must be applicable to the primary
            category. If only one category is catalog-enabled, the product listing details
            must be applicable to the catalog-enabled category. See the Developer's Guide
            for information on listing with Pre-filled Item Information.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProximitySearchDetails" type="ns:ProximitySearchDetailsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Proximity search information for the item.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Quantity" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Number of items in the listing. For new listings being defined, this is the

            initial number of items the seller offers for sale. For in-progress multi-item

            fixed-price listings, this is the number of items still available for purchase

            (such listings end when Quantity is reduced to zero).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:RegionID" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Region where the item is located. Causes the listing to be returned in local

            (regional) search results and regional listings (in addition to normal

            (all-eBay) search results and listings). See the documentation for valid

            values. If the item is listed with a RegionId of 0, then no region is

            associated with the listing, and it will only be returned in normal

            (all-eBay) search results and listings.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RelistLink" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Applicable only to re-listing an item. If true, creates a link in the item's

            old listing for the item that points to the new relist page, which

            accommodates users who might still look for the item under its old item ID.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReservePrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Indicates the reserve price for a reserve auction. Returned only with

            a detail level of 4. ReservePrice only has a non-zero value for listings

            with a reserve price and where the user requesting the item data is also

            the item's seller. Returned as null for fixed-price items. For more

            information on reserve price auctions, see

            http://pages.ebay.com/help/sell/reserve.html. See Developer Guide for validation rules when revising US Motors listings.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ReviseStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates whether an item has been revised since the listing became

            active and, if so, which among a subset of properties have been changed

            by the revision.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScheduleTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Allows a user to schedule a listing to start at the specified time in the future.

            Specify the time (in GMT) that the item's listing is scheduled to be active on eBay.

            Input only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SecondaryCategory" type="ns:CategoryType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            ID for second category in which the item is listed (also see PrimaryCategory).

            Listing an item in a second category is optional.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SiteHostedPicture" type="ns:SiteHostedPictureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Contains the data for pictures associated with an item, when those pictures are

            hosted on the eBay site (eBay Picture Services). See SiteHostedPictureType for

            its child elements. For pictures hosted other than on the eBay site, use

            VendorHostedPicture instead.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:Seller" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Container for information about this listing's seller.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:SellingStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Various details about the current status of the listing, such as the current

            number of bids and the current high bidder.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingOption" type="ns:ShippingOptionCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates where the seller is willing to ship the item. Default is SiteOnly.

            See ShippingOptionCodeType for specific values. If SitePlusRegions is selected,

            when the item is listed, then at least one region must also be specified (in

            ShippingRegions).
            
            This element is deprecated with compatibility level 383.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ShippingDetails" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						The shipping-related details for an item or transaction, 
						including flat and calculated shipping costs and shipping 
						insurance costs.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ShippingRegions" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Indicates the global regions to which the seller is willing to ship the item(s).

            Only applicable if the seller specifies SitePlusRegions for the shipping option

            (ShippingOptionCodeType). See ShippingRegionCodeType for specific shipping regions

            values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingTerms" type="ns:ShippingTermsCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates who pays the shipping costs for the item(s), the buyer or the seller.

            See ShippingTermsCodeType for specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShipToLocations" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
						An international location or region to which the seller is 
						willing to ship in general, regardless of shipping service.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:Site" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            The site associated with the item affects the business logic and validation

            rules that are applied to the request, which in turn affect the values that

            are returned in the response, as well as values that appear on the eBay Web

            site. For example, the value specified for Site can affect the validation of

            Category in listing requests, international business seller requirements, the

            values of converted (localized) prices in responses, the item-related time

            stamps that are displayed on the eBay Web site, the visibility of the item in

            some types of searches (e.g., GetCategoryListings), and other information. In

            some cases, the rules are determined by a combination of Site, the user's

            registration address, and other information.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StartPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) The original price of the item at listing or re-listing time. 
            If this value changes when the item is revised, the new value becomes 
            the original price.
            For auction-type listings, competitive bidding starts at this value.
            Once at least one bid has been placed, StartPrice remains the same but CurrentPrice
            is incremented to the amount of each succeeding bid. For fixed-price listings 
            (FixedPriceItem) and Store Inventory (StoresFixedPrice) listings,
            this is the constant price at which a buyer may purchase the item.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Storefront" type="ns:StorefrontType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Contains information related to the item in the context of a seller's eBay

            Store. Applicable for auction format, basic Fixed Price, and Store Inventory

            format items listed by eBay Stores sellers.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubTitle" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Subtitle to use in addition to the title. Provides more keywords when buyers

            search in titles and descriptions. You cannot use HTML in the Subtitle. Not

            applicable for US eBay Motors listings. If you pass any value, this feature is

            applied (with applicable fees). Max length 55.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeLeft" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Time left before the listing ends.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

             Name of the item as it appears in the listing or the Gallery. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:UUID" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Universally unique constraint tag. The UUID is unique to a category. The UUID

            can only contain digits from 0-9 and letters from A-F. The UUID must be 32

            characters long.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VATDetails" type="ns:VATDetailsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Container for eBay's Business User features. A business seller can choose to

            offer an item exclusively to bidders and buyers that also represent businesses.

            Only applicable when the item is listed in a B2B-enabled category (on a site

            that supports B2B business features).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VendorHostedPicture" type="ns:VendorHostedPictureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Contains the data for a picture associated with an item, when that picture is

            hosted on a site of the seller's choice (other than on the eBay site with eBay

            Picture Services). See VendorHostedPictureType for its child elements. For
            pictures on EPS, use SiteHostedPicture instead.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerVacationNote" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
		This tag appears in the returned XML if the seller have their stores vacation settings ON and have
		selected appropriate options.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WatchCount" type="xs:long" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Watch count associated with this item, this will be returned as per request basis.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ItemArrayType">
		<xs:annotation>
			<xs:documentation> 

          Container for a list of items. Can contain zero, one, or multiple

          ItemType objects, each of which conveys the data for one item listing.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Item" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Contains the data properties that define one item listing.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ItemListType">
		<xs:annotation>
			<xs:documentation>

          Specifies a list of items, for example, a user is bidding on. May

          contain zero, one, or multiple ItemType objects, each of which

          conveys the data for one item listing.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Item" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            Contains the data properties that define one item listing.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TotalAvailable" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Indicates the total number of items that may be returned in the active items

            list.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="LabelType">
		<xs:sequence>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>

            The label to display when presenting the attribute to a user (e.g., "Title" or "Manufacturer"). 

            The label is defined for the product, and is therefore not necessarily the same as the label 

            that is defined in the characteristics set. 

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="visible" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>

         If true, the label name is visible on the eBay site. If false, the label is not visible. 

         Usage of this information is optional. You are not required to display labels in 

         the same manner as eBay. 

         Output only.

				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
<xs:complexType name="ListingDesignerType">
		<xs:annotation>
			<xs:documentation> 

        Contains the IDs for the Listing Designer theme and template (if either are

        used) associated with an item, which can optionally be used to enhance the

        appearance of the item's description.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LayoutID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Identifies the Layout template associated with the item.

			  		</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OptimalPictureSize" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            If true, indicates that the item's picture will be enlarged to fit description

            of the item.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThemeID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Identifies the Theme template associated with the item.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ListingDetailsType">
		<xs:annotation>
			<xs:documentation> 

			    Various details about the listing that are calculated or derived after

             the item is listed. These include the start and end time,

             converted (localized) prices, and certain flags that indicate whether

             the seller specified fields (e.g., a reserve price) whose values aren't 

             visible to the requesting user. The ListingDetails type cannot be specified at 

             listing time. It is only returned in responses.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Adult" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                   If true, the item is listed in a Mature category. Users must accept

                   the Mature Category agreement on the eBay site to retrieve 

                   items listed in Mature categories. (Users do not need to sign 

                   this agreement to be able to list items in Mature Categories.)

                </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BindingAuction" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                   Applicable for Real Estate auctions only. If true, buyers and sellers  

                   are expected to follow through on the sale. If false, bids for the 

                   Real Estate auction are only expressions of interest.

                </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckoutEnabled" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                   Indicates whether checkout is enabled for this item. If true, indicates

                   that the seller elects to allow the item purchase to go through the

                   checkout process, if the buyer chooses to do so.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConvertedBuyItNowPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

                   Converted value of the BuyItNowPrice in the currency of 

                   the site that returned this response. 

                   For active items, refresh this value every 24 hours to 

                   pick up the current conversion rates.

               </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConvertedStartPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

                   Converted value of the StartPrice in the currency of

                   the site that returned this response.

                   For active items, refresh this value every 24 hours to 

                   pick up the current conversion rates.

                </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConvertedReservePrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                   Converted value of the ReservePrice in the currency of the

                   site that returned this response. Only returned for listings with 

                   a reserve price when the requesting user is the listing's seller.

                   For active items, refresh this value every 24 hours to 

                   pick up the current conversion rates.

                   Not applicable to Fixed Price and Store Inventory listings.

             </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HasReservePrice" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                   If true, the seller specified a value in ReservePrice.

               </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RegionName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                   The human-readable name that corresponds to the RegionId that the 

                   seller specified for the listing, if any.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RelistedItemID" type="ns:ItemIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

                   Indicates the new item ID for a re-listed item. When an item is 

                   re-listed, the item ID for the new (re-list) item is added to the

                   old (expired) listing to provide buyers a means to navigate to

                   the new listing. This value only appears when the old listing is 

                   retrieved.

                   Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SecondChanceOriginalItemID" type="ns:ItemIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

                   The item ID for the original listing from which a second chance offer

                   is made. This value is only returned when the data for the second chance

                   offer listing is retrieved.

                   Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StartTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

                   Time stamp (in GMT) that eBay recorded as the moment that

                   the listing became available for bidding or buying.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

                   Time stamp (in GMT) when the listing is scheduled to end

                   (calculated based on the values of StartTime and ListingDuration)

                   or the actual end time if the item has ended.

				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ViewItemURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                   The URL of the Web page where a user can view the listing. 

                   On the US site, this is called the "View Item" page.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HasUnansweredQuestions" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      Indicates whether the item has any unanswered questions. Use GetMemberMessages to
			      retrieve unanswered questions for the item if this flag indicates that there
			      are any.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HasPublicMessages" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      Indicates whether the item has any publicly displayed messages. Use GetMemberMessages
			      to retrieve public messages for the item if this flag indicates that there are any.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ModifiedFieldType">
		<xs:annotation>
			<xs:documentation> 
		        Identifies the fields that are being modified. Only applicable when 
				revising and relisting items. To remove a property from an object,
				specify it in ModifiedFieldType, but do not specify a value in the
				object type (for example, ItemType).
				</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Field" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

	            The name of the field that is being modified.

						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ModifyType" type="ns:ModifyCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

	            Instruction describing the nature of the modification. 

	            See the ModifyCodeList for valid values.

						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="OfferType">
		<xs:annotation>
			<xs:documentation>

        Contains information pertaining to an offer made on an item listing and

        the current bidding or purchase state of the listing.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Action" type="ns:BidActionCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Indicates the type of offer being made on the specified listing. Valid

                values are enumerated in the BidActionCodeType code list.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Currency" type="ns:CurrencyCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Numeric ID for the currency for the auction. Valid values are

                enumerated in the CurrencyCodeType code list.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="ns:ItemIDType">
				<xs:annotation>
					<xs:documentation> 
						The unique identifier of an item listed on the eBay site.
						Returned by eBay when the item is created. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxBid" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Amount of the offer placed. For competitive-bidding listings, the amount

                bid on the item (subject to outbid by other buyers). For fixed-price

                listings, the fixed sale price at which the item is purchased. For

                competitive-bidding listings with an active Buy It Now option, this amount

                will be either the Buy It Now price for purchase or the amount of a bid,

                depending on the offer type (as specified in Action).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Quantity" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Specifies the number of items from the specified listing the user

                tendering the offer intends to purchase or bid on. For Chinese auctions and

                other listing formats that only allow one item per listing, value may not

                exceed one. For multi-item listings, must be greater than zero and not

                exceeding the number of items offered for sale in the listing.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SecondChanceEnabled" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Indicates the user's preference to accept second chance offers. If true,

                the user is willing to be the recipient of second chance offers.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SiteCurrency" type="ns:CurrencyCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Unique ID identifying the currency in which the localized offer amounts are

                expressed.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeBid" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Date and time the offer or bid was placed.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HighestBid" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Amount the highest bidder had bid on the item. Applicable only to

                competitive-bidding listings (Chinese and Dutch auctions) where there is

                progressive bidding and winning bidders are determined based on the highest

                bid.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConvertedPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Localized amount for the item's current price.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:TransactionID" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						The unique identifier of the transaction. The transaction
						is created when a winning bidder commits to purchasing an
						item, even before the bidder has paid.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="User" type="ns:UserType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                Bidder information. See the schema documentation for UserType for details

                on its properties and their meanings.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CancelOfferType">
		<xs:annotation>
			<xs:documentation> 

        Container for a list of offers. May contain zero, one, or multiple

        OfferType objects, each of which represents one offer extended by

        a user on a listing.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Offer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Contains the data for one offer. This includes: data for the user making the

            offer, the amount of the offer, the quantity of items being bought from the

            listing, the type of offer being made, and more.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Explanation" type="xs:string">
				<xs:annotation>
					<xs:documentation>

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CancelOfferArrayType">
		<xs:annotation>
			<xs:documentation> 

        Container for a list of offers. May contain zero, one, or multiple

        OfferType objects, each of which represents one offer extended by

        a user on a listing.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CancelOffer" type="ns:CancelOfferType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            Contains the data for one offer. This includes: data for the user making the

            offer, the amount of the offer, the quantity of items being bought from the

            listing, the type of offer being made, and more.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="OfferArrayType">
		<xs:annotation>
			<xs:documentation> 

        Container for a list of offers. May contain zero, one, or multiple

        OfferType objects, each of which represents one offer extended by

        a user on a listing.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Offer" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            Contains the data for one offer. This includes: data for the user making the

            offer, the amount of the offer, the quantity of items being bought from the

            listing, the type of offer being made, and more.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="OrderType">
		<xs:annotation>
			<xs:documentation>
				A combination of two or more transactions that can be paid for with a 
				single payment.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="OrderID" type="ns:OrderIDType">
				<xs:annotation>
					<xs:documentation>
						(out) Unique identifier for the order.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderStatus" type="ns:OrderStatusCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(out) The current status of the order.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdjustmentAmount" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(out) Amount by which the buyer is adjusting the order total. Used when
						the seller has not supplied payment details such as shipping and
						handling or insurance fee.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmountPaid" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(out) Amount the buyer has paid the seller for the order.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmountSaved" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(in/out) Amount the buyer saved by having multiple items combined into
						a single order, versus purchasing the items separately.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckoutStatus" type="ns:CheckoutStatusType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(out) The current checkout status of the order.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ShippingDetails" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						The shipping-related details for an item or transaction, 
						including flat or calculated shipping costs and shipping 
						insurance costs.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreatingUserRole" type="ns:TradingRoleCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(in/out) Indicates whether the order was created by the buyer or by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreatedTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(out) Date and time the order was created.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FinanceOfferID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(in/out) Specifies a promotional offer that allow the buyer to purchase items on credit.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaymentMethods" type="ns:BuyerPaymentMethodCodeType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
	    		  The payment methods the buyer uses to pay for
	    		  the order. An order can have multiple payment methods if the
	    		  buyer combines several transactions into one order.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerEmail" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(out) The email of the order's seller.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ShippingAddress" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(out) Shipping address the order has been or will be sent to.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceSelected" type="ns:ShippingServiceOptionsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						The shipping service selected by the buyer from the services
						offered by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Subtotal" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(out) The sum of the sale prices of all of the transactions in the order, where
						a transaction sale price is the item sale price times the quantity sold.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Total" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(in/out) Subtotal plus the shipping cost plus the sales tax plus cost of insurance.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionArray" type="ns:TransactionArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(in/out) The set of two or more transactions that make up the order.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="OrderArrayType">
		<xs:sequence>
			<xs:element ref="ns:Order" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="OrderIDArrayType">
		<xs:annotation>
			<xs:documentation> 
				A list of unique identifiers for orders.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:OrderID" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						A unique identifier for an order.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="PaginationType">
		<xs:annotation>
			<xs:documentation> 

        Contains data for controlling pagination in API requests. Pagination

        of returned data is required for some calls and not needed in or not 

        supported for some calls.

        See the documentation for individual calls to determine whether

        pagination is supported, required, or desirable.

        Input only.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EntriesPerPage" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Specifies the maximum number of entries to return in a single call. 

            If the number of entries that can be returned is less

            than the value specified in EntriesPerPage, then that number of entries

            is returned instead. Default is 25 for most calls. See the documentation 

            for individual calls to determine the correct default value.

            Input only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageNumber" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Specifies the number of the page of data to return in the current call. 

            Default is 1 for most calls. For some calls, the default is 0. 

            See the documentation for individual calls to determine the correct 

            default value.

            Input only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="PaginationResultType">
		<xs:annotation>
			<xs:documentation> 

        Shows the pagination of data returned by requests. Pagination

        of returned data is not needed in and not supported for every call.

        See the documentation for individual calls to determine whether

        pagination is supported, required, or desirable.

        Output only.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TotalNumberOfPages" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates the total number of pages of data that could be returned by

            repeated requests.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TotalNumberOfEntries" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates the total number of entries that could be returned by repeated

            requests.

            Input only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="PaymentMeansType">
		<xs:annotation>
			<xs:documentation> 
            The payment method the seller uses to pay eBay.
		   </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TypeCodeID" type="ns:SellerPaymentMethodCodeType">
				<xs:annotation>
					<xs:documentation>
	    		  The identifier of the seller's payment method.
                </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="PaymentType">
		<xs:annotation>
			<xs:documentation> 
	         Describes how the seller pays fees to eBay.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PaymentMeans" type="ns:PaymentMeansType">
				<xs:annotation>
					<xs:documentation>
	    		  The method of payment the seller uses.
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ProductListingDetailsType">
		<xs:annotation>
			<xs:documentation>

      Contains product information that can be included in a listing.

      Applicable for listings that use eBay's Pre-filled Item Information feature.

      See the Developer's Guide for details on working with Pre-filled Item Information.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProductID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Required when ProductListingDetailsType is used. Unique identifier for

            the product. See the Developer's Guide for information about determining product IDs.

            If the primary and secondary categories are both catalog-enabled, this ID should correspond to the primary

            category (not the secondary category). Max length 4000.

            In item-listing requests, if you pass in an old product ID, eBay will

            list the item with the latest version of the product and the latest product ID, and the call

            will return a warning indicating that the data has changed.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeStockPhotoURL" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            If true, specifies that the listing should include the stock photo (if any). 

            In item-listing requests, if you do not pass PictureURL and you set IncludeStockPhotoURL to true, 

            the stock photo is used at the top of the View Item page and in the Item Specifics section of the listing. 

            If you also pass PictureURL, the stock photo only appears in the Item Specifics section of the listing. 

            Other pictures you specify appear in a separate section of the listing. If you set IncludeStockPhotoURL 

            to false, the stock photo does not appear in the listing at all. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludePrefilledItemInformation" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            If true, specifies that the listing should include additional information about the product, 

            such as a publisher's description or film credits. Such information is hosted through the eBay site 

            and cannot be edited. If true, Item.Description is optional in item-listing requests.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UseStockPhotoURLAsGallery" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            If true, IncludeStockPhotoURL must also be true, and the listing uses the stock photo 

            as the Gallery image. 

            If true in item-listing requests, pass GalleryType with the code for Gallery or Gallery Featured, 

            and do not pass GalleryURL.

            If UseStockPhotoURLAsGallery is false or not specified, this logic is used: 

               - If IncludeStockPhotoURL is true, the system looks for the first URL in PictureURL to use 

                  as the Gallery image. If PictureURL is not specified, no image appears in the Gallery. 

               - If IncludeStockPhotoURL is false, GalleryURL is used instead. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StockPhotoURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Fully qualified URL for a standard image (if any) that is associated with the product. 

            A user can choose to include the stock photo in the listing.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Copyright" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            Copyright statement indicating the source of the product information. This information will be 

            included in the listing with Pre-filled Item Information. Your application should also display 

            the copyright statement when rendering the Pre-filled Item Information. 

            If more than one copyright statement is applicable, they can be presented to the 

            user in alphabetical order. Returned as HTML.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ProductType">
		<xs:annotation>
			<xs:documentation>

      A prototype description of a well-known type of item, such as a popular book.

      Applicable when working with eBay's Pre-filled Item Information feature.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CharacteristicsSet" type="ns:CharacteristicsSetType">
				<xs:annotation>
					<xs:documentation>

            A set of characteristics that describe the product in a standardized way.

            In responses, only the attributes and values that applicable for the 

            specified product are returned.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DetailsURL" type="xs:anyURI">
				<xs:annotation>
					<xs:documentation>

            Fully qualified URL for optional information about the product, 

            such as a movie's description or film credits. This information 

            is hosted through the eBay site and cannot be edited. 

            Applications can include this URL as a link in product search results 

            so that end users can view additional descriptive details about the product. 

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NumItems" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Total number of active listings on the specified eBay site 
            that were pre-filled based on this product.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Lowest current price of active and ended listings on the specified eBay site that were 
            pre-filled based on this product. The value is in the specified site's currency.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Highest current price of active and ended listings on the specified eBay site that were 
            pre-filled based on this product. The value is in the specified site's currency.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="productID" type="xs:string">
			<xs:annotation>
				<xs:documentation>

         Unique identifier for the product. The ID is defined in an eBay catalog.

         Product IDs may change over time. Therefore, use the catalog search calls

         to update any product IDs that you store locally.

				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="stockPhotoURL" type="xs:anyURI">
			<xs:annotation>
				<xs:documentation>

         Fully qualified URL for a standard image that is associated with the product. 

         Allows the user to preview the image from your application.

         A user can choose to include the stock photo in a listing.

         Output only.

				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="title" type="xs:string">
			<xs:annotation>
				<xs:documentation>

         The name of the product, as defined within the catalog. Not necessarily the 

         same as the "Title" attribute in the characteristics set meta-data, if any. 

         On the eBay site, this title serves as the basis for the suggested item title 

         (truncated to the max length permitted for Title in item-listing calls). 

         Applications can use this value to supply a suggested listing title to users.

         Output only.

				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
<xs:complexType name="ProductFamilyType">
		<xs:annotation>
			<xs:documentation>

      A set of results returned from a catalog product search. 

      See the guide for information about Pre-filled Item Information (Catalogs) functionality.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ParentProduct" type="ns:ProductType">
				<xs:annotation>
					<xs:documentation>

            A transient header that describes the current search results. Contains a 

            an ID, a subset of attributes, and a typical stock photo 

            to help a user easily distinguish the products in the current result set

            from products in other result sets returned in the same response. 

            One ParentProduct is returned per ProductFamily.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FamilyMembers" type="ns:ProductType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            A set of products (within the same product family) that match the search query. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="hasMoreChildren" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>

         If true, the product family has more products than you requested in

         MaxChildrenPerFamily for a query in the GetProductSearchResults request. 

         In this case, no products are returned in the GetProductSearchResults response.

         (Call GetProductFamilyMembers to retrieve all products in the family.)

         If 0 (false), the product family has MaxChildrenPerFamily or fewer product

         children, and GetProductSearchResults returns all products in the family.

         Output only.

         	</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
<xs:complexType name="ProductFinderConstraintType">
		<xs:annotation>
			<xs:documentation>

      An attribute (constraint) that was specified in a search request that was 

      based on a product finder query. Used to help you map each query in a batch

      request to the corresponding search result in the response.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DisplayName" type="xs:string">
				<xs:annotation>
					<xs:documentation>

            The search attribute name (e.g., Manufacturer). 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DisplayValue" type="xs:string">
				<xs:annotation>
					<xs:documentation>

            The search attribute value the user specified in the query 

            (e.g., the actual name the user chose for the manufacturer).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ProductSearchPageType">
		<xs:annotation>
			<xs:documentation>

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DataElements" type="xs:string" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

          An HTML snippet that specifies hints for the user, help links, help graphics, 

          and other supplemental information that varies per characteristics set. 

          Usage of this information is optional and may require developers to inspect 

          the information to determine how it can be applied in an application. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SearchCharacteristicsSet" type="ns:CharacteristicsSetType">
				<xs:annotation>
					<xs:documentation>

          A list of attributes that describe valid "single-attribute" search criteria 

          for a catalog-enabled category. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SearchType" type="ns:CharacteristicsSearchCodeType">
				<xs:annotation>
					<xs:documentation>

          Indicates whether one attribute or multiple attributes can be used as the search keyword 

          when calling GetProductSearchResults. See CharacteristicsSearchCodeType for a list 

          of valid codes.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SortCharacteristics" type="ns:CharacteristicType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

          A list of attributes that define the choice of criteria by which catalog search results 

          can be sorted. At least one attribute is always returned in the list. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SearchRequestType">
		<xs:annotation>
			<xs:documentation>
      Specifies a query consisting of attributes. Only attributes that are returned 
      from GetProductFinder can be used. See the Developer's Guide for more information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AttributeSetID" type="xs:int">
				<xs:annotation>
					<xs:documentation>
            Numeric identifier for a characteristic set that defines the attributes
            (unique across all eBay sites). 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductFinderID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Numeric identifier for a buy-side product finder that specifies a 
            valid combination of search attributes (unique across all eBay sites). 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SearchAttributes" type="ns:SearchAttributesType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
            A query consisting of a set of attributes (search criteria). If the query 
            includes multiple attributes, the search engine will apply "AND" logic to the 
            query. Use GetProductFinder to determine the list of valid attributes 
            and how many are permitted for the specified characteristic set.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ProductSearchType">
		<xs:annotation>
			<xs:documentation>

      Container for a product query and pagination instructions.

      This data is applicable when searching eBay catalogs for stock product

      information (to use in listings with Pre-filled Item Information.)

      Input only.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProductSearchID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Unique key to distinguish between query results in the response. 
            You define the key. Each search request ID must be unique within the same call. 
            Primarily useful when conducting multiple searches in the same call. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AttributeSetID" type="xs:int">
				<xs:annotation>
					<xs:documentation>

            Identifier for a characteristics set that is mapped to a catalog-enabled category 

            (unique across all eBay sites). 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductFinderID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Numeric identifier for a sell-side product finder that was used to retrieve 
            the search attributes being used in the request. The product finder must be 
            mapped to a catalog-enabled category (i.e., it cannot be a buy-side product finder ID) 
            associated with the characteristics set.
            Use a product finder when you want to specify multiple attributes in a
            product search query. Call GetCategory2CS to determine which categories
            support sell-side product finder searches.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Identifier for a representative stock product in a product family.

            Used as input in GetProductFamilyMembers requests to identify a product family.

            Use GetProductSearchResults to determine the available IDs.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SortAttributeID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Unique identifier for a sortable attribute. Use GetProductSearchPage 
            or GetProductFinder to determine the valid sort attribute IDs for the specified characteristics set. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxChildrenPerFamily" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Pagination instruction that specifies the maximum quantity of products to return for each 

            product family within the search response whose ID matches the current request's ID. 

            In the response, if the last family returned contains MaxChildrenPerFamily or fewer 

            additional products, those additional products are also returned (i.e., the actual quantity 

            returned for the last family can exceed the specified maximum value). Max valid value is 20000. 

            Default is 5 if this field is zero (0), empty, or not specified. The value should not 

            include punctuation (i.e., a thousands separator is not valid). 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SearchAttributes" type="ns:SearchAttributesType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            Container for a query consisting of a set of attributes (search criteria). 

            If the query includes multiple attributes, the search engine will apply "AND" logic to the query. 

            Call GetProductSearchPage or GetProductFinder to determine the list of valid attributes and how many are 

            permitted for the specified characteristics set. See the Developer's Guide for details.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Pagination" type="ns:PaginationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Pagination instruction that specifies the virtual page of data to return 

            per search request. Default page number is 0 (the first page). 

            Specify a page number of 0 or a positive value lower 

            than the approximate number of pages available.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AvailableItemsOnly" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Filter to only retrieve products that match active eBay listings. 
            If true, only retrieve products that have been used to pre-fill listings on the 
            specified eBay site. 
            If false, retrieve all products that match the query. Default is false.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QueryKeywords" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            One or more keywords to search for in the characteristic sets specified in 
            CharacteristicSetIDs. Both the product title and Item Specifics are searched. 
            Max 350 characters. Either SearchAttributes or QueryKeywords is required 
            in GetProductSearchResults (but do not pass both). Blank searches are not allowed 
            (and result in a warning). The words "and" and "or" are treated like any other 
            word. Only use "and", "or", or "the" if you are searching for products containing 
            these words. To use AND or OR logic, use eBay's standard modifiers. Wildcards 
            (e.g., *) are also supported. Be careful when using spaces before or after 
            modifiers and wildcards (+, -, or *). Not applicable with GetProductFamilyMembers.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharacteristicSetIDs" type="ns:CharacteristicSetIDsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
             List of one or more characteristic set IDs that indicate which characteristic sets 
             to search in. If not specified, the search is conducted across all characteristic sets. 
             Only applicable when QueryKeywords is specified. Not applicable with GetProductFamilyMembers.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="DataElementSetType">
		<xs:annotation>
			<xs:documentation>

      Container for a set of data elements (see below) that are applicable for a set

      of products that were returned within the same response. The data elements contain

      supplemental information that can help end users understand product search results.

      Usage of this information is optional and may require developers to inspect

      the information to determine how it can be applied in an application.

      Output only.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DataElement" type="xs:string">
				<xs:annotation>
					<xs:documentation>

          An HTML snippet that specifies hints for the user,

          help links, help graphics, and other supplemental information that varies per

          characteristics set.

          Usage of this information is optional and may require developers to inspect

          the information to determine how it can be applied in an application.

          Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="attributeSetID" type="xs:int">
			<xs:annotation>
				<xs:documentation>

             Matches the AttributeSetID associated with a ProductSearchResult

             returned from the same call that returned the data element set.

             As product search calls can perform batch searches, this ID helps

             you determine which attribute set the data element set is associated with.

             Output only.

				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
<xs:complexType name="ProductSearchResultType">
		<xs:annotation>
			<xs:documentation>
	
	      Container for the results of a product query. Supports Pre-filled Product Information
	
	      functionality.
	
	      Output only.
	
				</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ApproximatePages" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	
	            The approximate quantity of pages of results that match the product search query 
	
	            (TotalProducts divided by the median number of products per page examined so far). 
	
	            Lowest value is 1. See the guide for more information.
	
	            Output only.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AttributeSetID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	
	            Constant value that identifies the attribute set in a language-independent way.
	
	            Unique across all eBay sites. Corresponds to a characteristics set ID.
	
	            Identifies the characteristics set associated with the current set of
	
	            search results.
	
	            Output only.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HasMore" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	
	            If true, the query results contain additional pages (higher than the current page number). 
	
	            Output only.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductFamilies" type="ns:ProductFamilyType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
	
	            A list of product families. A product family identifies a group of related products. 
	
	            For example, the movie "My Favorite Movie: The Sequel" might be released on DVD, but there 
	
	            might be several editions of the DVD (e.g., in different languages) with different ISBN numbers. 
	
	            All variations are part of the same product family ("My Favorite Movie: The Sequel" in the DVD format). 
	
	            Output only.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductFinderConstraints" type="ns:ProductFinderConstraintType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
	
	            A list of attributes (constraints) that were specified in the search request.
	
	            This information is useful when multiple queries were specified in a 
	
	            GetProductSearchResults request. Use this information to map each query
	
	            to each result in the response object.
	
	            Applicable when the search request was constructed based on a product finder.
	
	               </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TooManyMatchesFound" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	
	            If too many search results match the query, the TooManyMatchesFound tag is returned with a warning. 
	
	            In this case, it may be a good idea to ask the user to specify more details to narrow the search 
	
	            (e.g., specify "My Favorite Movie" instead of "My").
	
	            Output only.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TotalProducts" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	
	            The total quantity of products that match the query. This can exceed the actual number 
	
	            of products returned in the current virtual page.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
	
	            Query ID.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NumProducts" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Total quantity of products that match the search request (across all characteristic sets). 
          This value can exceed the actual quantity of products returned in the current virtual page.
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AttributeSet" type="ns:ResponseAttributeSetType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
	            A result containing a set of one or more product families.
	            If no results match the query, AttributeSet is not returned.  
	            For GetProductSearchResults, if QueryKeywords and multiple characteristic set IDs were 
	            specified in the request, multiple AttributeSet objects can be returned. 
               Each AttributeSet corresponds to a characteristic set ID specified 
               in the request.
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ResponseAttributeSetType">
		<xs:annotation>
			<xs:documentation>
	      A single set of one or more product families and related information 
        returned in the results of a product search. Supports Pre-filled Item Information
        functionality.
	      Output only.
				</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ApproximatePages" type="xs:int">
				<xs:annotation>
					<xs:documentation>
	
	            The approximate quantity of pages of results that match the product search query 
	
	            (TotalProducts divided by the median number of products per page examined so far). 
	
	            Lowest value is 1. See the guide for more information.
	
	            Output only.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AttributeSetID" type="xs:int">
				<xs:annotation>
					<xs:documentation>
	
	            Constant value that identifies the attribute set in a language-independent way.
	
	            Unique across all eBay sites. Corresponds to a characteristics set ID.
	
	            Identifies the characteristics set associated with the current set of
	
	            search results.
	
	            Output only.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HasMore" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>
	
	            If true, the query results contain additional pages (higher than the current page number). 
	
	            Output only.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductFamilies" type="ns:ProductFamilyType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
	
	            A list of product families. A product family identifies a group of related products. 
	
	            For example, the movie "My Favorite Movie: The Sequel" might be released on DVD, but there 
	
	            might be several editions of the DVD (e.g., in different languages) with different ISBN numbers. 
	
	            All variations are part of the same product family ("My Favorite Movie: The Sequel" in the DVD format). 
	
	            Output only.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductFinderConstraints" type="ns:ProductFinderConstraintType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
	
	            A list of attributes (constraints) that were specified in the search request.
	
	            This information is useful when multiple queries were specified in a 
	
	            GetProductSearchResults request. Use this information to map each query
	
	            to each result in the response object.
	
	            Applicable when the search request was constructed based on a product finder.
	
	               </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TooManyMatchesFound" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>
	
	            If too many search results match the query, the TooManyMatchesFound tag is returned with a warning. 
	
	            In this case, it may be a good idea to ask the user to specify more details to narrow the search 
	
	            (e.g., specify "My Favorite Movie" instead of "My").
	
	            Output only.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TotalProducts" type="xs:int">
				<xs:annotation>
					<xs:documentation>
	
	            The total quantity of products that match the query. This can exceed the actual number 
	
	            of products returned in the current virtual page.
	
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="PromotedItemType">
		<xs:annotation>
			<xs:documentation>
				Contains the data describing one cross-promoted item.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ItemID" type="ns:ItemIDType">
				<xs:annotation>
					<xs:documentation> 
					  The unique ID of the cross-promoted item.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PictureURL" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					 The URL of the first self-hosted picture of the cross-promoted item.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SelfHostedURL" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					For an item listed with multiple self-hosted pictures,
					self-hosted pictures in addition to the one listed in PictureURL.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="position" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					(out) The ordinal position of the cross-promoted item 
					in the display. If the display is from top to bottom,
					1 is at top. If the display is from left to right, 1
					is at left. Output only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromotionPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
					 (out) The price of the cross-promoted item. Output only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromotionPriceType" type="ns:PromotionItemPriceTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
					The listing type for the promoted item and how the item price
					is used, either AuctionPrice or BuyItNowPrice.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SelectionType" type="ns:PromotionItemSelectionCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
					(out) The manner in which the cross-promoted item was chosen
					to be associated with the referring item. Output only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					(out) The title of the promoted item for display in the
					referring item's page. Output only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListingType" type="ns:ListingTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					(out) The listing type under which the cross-promoted item
					is being offered. Output only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CrossPromotionsType">
		<xs:annotation>
			<xs:documentation>
			(out) Contains one or more items cross-promoted with
			the display or purchase of a referring item.
      		Output only.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ItemID" type="ns:ItemIDType">
				<xs:annotation>
					<xs:documentation> 
					(out) Unique item ID for the referring item. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrimaryScheme" type="ns:PromotionSchemeCodeType">
				<xs:annotation>
					<xs:documentation> 
					(out) The primary cross-promotion rule scheme that
					was applied to return the cross-promoted item.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromotionMethod" type="ns:PromotionMethodCodeType">
				<xs:annotation>
					<xs:documentation> 
					(out) The type of promotion, CrossSell or UpSell.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerID" type="xs:string">
				<xs:annotation>
					<xs:documentation>
					(out) The eBay user ID of the seller offering the
					cross-promoted item. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingDiscount" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>
					(out) Whether a shipping discount is offered by the seller
					when the cross-promoted item is purchased. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerKey" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					(out) The key of the seller who is promoting the item.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StoreName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					(out) The store name of the seller offering the cross-promoted
					item. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromotedItem" type="ns:PromotedItemType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
					(out) Contains one cross-promoted item.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ProximitySearchType">
		<xs:annotation>
			<xs:documentation>
					Contains data for filtering a search by proximity.
				</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MaxDistance" type="xs:int">
				<xs:annotation>
					<xs:documentation>
							The maximum distance from the specified postal code to search for items.
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PostalCode" type="xs:string">
				<xs:annotation>
					<xs:documentation>
							The postal code to use as the basis for the proximity search.
						</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ReviseStatusType">
		<xs:annotation>
			<xs:documentation> 

        Contains data indicating whether an item has been revised since the

        listing became active and, if so, which among a subset of properties

        have been changed by the revision.

        Output only.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ItemRevised" type="xs:boolean">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates the item was revised since the listing became

            active.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyItNowAdded" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates that a Buy It Now Price was added for the item.

            Only applicable to US eBay Motors items.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyItNowLowered" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates that the item's Buy It Now price was lowered.

            Only applicable to US eBay Motors items.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReserveLowered" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates that the reserve price was lowered for

            the item. Only applicable to US eBay Motors items.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReserveRemoved" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates that the reserve price was removed

            from the item. Only applicable to US eBay Motors items.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SearchAttributesType">
		<xs:annotation>
			<xs:documentation>

      A product or item aspect or feature that can be used as a criterion in a search 
      for catalog content or for listed items. 
      For example, "Format" might be a criterion for searching the catalogs for 
      Pre-filled Item Information related to hardcover books. 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:AttributeID">
				<xs:annotation>
					<xs:documentation>

            Unique identifier for the attribute within the characteristics set. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DateSpecifier" type="ns:DateSpecifierCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Specifies the date sub-component that the attribute represents.

            This only applies to date attributes.

            Allows for separate text fields or drop-down lists to be rendered for

            each sub-component. For example, the day, month, and year can be rendered as

            separate drop-down lists. See DateSpecifierCodeType for possible values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeSpecifier" type="ns:RangeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Indicates that the attribute represents the high or low end in a range,

            such as a date range or a price range. See RangeCodeType.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ValueList" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            Container for the list of one or more valid values that the user has selected for 

            the searchable attribute. If multiple values are specified, the search engine 

            applies "OR" logic to the query (i.e., at least one of the specified values must match).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SearchLocationType">
		<xs:annotation>
			<xs:documentation> 

        One of the data filters used when searching for items using

        GetSearchResults. Allows filtering based on the location of the item or

        its availability relative to an eBay site. Or allows for filtering

        based on regional listing.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RegionID" type="xs:string">
				<xs:annotation>
					<xs:documentation>

            Specifies a region ID. The item must have been listed for the specified region

            to be returned in the search result set.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SiteLocation" type="ns:SiteLocationType">
				<xs:annotation>
					<xs:documentation>

            Specifies a filter based on a particular eBay site and the item's relation to

            that site (items listed with a site's currency, items located in the country

            for the site, items available to the country for the site, and items listed

            on the specified site).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SiteLocationType">
		<xs:annotation>
			<xs:documentation>

            Contains the data that defines a site-based filter (used when

            searching for items and filtering the search result set).

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Site" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Site ID for the filter. The value specified in SiteID indicates the item's

            relationship with this site (and the country the site ID implies).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SiteID" type="ns:SiteIDFilterCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Specifies the item relationship with the site specified in Site: 

            Items listed in the currency implied by SiteID. 

            Items located in the country implied by SiteID. 

            Items available to the country implied by SiteID. 

            (For the US site, this implies listings from ALL English-language countries 

            that are available to the US.) 

            Items listed on the site implied by SiteID, regardless of listing currency. 

            Items located in Belgium or listed on one of the two Belgian sites.  

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SuggestedCategoryType">
		<xs:annotation>
			<xs:documentation>
	      Defines a suggested category, returned
	      in response to a search for categories that contain
	      listings with certain keywords in their titles and descriptions.
	    </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Category">
				<xs:annotation>
					<xs:documentation>
	    		  Describes a category, including the category name,
	    		  category ID, and other information.
  				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PercentItemFound" type="xs:int">
				<xs:annotation>
					<xs:documentation>
	    		  Identifies the percentage of search matches that
	    		  fall into this category.
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SuggestedCategoryArrayType">
		<xs:annotation>
			<xs:documentation>
	     Contains an array of categories that contain listings with
	     specified keywords in their titles or descriptions. The array
	     can contain up to 10 categories.
        </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:SuggestedCategory" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
	    		  Describes a category that contains listings that match
	    		  specified keywords. 
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ShippingServiceOptionsType">
		<xs:annotation>
			<xs:documentation> 
				Shipping costs and options related to a domestic shipping service.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShippingInsuranceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						(out) The insurance cost associated with shipping a single item
						with this shipping service. Exception: for GetItemShipping,
						this is proportional to QuantitySold. If the item has not yet been 
						sold, insurance information cannot be calculated and the value is 
						0.00. For calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ShippingService" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						(in/out) A domestic shipping service offered
						for shipping the item (for example, UPS Ground). 
						For flat and calculated shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						(in/out) The meaning of this element depends on the call and on
						whether flat or calculated shipping has been selected. See the 
						document "Managing Shipping" and specific call documentation
						for differences. (For example, it could be the cost to
						ship a single item, the cost to ship all items, or the cost to
						ship just the first of many items, with
						ShippingServiceAdditionalCost accounting for the rest.) For
						flat and calculated shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceAdditionalCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						The cost of shipping each additional item beyond the first
						item. For input, this is required if the listing is for
						multiple items and should be zero for single-item listings.
						Default value is 0.00. For flat shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServicePriority" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(in/out) Seller-preferred presentation order relative to other
						service options. Valid values: 1 (1st choice), 2 (2nd choice),
						3 (3rd choice). For flat and calculated shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CalculatedShippingRateType">
		<xs:annotation>
			<xs:documentation> 
        (in/out) Details pertinent to one or more items for which
        calculated shipping has been offered by the seller, such as package
        dimension and weight and packaging/handling costs. Also returned
        with the data for an item's transaction.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="OriginatingPostalCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Postal code from which the package will be shipped.
            For calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PackageDepth" type="ns:MeasureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            (in/out) Depth of the package needed to ship the items.
            For calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PackageLength" type="ns:MeasureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            (in/out) Length of the package needed to ship the items.
            For calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PackageWidth" type="ns:MeasureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            (in/out) Width of the package needed to ship the items.
            For calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PackagingHandlingCosts" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Fees a seller might assess for the shipping of the 
            item (in addition to whatever the shipping service might 
            charge). For calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingIrregular" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Whether a package is irregular and therefore cannot go
            through the stamping machine at the shipping service office and
            thus requires special or fragile handling. For calculated
            shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingPackage" type="ns:ShippingPackageCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) The nature of the package used to ship the item(s). 
            Required for calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WeightMajor" type="ns:MeasureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) An aspect of shipping weight whose value depends on
            the unit attribute. The following would represent a package
            weight of 5 lbs 2 oz: &lt;WeightMajor unit="lbs"&gt;5&lt;/WeightMajor&gt;
            &lt;WeightMinor unit="oz"&gt;2&lt;/WeightMinor&gt;
            For calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WeightMinor" type="ns:MeasureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) An aspect of shipping weight whose value depends on
            the unit attribute. The following would represent a package
            weight of 5 lbs 2 oz: &lt;WeightMajor unit="lbs"&gt;5&lt;/WeightMajor&gt;
            &lt;WeightMinor unit="oz"&gt;2&lt;/WeightMinor&gt;
            For calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SalesTaxType">
		<xs:annotation>
			<xs:documentation> 

        Type for expressing sales tax data.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SalesTaxPercent" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (US only) Percent of an item's price to be charged as the sales
            tax for the transaction.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SalesTaxState" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (US only) State for which the sales tax is being collected.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingIncludedInTax" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (US only) Whether shipping costs were part of the base amount
            that was taxed. Flat or calculated shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SalesTaxAmount" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						(US only) The amount of sales tax.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SellerType">
		<xs:annotation>
			<xs:documentation>

        Information about a user returned in the context of an item's seller.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AllowPaymentEdit" type="xs:boolean">
				<xs:annotation>
					<xs:documentation> 

            Indicates whether the user as a seller by default allows buyers to edit the

            total cost of an item (while in checkout). (Sellers enable this property in

            their My eBay user preferences on the eBay site.)

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BillingCurrency" type="ns:CurrencyCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Currency type in which the user is billed seller fees.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:CheckoutEnabled">
				<xs:annotation>
					<xs:documentation> 

            Indicates whether the user as a seller has the option set to default new

            item listings to go through checkout. (Sellers enable this property in

            their My eBay user preferences on the eBay site.)

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CIPBankAccountStored" type="xs:boolean">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates that the user has stored bank account information with eBay

            in order to use the "CIP in checkout" feature. Applicable to all eBay sites

            that support CIP as a payment method.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GoodStanding" type="xs:boolean">
				<xs:annotation>
					<xs:documentation> 

            If true, indicates that the user is in good standing with eBay. (One of the

            requirements for listing a new item with Immediate Payment.)

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LiveAuctionAuthorized" type="xs:boolean">
				<xs:annotation>
					<xs:documentation> 

            Indicates whether the user as a seller is authorized to list items to the Live

            Auctions specialty site.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MerchandizingPref" type="ns:MerchandizingPrefCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Indicates whether the seller participates in the
					Merchandising Manager feature. If so, the seller can
					set up rules for cross-promoting items from the seller's store. 
					If not, eBay cross-promotes items as the seller's items are
					being viewed or purchased.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QualifiesForB2BVAT" type="xs:boolean">
				<xs:annotation>
					<xs:documentation> 

            Indicates whether the user is subject to VAT. Users who have registered with

            eBay as VAT-exempt are not subject to VAT. Not applicable to users whose

            country of residence is outside the EU.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerGuaranteeLevel" type="ns:SellerGuaranteeLevelCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Maximum level of Motor's Seller guarantee the seller is authorized to offer.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:SellerLevel">
				<xs:annotation>
					<xs:documentation> 

            The user's eBay PowerSeller tier. Possible values are enumerated in the

            SellerLevelCodeType code list.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:SellerPaymentAddress" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Address used by eBay for purposes of billing the user for seller fees.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SchedulingInfo" type="ns:SchedulingInfoType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Container for scheduling limits for the user. Conveys the minimum and maximum

            minutes the user may schedule listings in advance, as well as the maximum

            number of items the user may schedule.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:StoreOwner">
				<xs:annotation>
					<xs:documentation> 

            Indicates whether the user has an eBay Store (boolean value).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StoreURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            URL for the user's eBay Store, if the user is a Store owner. Blank if not.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ShippingDetailsType">
		<xs:annotation>
			<xs:documentation> 
        Type for the shipping-related details for an item or transaction, 
        including flat and calculated shipping costs and shipping 
        insurance costs.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AllowPaymentEdit" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Whether the seller allows the buyer to edit the payment amount
            for the transaction. (Sellers enable this property in their My
            eBay user preferences on the eBay site.)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApplyShippingDiscount" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Whether the seller specified that a shipping discount is to be
            applied (in the event that an item's transaction is later
            combined with others into a single order).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalculatedShippingRate" type="ns:CalculatedShippingRateType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Details pertinent to one or more items for which
            calculated shipping has been offered by the seller, such as
            package dimension and weight and packaging/handling costs.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CarrierShippingFee" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (out) Deprecated (use ShippingServiceCost). The calculated cost of shipping one or more items in a
            transaction, based on shipping parameters and the selected
            shipping service. For calculated shipping only. Value can only
            be returned after the item's sale and shipping cost is
            calculated by eBay.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChangePaymentInstructions" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Whether payment instructions are included (for
            example, to update the details of a transaction). Flat and
            calculated shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InsuranceFee" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Cost of shipping insurance set by the seller. If the
            buyer bought more than one of this item, this is the insurance
            for just a single item. Exception: for GetItemShipping, this is
            proportional to QuantitySold. Default
            is 0.00. Value should be greater than 0.00 if InsuranceOption
            is Optional or Required. For flat shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:InsuranceOption" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Whether the seller offers shipping insurance and, if
            so, whether the insurance is optional or required. Flat and
            calculated shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InsuranceTotal" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InsuranceWanted" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (out) Whether the buyer selected to pay for insurance offered
            by the seller as an option. This only has a value after the
            buyer has gone through checkout and selected the insurance
            preference.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaymentInstructions" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Payment instructions/message from the seller to the
            buyer. Flat and calculated shipping and return policy instructions. 
            See the Developer's Guide for information about specifying shipping 
            instructions and return policies. Max length 500.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SalesTax" type="ns:SalesTaxType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Sales tax details. US site only. Flat and calculated
            shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerPostalCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (out) Postal code from seller's registration address. Not for
            calculating shipping costs--see
            CalculatedShippingRateType.OriginatingPostalCode.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingRateErrorMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (out) Returns the words No Error or returns an error message
            related to an attempt to calculate shipping rates. For
            calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingRateType" type="ns:ShippingRateTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (out) A shipping rate scale for shipping through UPS that
            affects the shipping cost calculated for UPS (lower if
            ShippingRateType is DailyPickup). ShippingRateType is only
            returned if ShippingService is one of the UPS shipping
            services. For calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ShippingServiceOptions" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Shipping costs and options related to domestic
            shipping services offered by the seller. Flat and calculated
            shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:InternationalShippingServiceOption" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
						(in/out) Shipping costs and options related to an international
						shipping service.
						When used as input, if one is provided,
						at least one domestic ShippingService must be provided.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingType" type="ns:ShippingTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (in/out) The shipping cost model offered by the
            seller: Flat or Calculated.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SiteHostedPictureType">
		<xs:annotation>
			<xs:documentation> 

        Data for images hosted on the eBay site (eBay Picture Services).

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PictureURL" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
            URL for item pictures that are stored/hosted by eBay. Max length 150 for each URL.
            A listing can have a maximum of 12 picture URLs hosted by eBay Picture Services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PhotoDisplay" type="ns:PhotoDisplayCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Special picture effect seller selects for the display of the an item's

            picture(s). Default is None. See PhotoDisplayCodeType for specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GalleryType" type="ns:GalleryTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            For purposes of displaying a picture of the image, indicates whether the

            item is featured or appears in the Gallery. See GalleryTypeCodeType for

            specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StorefrontType">
		<xs:annotation>
			<xs:documentation> 

             Contains information related to the item in the context of 

             a seller's eBay Store. Applicable for auction format, basic Fixed Price, 

             and Store Inventory format items listed by eBay Stores sellers. 

     			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:StoreCategoryID">
				<xs:annotation>
					<xs:documentation> 

                   Numeric ID for a custom category that the seller 

                   created in their eBay Store, if any.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:StoreCategory2ID">
				<xs:annotation>
					<xs:documentation> 
			Identifies a second custom category for listing an item in an eBay store.
			Store owners can create up to 19 custom categories for their stores on
			the eBay site. If specified, must be an integer between 0 and 20. The values
			are 0 = None; 1 = Other;  2 = Category1; 3 = Category2; and up to 20 = Category19.
			One category cannot be set and always has the value Other.
             If you specify an invalid value (for example, 21), the system uses the value of StoreCategoryID. 
             If you specify StoreCategory2ID, but StoreCategoryID is blank (or Other),  the system sets the value 
             of StoreCategory2ID to 0 (None). StoreCategoryID must be set to something meaningful and 
             different from StoreCategory2ID. Can be used by eBay Stores owners only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:StoreURL" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

                   URL pointing to the seller's eBay Store page. 

                   Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SellingStatusType">
		<xs:annotation>
			<xs:documentation>

        Contains various details about the current status of a listing. These

        values are computed by eBay and cannot be specified at listing time.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BidCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Number of bids placed so far against the item. Only applicable to

            competitive-bidding listings (Chinese and Dutch auctions).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BidIncrement" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Smallest amount a bid must be above the current high bid. Only applicable

            to competitive-bidding listings (Chinese and Dutch auctions). Returns zero

            (0.00) for Ad type, eBay Stores Inventory (Stores Fixed-price), and Basic

            Fixed-Price (Fixed Price Item) listings.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConvertedCurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Converted value of the CurrentPrice in the currency of the site that

            returned this response. For active items, refresh the listing's data every 24

            hours to pick up the current conversion rates.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrentPrice" type="ns:AmountType">
				<xs:annotation>
					<xs:documentation>

            For competitive-bidding listings (Chinese and Dutch auctions), current minimum

            asking price (start price) or the current highest bid for the item if bids have

            been placed. Shows minimum bid if no bids have been placed on the item. For

            Basic Fixed-Price (FixedPriceItem), Store Inventory (StoresFixedPrice), or Ad

            type (AdType) listings this returns the original price specified when the item

            was listed/re-listed or the revised price if the item was revised.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:HighBidder" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            For auctions that have ended and have a winning bidder, indicates the user who

            is the current high bidder. For Basic Fixed Price (FixedPriceItem) and Store

            Inventory (StoresFixedPrice) listings that have ended, indicates the user who

            purchased the item. Not returned for auctions that have received no bids or

            Fixed Price Item and Stores Fixed-price listings that are still active.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LeadCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Applicable to Ad type listings only. Indicates how many leads to

            potential buyers are associated with this item. Returns 0 (zero) for listings in

            other formats.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinimumToBid" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Smallest amount the next bid on the item can be. Returns same value as

            Item.StartPrice (if no bids have yet been placed) or CurrentPrice plus

            BidIncrement (if at least one bid has been placed). Only applicable to Chinese and

            Dutch auction listings. Returns null for basic Fixed Price (FixedPriceItem),

            Store Inventory (StoresFixedPrice), and Ad type listings.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuantitySold" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Number of items purchased so far. (Subtract from the value returned in

            the Item.Quantity field to calculate the number of items remaining.)

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReserveMet" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Indicates whether the reserve price has been met for the listing. Returns

            true if the reserve price was met or no reserve price was specified.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SecondChanceEligible" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Part of the Second Chance Offer feature, indicates whether the seller can

            extend a second chance offer for the item.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SchedulingInfoType">
		<xs:annotation>
			<xs:documentation> 

        Contains information for scheduling limits for the user.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MaxScheduledMinutes" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Maximum number of minutes that a listing may be scheduled in advance of its going live.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinScheduledMinutes" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Minimum number of minutes that a listing may be scheduled in advance of its going live.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxScheduledItems" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Maximum number of Items that a user may schedule.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreType">
		<xs:annotation>
			<xs:documentation>
	      The configuration of an eBay Store.
	    </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Name of the eBay Store (35 characters maximum). The name is shown
						at the top of the Store page.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URLPath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The URL path of the Store (58 characters maximum). Only if you 
						are using Chinese characters in the Name property do you need to 
						use this field, such as if you are opening a Store on the Taiwan 
						site. The reason for this is that the URL path is normally derived 
						from the Store name, but it cannot be derived from the name of the 
						Store if it contains Chinese characters because URLs cannot 
						contain Chinese characters.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The complete URL of the user's Store. This field is only ever
						returned, and does not need to be explicitly set.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubscriptionLevel" type="ns:StoreSubscriptionLevelCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Subscription level (tier) for the user's eBay Store.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store description (300 characters maximum).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Logo" type="ns:StoreLogoType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store logo.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Theme" type="ns:StoreThemeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store theme.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderStyle" type="ns:StoreHeaderStyleCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Style for the Store header.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HomePage" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Page to use as the Store's homepage (default is 0). To change the 
						homepage, specify the PageID of one of the Store's custom pages.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemListLayout" type="ns:StoreItemListLayoutCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The default layout type to use for the Store items.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemListSortOrder" type="ns:StoreItemListSortOrderCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The default sort order to use for the items for sale in the Store.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomHeaderLayout" type="ns:StoreCustomHeaderLayoutCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Layout for the Store's custom header.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomHeader" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Custom header text for the Store.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExportListings" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies whether to export the Store listings to comparison
						shopping websites.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomCategories" type="ns:StoreCustomCategoryArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Custom categories for the Store.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomListingHeader" type="ns:StoreCustomListingHeaderType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Custom listing header for the Store.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MerchDisplay" type="ns:MerchDisplayCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies the chosen customization display scheme for this store's Merch Widgets.
						See MerchDisplayCodeType for specific values.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreColorType">
		<xs:annotation>
			<xs:documentation>
				Store color set.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Primary" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Primary color for the Store. Specified in 6-digit Hex format. 
						For example: F6F6C9
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Secondary" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Secondary color for the Store. Specified in 6-digit Hex format. 
						For example: F6F6C9
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Accent" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Accent color for the Store. Specified in 6-digit Hex format. 
						For example: F6F6C9
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreColorSchemeArrayType">
		<xs:annotation>
			<xs:documentation>
				Set of eBay Store color schemes.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:ColorScheme" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						A Store color scheme.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreColorSchemeType">
		<xs:annotation>
			<xs:documentation>
				Store color scheme.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ColorSchemeID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store color scheme ID. (use GetStoreOptions to get the list of
						valid theme color scheme IDs).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store color scheme name. Provides a user-friendly name for the
						color scheme.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Color" type="ns:StoreColorType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store color set.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Font" type="ns:StoreFontType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store font set.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreCustomCategoryArrayType">
		<xs:annotation>
			<xs:documentation>
	  		Set of custom categories for the Store.
	  	</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:CustomCategory" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
	  				A Store custom category.
	  			</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreCustomCategoryType">
		<xs:annotation>
			<xs:documentation>
	  		Configuration of a Store custom category.
	  	</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CategoryID" type="xs:int">
				<xs:annotation>
					<xs:documentation>
			  		Custom category ID.
			  	</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>
			  		Name of the custom category.
			  	</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Order" type="xs:int">
				<xs:annotation>
					<xs:documentation>
			  		Order in which the custom category appears in the list of Store
			  		categories.
			  	</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChildrenCategories" type="ns:StoreCustomCategoryType" minOccurs="0"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreCustomListingHeaderLinkType">
		<xs:annotation>
			<xs:documentation>
				Custom listing header link.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LinkID" type="xs:int">
				<xs:annotation>
					<xs:documentation>
			  		Link ID for the listing header link. The ID is used when the link
			  		is a custom category or for a custom page, and it is not needed
			  		when the LinkType property is "AboutMe" or "None".
			  	</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Order" type="xs:int">
				<xs:annotation>
					<xs:documentation>
			  		Order in which to show the custom listing header link.
			  	</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinkType" type="ns:StoreCustomListingHeaderLinkCodeType">
				<xs:annotation>
					<xs:documentation>
			  		Type of link to include in the custom listing header.
			  	</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreCustomListingHeaderType">
		<xs:annotation>
			<xs:documentation>
	  		Configuration of a Store custom listing header.
	  	</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DisplayType" type="ns:StoreCustomListingHeaderDisplayCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			  		Display type for the custom listing header.
			  	</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HasLogo" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			  		Specifies whether the custom header has a logo.
			  	</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HasSearchBox" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies whether the custom header has a search box.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinkToInclude" type="ns:StoreCustomListingHeaderLinkType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Link to include in the custom header.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreCustomPageArrayType">
		<xs:annotation>
			<xs:documentation>
	  		Set of Store custom pages.
	  	</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:CustomPage" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
	  				A Store custom page.
	  			</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreCustomPageType">
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	  				Name of the Store custom page. The Name is used in links to the
	  				page.
	  			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	  				Unique identifier for the Store custom page. When you are using 
	  				SetStoreCustomPage, if you specify a valid PageID, the custom page
	  				is updated. If you do not specify a PageID, the custom page is
	  				added.
	  			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URLPath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	  				The URL path of the custom page. Only if you are using Chinese
	  				characters in the Name property for the custom page do you need
	  				to use this field, such as if you are opening a Store on the
	  				Taiwan site. The reason for this is that the URL path is normally
	  				derived from the Store custom page name, but it cannot be derived
	  				from the name of the custom page if it contains Chinese characters
	  				because URLs cannot contain Chinese characters.
	  			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	  				Full URL of the Store custom page.
	  			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="ns:StoreCustomPageStatusCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	  				Status of the custom page.
	  			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	  				The HTML content of the custom page. This field has a maximum size
	  				of 96 kilobytes.
	  			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LeftNav" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	  				Specifies whether the left navigation bar is visible on the page.
	  			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PreviewEnabled" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	  				If true, then the other inputs are ignored, and the content of the
	  				page as it will be displayed within the Store is returned. If
	  				false, then the page is either modified or added, and the content
	  				of the page is not returned.
	  			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Order" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	  				Order in which the page is displayed in the list of custom pages.
	  			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreFontType">
		<xs:annotation>
			<xs:documentation>
	  		Store font set.
	  	</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="NameFace" type="ns:StoreFontFaceCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Font for the Store name.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NameSize" type="ns:StoreFontSizeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Font size for the Store name.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NameColor" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Font color for the Store name. Specified in 6-digit Hex format. 
						For example: F6F6C9
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TitleFace" type="ns:StoreFontFaceCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Font for the Store section title.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TitleSize" type="ns:StoreFontSizeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Font size for the Store section title.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TitleColor" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Font color for the Store section title. Specified in 6-digit Hex 
						format. For example: F6F6C9
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DescFace" type="ns:StoreFontFaceCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Font for the Store description.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DescSize" type="ns:StoreFontSizeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Font size for the Store description.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DescColor" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Font color for the Store description. Specified in 6-digit Hex 
						format. For example: F6F6C9
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreLogoArrayType">
		<xs:annotation>
			<xs:documentation>
				Set of Store logos.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Logo" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						A Store logo.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreLogoType">
		<xs:annotation>
			<xs:documentation>
				Store logo.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LogoID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store logo ID (use GetStoreOptions to get the list of valid logo IDs).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store logo name. Provides a user-friendly name for the logo.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						URL of the logo. Must have a .gif or .jpg extention. Specified when 
						you are using a customized logo.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreSubscriptionArrayType">
		<xs:annotation>
			<xs:documentation>
				Set of eBay Store subscription levels.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Subscription" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						A Store subscription level.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreSubscriptionType">
		<xs:sequence>
			<xs:element name="Level" type="ns:StoreSubscriptionLevelCodeType">
				<xs:annotation>
					<xs:documentation>
						Store subscription level.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Fee" type="ns:AmountType">
				<xs:annotation>
					<xs:documentation>
						Monthly fee for the Store subscription level.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreThemeArrayType">
		<xs:annotation>
			<xs:documentation>
				Set of Store themes.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Theme" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						A Store theme.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GenericColorSchemeArray" type="ns:StoreColorSchemeArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Set of color schemes. This set is for use with those themes that do
						not explicitly list a color scheme in the theme definition (these 
						themes are also known as advanced themes).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreThemeType">
		<xs:annotation>
			<xs:documentation>
				Store theme.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ThemeID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store theme ID (use GetStoreOptions to get the list of valid theme 
						IDs).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store theme name. Provides a user-friendly name for the theme.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ColorScheme" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Theme color scheme.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StorePreferencesType">
		<xs:annotation>
			<xs:documentation>
				Store Preferences type.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="VacationPreferences" type="ns:StoreVacationPreferencesType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Store vacation hold preferences.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="StoreVacationPreferencesType">
		<xs:annotation>
			<xs:documentation>
				Specifies a set of Store vacation preferences.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="OnVacation" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies whether the Store owner is on vacation.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReturnDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Seller return date from vacation.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HideFixedPriceStoreItems" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Hide Store Inventory format items when the Store owner is on vacation.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageItem" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Add a message when the Store owner is on vacation to all their active items.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageStore" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Add a message to all the Store pages when the Store owner is on vacation.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DisplayMessageStoreCustomText" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Display custom message on the Store pages instead of the default message. Max length 10K.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageStoreCustomText" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The custom message to display for the Store when the user is on vacation. 
						May contain HTML markup.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="TransactionArrayType">
		<xs:annotation>
			<xs:documentation> 

        Contains information about multiple individual transactions. Contains one

        TransactionType object for each transaction.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Transaction" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Contains the data for one transaction. See the schema documentation for

            TransactionType for this object's properties and their definitions.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="TransactionType">
		<xs:annotation>
			<xs:documentation> 

        Contains information about a single transaction. A transaction contains information 

        about the sale one or multiple items from a listing to a single buyer. The eBay

        system creates a transaction when a buyer has made a purchase (fixed-price listings)

        or is the winning bidder (BIN and competitive-bidding listings) A listing can be spawn

        one or more transactions in these cases: multi-item fixed-price listings and Dutch

        listings. A listing can spawn only a single transaction in these cases: single-item

        fixed-price listings and Chinese listings.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:AmountPaid" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            The amount the buyer paid for the item(s) in the transaction.

            If the seller allowed the buyer to change the item total, the buyer 

            is able to change the total until the time that the transaction's 

            status moves to Complete. Determine whether the buyer 

            changed the amount by retrieving the transaction data and comparing

            the AmountPaid value to what the seller expected. For Motors items,

            AmountPaid is the amount paid by the buyer for the deposit.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdjustmentAmount" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Adjustment amount entered by the buyer. A positive amount indicates 

            the amount is an extra charge being paid to the seller by the buyer. 

            A negative value indicates this amount is a credit given to the buyer by the seller.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConvertedAdjustmentAmount" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Converted value of AdjustmentAmount in the currency of the site that returned the response.

            Refresh this value every 24 hours to pick up the current conversion rates.

            Output only.

			     		</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Buyer" type="ns:UserType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Contains the data for the transaction's buyer. See UserType for its

            child elements.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ShippingDetails" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						The shipping-related details for an item or transaction, 
						including flat and calculated shipping costs and shipping 
						insurance costs.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConvertedAmountPaid" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Converted value of AmountPaid in the currency of the site that returned the response.

            Refresh this value every 24 hours to pick up the current conversion rates.

            Output only.

			     		</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConvertedTransactionPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Converted value of TransactionPrice in the currency of the site that returned the

            response. Refresh this value every 24 hours to pick up the current conversion rates.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreatedDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates when the transaction was created. For fixed-price, Stores, and BIN items

            this indicates when the purchase (or BIN) occurred. For competitive-bidding listing

            types this indicates when listing ended, the winning bidder(s) determined, and the

            transaction created.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DepositType" type="ns:DepositTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Deposit type for US eBay Motors items. If item is not a Motors item, then returns an

            empty value for DepositType. See DepositTypeCodeType for specific values.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Item" type="ns:ItemType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Information about the item that spawned the transaction. It
            is a purchase from this item's listing that the transaction represents.
            Output only. To remove a property from an item, specify it in 
            ModifyType as a changed property, but do not give it a value in
            Item.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuantityPurchased" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates the number of items the buyer purchased from the listing identified

            in ItemID.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="ns:TransactionStatusType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Contains the status of the transaction, such as the buyer's online payment and

            whether the checkout process for the transaction has been completed. See

            TransactionStatusType for its child elements.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:TransactionID" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Identifier for the transaction. Returns a value of zero for Chinese auction format

            listings (a valid transaction ID). A transaction ID is only unique to the listing

            that spawned it, so a transaction is only uniquely identified on a global basis by

            a combination of ItemID and TransactionID.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Price of the transaction (before shipping and sales tax) that the buyer needs to pay

            to complete the purchase. For eBay Motors, TransactionPrice is the deposit amount.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VATPercent" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						VAT rate for the item. When the VATPercent is specified, the 
						item's VAT information appears on the item's listing page. In 
						addition, the seller can choose to print an invoice that 
						includes the item's net price, VAT percent, VAT amount, and 
						total price, as required by European law. Since VAT rates vary 
						depending on the item and on the user's country of residence, a 
						seller is responsible for entering the correct VAT rate; it is 
						not calculated by eBay. To specify a VATPercent, a seller must 
						have a VAT-ID registered with eBay and must be listing the item 
						on a site in the European Union or Switzerland. Max precision 3 
						decimal places. Max length 5 characters. Note: The View Item 
						page displays the precision to 2 decimal places with no 
						trailing zeros. However, the full value you send in is stored.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="TransactionStatusType">
		<xs:annotation>
			<xs:documentation> 

        Contains the status of the transaction, such as the buyer's online payment and

        whether the checkout process for the transaction has been completed.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="eBayPaymentStatus" type="ns:PaymentStatusCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates the success or failure of the buyer's online payment for a transaction.

            Only applicable if the buyer chose PayPal as the payment method for the transaction.

            If the payment failed, the value returned indicates the reason for the failure.

            Output only. Please see PaymentStatusCodeType for specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckoutStatus" type="ns:CheckoutStatusCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates the current status of the checkout process for the transaction. 

            See CheckoutStatusCodeType for specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastTimeModified" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates date and time a transaction's status or incomplete state was last updated (in GMT). 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaymentMethodUsed" type="ns:BuyerPaymentMethodCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Payment method the buyer selected for paying the seller for the transaction. See

            BuyerPaymentMethodCodeType for specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompleteStatus" type="ns:CompleteStatusCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates whether the transaction process is complete or incomplete. 

            Please see CompleteStatusCodeType for specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ItemTransactionIDArrayType">
		<xs:annotation>
			<xs:documentation> 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:ItemTransactionID" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ItemTransactionIDType">
		<xs:annotation>
			<xs:documentation> 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:ItemID">
				<xs:annotation>
					<xs:documentation> 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:TransactionID">
				<xs:annotation>
					<xs:documentation> 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="UserType">
		<xs:annotation>
			<xs:documentation>

        Type to contain the data for one eBay user. Depending on the context, the user might be

        the seller or the buyer in a transaction, or the bidder or winning bidder in a listing.

        An object of this type is returned by a number of calls, including the GetUser call.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AboutMePage" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            If true, indicates that the user has set up an About Me page.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EIASToken" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(out) Unique identifier for the user that does not change when the eBay user name 
						is changed. Use when an application needs to associate a new eBay user name 
						with the corresponding eBay user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:Email" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Email address for the user. Only conditionally returned. See anti-spam rules for the

            conditions under which a user's email address can be returned.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackScore" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Contains the aggregate feedback score for a user. A member's feedback

            score is the net positive feedback minus the net negative feedback left for the

            member. Output only. Feedback scores are a quantitative expression of the

            desirability of dealing with that person as a Buyer or a Seller in auction transactions. Each

            auction transaction can result in one feedback entry for a given user

            (the buyer can leave feedback for the seller, and the seller can leave 

            feedback for the buyer.). That one feedback can be positive,

            negative, or neutral. The aggregated feedback counts for a particular user represent

            that user's overall feedback score (referred to as a "feedback rating" on

            the eBay site). This rating is commonly expressed as the eBay Feedback score for the user.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackPrivate" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Indicates whether the user selected to make feedback information private and hidden

            from other users.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackRatingStar" type="ns:FeedbackRatingStarCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Visual indicator of user's feedback score. See FeedbackRatingStarCodeType for

            specific values.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IDVerified" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Indicates whether the user has been verified. Output only. For more information

            about the ID Verify program, see:

            	http://pages.ebay.com/help/policies/identity-idverify.html

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="eBayGoodStanding" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

           If true, indicates that the user is in good standing with eBay

           					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NewUser" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            If true, identifies a new user who has been a registered eBay user for 30 days or

            less. Always false after the user has been registered for more than 30 days. Does not

            indicate an ID change (see UserIdChanged).

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:RegistrationAddress" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Registration address for a user. Returned only if the user is registered

            on the Germany, Austria, or Switzerland eBay site and the user requesting

            the data is also registered on one of those sites. Returned in the place of

            an email address.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RegistrationDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Indicates the date the specified user originally registered with eBay.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:Site" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            eBay site the user is registered with.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="ns:UserStatusCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Indicates the user's registration/user status. See UserStatusCodeType for

            specific values.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:UserID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Unique eBay user ID for the user.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserIDChanged" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            If true, identifies a user whose ID has changed within the last 30 days. Does not

            indicate a new user (see NewUser).

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserIDLastChanged" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Date and time the user's data was last changed (in GMT).

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VATStatus" type="ns:VATStatusCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(out) Indicates whether or not the user is subject to VAT.
						Users who have registered with eBay as VAT-exempt are not
						subject to VAT. See documentation on Value-Added Tax (VAT). Not
						returned for users whose country of residence is outside the
						EU.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyerInfo" type="ns:BuyerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Contains information about the user as a buyer, such as the shipping address. See

            BuyerType for its child elements.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerInfo" type="ns:SellerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            Contains information about the user as a seller, such as whether the seller is

            authorized to list Live Auctions items or opts to have items cross-promoted. See

            SellerType for its child elements.

            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="VATDetailsType">
		<xs:annotation>
			<xs:documentation> 

             Container for eBay's Business User features. A business seller can choose 

             to offer an item exclusively to bidders and buyers that also represent businesses.

             Only applicable when the item is listed in a B2B-enabled category. 

             Currently, the eBay Germany (DE), Austria (AT), and Switzerland (CH) sites support

             B2B business features.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BusinessSeller" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						(in) If true, this indicates that the seller is a business user 
						and intends to use listing features that are offered to 
						business users only. Applicable only to business sellers 
						residing in Germany, Austria, or Switzerland who are listing in 
						a B2B VAT- enabled category on the eBay Germany (DE), Austria 
						(AT), or Switzerland (CH) sites. The seller must have a valid 
						VAT ID registered with eBay. This must be set to true if 
						RestrictedToBusiness is true. It has no effect if 
						RestrictedToBusiness is false.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RestrictedToBusiness" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						If true, this indicates that the seller elects to offer the 
						item exclusively to business users. If false, this indicates 
						that the seller elects to offer the item to all users. 
						Applicable only to business sellers residing in Germany, 
						Austria, or Switzerland who are listing in a B2B VAT-enabled 
						category on the eBay Germany (DE), Austria (AT), or Switzerland 
						(CH) sites. If this argument is true, the seller must have a 
						valid VAT-ID registered with eBay, and BusinessSeller must also 
						be true. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VATPercent" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						VAT rate for the item. When the VATPercent is specified, the 
						item's VAT information appears on the item's listing page. In 
						addition, the seller can choose to print an invoice that 
						includes the item's net price, VAT percent, VAT amount, and 
						total price, as required by European law. Since VAT rates vary 
						depending on the item and on the user's country of residence, a 
						seller is responsible for entering the correct VAT rate; it is 
						not calculated by eBay. To specify a VATPercent, a seller must 
						have a VAT-ID registered with eBay and must be listing the item 
						on a site in the European Union or Switzerland. Max precision 3 
						decimal places. Max length 5 characters. Note: The View Item 
						page displays the precision to 2 decimal places with no 
						trailing zeros. However, the full value you send in is stored.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ValType">
		<xs:sequence>
			<xs:element name="ValueLiteral" type="xs:string">
				<xs:annotation>
					<xs:documentation> 
            The descriptive name of an attribute or characteristic value 
            (e.g., "New" might be a literal value for a Condition attribute).
            In item-listing requests, if you send ValueID with an id of -3 or -6 
            use ValueLiteral to enter the value the user specified. Otherwise, 
            eBay treats the request as if no value was sent at all.
            Optional if ValueID specifies a positive value.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SuggestedValueLiteral" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
            (out) Reserved for future use. Suggested alternative text for ValueLiteral. 
            Multiple SuggestedValueLiteral elements can be returned in a Value node.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ValueID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

	          Constant value that identifies the attribute or characteristic in a 

	          language-independent way. Unique within the characteristics set.

	          In item-listing requests, if the ID is -3 or -6 (Other), use  

	          ValueLiteral to specify the value that the user entered.

	          In item-listing requests and product searches, the possible ID values are:

	                -3 = User entered an arbitrary value (not an "Other" field)

	                -6 = User entered a value in an "Other" field

	                -100 = Value not specified (null)

	                #### (positive integer) = Identifier for a pre-defined value that the user selected (e.g., 1001).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="VendorHostedPictureType">
		<xs:annotation>
			<xs:documentation> 

        Data for images hosted on a location of the seller's choice (other than eBay).

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PictureURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            URL for one item picture that is stored/hosted at a non-eBay site.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SelfHostedURL" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            URL for multiple self hosted item picture that is stored/hosted at a non-eBay site.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PhotoDisplay" type="ns:PhotoDisplayCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Special picture effect seller selects for the display of the an item's

            picture(s). Default is None. See PhotoDisplayCodeType for specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            URL for a picture to be used as the Gallery thumbnail (item must be listed with the fee-based

            option to be in the Gallery or Gallery Featured). If the item is Gallery Featured, a value must

            be supplied for either GalleryURL or PictureURL. In either case:

            (a) If a URL is provided for only PictureURL, it is used as the Gallery thumbnail. 

            (b) If a URL is provided for both GalleryURL and PictureURL, then the picture indicated in GalleryURL 

            is used as the thumbnail. 

            The image used for the Gallery thumbnail (specified in GalleryURL or PictureURL) must be in one of

            the graphics formats JPEG, BMP, TIF, or GIF. 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GalleryType" type="ns:GalleryTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            For purposes of displaying a picture of the image, indicates whether the

            item is featured or appears in the Gallery. See GalleryTypeCodeType for

            specific values.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="XSLFileType">
		<xs:annotation>
			<xs:documentation> 

      Describes an XSL file that would be returned

      from an Item Specifics or Pre-filled Item Information meta-data call

      (such as GetAttributesXSL or GetProductFinderXSL).

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FileName" type="xs:string">
				<xs:annotation>
					<xs:documentation> 

            Indicates the name of the xsl file

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FileVersion" type="xs:string">
				<xs:annotation>
					<xs:documentation> 

            Indicates the version of the xsl file

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FileContent" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Indicates the base64 encoded content of the XSL file

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="PriceRangeFilterType">
		<xs:annotation>
			<xs:documentation> 

        One of the data filters used when searching for items using

        GetSearchResults. Allows filtering based on the current price of items.

        Properties allow for defining a range within prices must fall to be

        returned in the result set, a minimum price for items returned, or a

        maximum price for items returned.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MaxPrice" type="ns:AmountType">
				<xs:annotation>
					<xs:documentation> 

            Specifies the maximum current price an item listing can have to be included in

            the searches result set. Use alone to specify a maximum price or with MinPrice

            to define a range the items' prices must be.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinPrice" type="ns:AmountType">
				<xs:annotation>
					<xs:documentation> 

            Specifies the minimum current price an item listing can have to be included in

            the searches result set. Use alone to specify a minimum price or with MaxPrice

            to define a range the items' prices must be.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="UserIdFilterType">
		<xs:annotation>
			<xs:documentation> 

        One of the data filters used when searching for items using

        GetSearchResults. Allows filtering based on the eBay user IDs of

        sellers. May be used to limit the list of found items to just those

        listed by one or more specified sellers. Or may be used to limit the

        list to those items NOT listed by specified excluded sellers.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ExcludeSellers" type="ns:UserIDType" minOccurs="0" maxOccurs="100">
				<xs:annotation>
					<xs:documentation> 

            Specifies a list of one or more eBay user IDs that represent sellers whose item

            listings should NOT be returned in the search result set. That is, the sellers'

            items are excluded from the search results.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeSellers" type="ns:UserIDType" minOccurs="0" maxOccurs="100">
				<xs:annotation>
					<xs:documentation> 

            Specifies a list of one or more eBay user IDs that represent sellers whose item

            listings are returned in the search result set (and only listings by the

            specified sellers. That is, the sellers' items are included in the search

            results.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SearchLocationFilterType">
		<xs:annotation>
			<xs:documentation> 

        One of the data filters used when searching for items using

        GetSearchResults. Allows filtering based on an item's location (where

        the seller would be shipping the item from) or an item's availability

        (which eBay sites the item can be purchased from).

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CountryCode" type="ns:CountryCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Country the item is either located in or available to (depending on the value

            specified in ItemLocation).

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemLocation" type="ns:ItemLocationCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Specifies whether the filter should be for items located in the country

            specified in Country or available to that country.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:SearchLocation" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Specifies filtering based on site ID.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:Currency" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SearchStoreFilterType">
		<xs:annotation>
			<xs:documentation> 

        One of the data filters used when searching for items using

        GetSearchResults. Allows filtering based on an item's appearing in a

        specific eBay Store.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StoreName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Name of the eBay Store the item must be listed in.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StoreSearch" type="ns:StoreSearchCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 

            Specifies the type of store search used in the filtering: one eBay Store (name

            specified in StoreName) or all eBay stores, and also by listing type. Possible

            values are enumerated in the StoreSearchCodeType code list.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SearchResultItemType">
		<xs:annotation>
			<xs:documentation> 

        Contains the data for one item listing found by a search (such as by

        GetSearchResults).

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Item" type="ns:ItemType">
				<xs:annotation>
					<xs:documentation>
            Contains summary data for the item listing itself, with the properties that define
            the listing. For all item data, use an item-retrieval call, such as GetItem.
            Output only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemSpecific" type="ns:NameValueListArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            A list of attributes and values. In the context of GetSearchResults, 
            the list is limited to attributes that would be included in the 
            summary search results on the Web site, if any. In some categories, 
            no summary attributes are returned in search results (even when the item 
            is listed with Item Specifics.)
            Output only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SearchResultValues" type="ns:SearchResultValuesCodeType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>

            Contains additional information about the item listing returned in Item. This

            information includes whether the item has a still-active Buy It Now option,

            whether the item has an image associated with it, and more. May contain zero,

            one, or multiple SearchResultValuesCodeType values indicating different pieces

            of additional information about the listing. These values are analogous to the

            icons that appear in an item listing's line in a Search page.
            Output only.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SearchResultItemArrayType">
		<xs:annotation>
			<xs:documentation> 
        Container for a list of search result items, such as returned by

        GetSearchResults. Will contain zero, one, or multiple

        SearchResultItemType items, each of which represents one item listing

        that was found by the search.
        Output only.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SearchResultItem" type="ns:SearchResultItemType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Contains the data for one item listing found by a search.
            Output only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="RequestCategoriesType">
		<xs:annotation>
			<xs:documentation> 
		A set of parameters that control the retrieval of categories (not items) 
		that match a search query. In GetSearchResults, at least one child element must 
		be specified in order to retrieve matching categories. If empty or not present, 
		no matching category information is returned. .
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CategoriesOnly" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
          Filter to retrieve matching categories but not matching items. If true, 
          only matching categories are returned (with no item details). If false or 
          not present, matching items and matching categories are both returned. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxCategories" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Maximum quantity of matching subcategories to return at each lower level 
            of the hierarchy. Default is 3.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxSubcategories" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Maximum quantity of matching subcategories to return at each lower level 
            of the hierarchy. Default is 3. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Levels" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Filter to control the deepest matching category level to return. 
            Specify a value greater or equal to 1. Default is 2. (If you specify 0, 
            no category data is returned. If you specify a negative number, 
            the results are unpredictable).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CharacteristicSetIDsType">
		<xs:annotation>
			<xs:documentation> 
      (in) A list of one or more characteristic set IDs. In GetProductSearchResults, 
      these IDs indicate which characteristic sets to search in. If not specified, 
      the search is conducted across all characteristic sets. 
      Only applicable when QueryKeywords is specified.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
         Numeric identifier for a characteristic set. For GetProductSearchResults, 
         the characteristic set must be mapped to a catalog-enabled category.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="MemberMessageType">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation>
					Container for individual message information.
				</xs:documentation>
			</xs:annotation>
			<xs:element name="MessageType" type="ns:MessageTypeCodeType">
				<xs:annotation>
					<xs:documentation>
						The type of message being retrieved.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuestionType" type="ns:QuestionTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The type of question that was asked.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EmailCopyToSender" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies whether or not to email a copy of the
						message to the sender.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HideSendersEmailAddress" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies whether or not to hide sender's email address 
						from the recipient. 						
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DisplayToPublic" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies if the question should be displayed to the public. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SenderID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The eBay user ID of the person who asked the question or sent 
						the message. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RecipientID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
					Recipient's eBay user ID. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Subject" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Subject of this email message.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Body" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Message content. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						An ID that uniquely identifies a message for a given user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParentMessageID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						ID number of the question this message is responding to. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="MemberMessageExchangeType">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation>
				Container for message metadata.
			</xs:documentation>
			</xs:annotation>
			<xs:element ref="ns:Item" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The item about which the question was asked.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Question" type="ns:MemberMessageType">
				<xs:annotation>
					<xs:documentation>
						Contains all the information about the question being asked. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Response" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						An answer to the question. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageStatus" type="ns:MessageStatusTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The status of the message.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreationDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Date the message was created. Used to filter response.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastModifiedDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Date the message was last modified.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="MemberMessageExchangeArrayType">
		<xs:annotation>
			<xs:documentation>
				Container for messages.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MemberMessageExchange" type="ns:MemberMessageExchangeType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Information about individual messages.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="DisputeArrayType">
		<xs:annotation>
			<xs:documentation> 
				Represents a list of disputes. Can hold zero or more Dispute
				types, each of which describes a dispute.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Dispute" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						The information that describes a dispute, including
						the buyer's name, the transaction ID, the dispute state
						and status, and any messages posted to the dispute.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:simpleType name="DisputeIDType">
		<xs:annotation>
			<xs:documentation>
				The unique identifier of a dispute, returned by the
				eBay site when the dispute is created.			
    	</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
<xs:complexType name="DisputeFilterCountType">
		<xs:annotation>
			<xs:documentation>
				The number of disputes that match a given filter.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DisputeFilterType" type="ns:DisputeFilterTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A filter to be used to reduce the number of
						disputes returned.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TotalAvailable" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The number of disputes that match the filter.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="DisputeType">
		<xs:annotation>
			<xs:documentation>
				Contains all information describing a dispute.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:DisputeID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The unique identifier of a dispute. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:DisputeRecordType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The type of dispute, either UnpaidItem or
						ItemNotReceived.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:DisputeState" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The internal state of the dispute. The value determines
						which values of DisputeActivity are valid.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:DisputeStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The status of the dispute, which provides additional
						information about the dispute state.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OtherPartyRole" type="ns:TradingRoleCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The role of the person involved in the dispute who is 
						not taking action or requesting information. That role is
						either Buyer or Seller.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OtherPartyName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
          				The user name of the person involved in the dispute who
						is not taking action or requesting information. That person
						is either the buyer or the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserRole" type="ns:TradingRoleCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					  The role of the person who is taking action on or
					  requesting information about the dispute, either Buyer
					  or Seller.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyerUserID" type="ns:UserIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
                     The eBay user ID of the buyer involved in the dispute.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerUserID" type="ns:UserIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
                     The eBay user ID of the seller involved in the dispute.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:TransactionID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The unique identifier of the transaction under dispute.
						The transaction is created when the winning bidder commits to
						purchasing the item but before the bidder pays.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:Item" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Information about the item that spawned the transaction. 
						The transaction represents a purchase from this item's listing.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:DisputeReason" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The top-level reason for the dispute, either BuyerHasNotPaid
						or TransactionMutuallyCanceled. The value of DisputeReason
						determines which values of DisputeExplanation are valid.
						See the Developer Guide for details.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:DisputeExplanation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The detailed explanation for the dispute. Valid values
						depend on the value of DisputeReason. See the Developer Guide
						for details.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:DisputeCreditEligibility" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether the dispute is currently eligible for fee credit.
						The value is usually Ineligible until 7 days after the 
						dispute was created, unless a fee exception applies.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:DisputeCreatedTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date and time the dispute was created, in GMT.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:DisputeModifiedTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date and time the dispute was modified, in GMT.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:DisputeResolution" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						The action resulting from the dispute resolution. The
						action might include a fee credit to the seller, a strike
						to the buyer, a reversal, or an appeal.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:DisputeMessage" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						A response or message posted to a dispute, either by
						an application or by a user on the eBay site.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="DisputeMessageType">
		<xs:annotation>
			<xs:documentation>
				Contains a message posted to a dispute. The message can be posted
				by the buyer, the seller, or an eBay representative.			
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MessageID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						(out) An ID that uniquely identifies a message for a given user. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageSource" type="ns:DisputeMessageSourceCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The party who posted the message: the buyer, the seller,
						or an eBay representative.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageCreationTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date and time the message was created, in GMT.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageText" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The text of the message.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="DisputeResolutionType">
		<xs:annotation>
			<xs:documentation>
				Contains all information about a dispute resolution. A dispute
				can have a resolution even if the seller does not receive payment.
				The resolution can have various results, including a fee credit to
				the seller or a strike to the buyer.			
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:DisputeResolutionRecordType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The action resulting from the resolution, affecting either
						the buyer or the seller.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:DisputeResolutionReason" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The reason for the resolution. The DisputeResolutionReason
						results in the action described by the DisputeResolutionRecordType.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResolutionTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date and time the dispute was resolved, in GMT.					
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="InternationalShippingServiceOptionsType">
		<xs:annotation>
			<xs:documentation> 
        Shipping costs and options related to an international
        shipping service. When used as input, if one is provided,
        at least one domestic ShippingService must be provided.
        This type does not exist before compatibility level 383.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:ShippingService" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						(in/out) An international shipping service offered
						for shipping the item (for example, UPS Ground).
						For flat and calculated shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						(in/out) The meaning of this element depends on the call and on
						whether flat or calculated shipping has been selected. See the 
						document "Managing Shipping" and specific call documentation
						for differences. (For example, it could be the cost to
						ship a single item, the cost to ship all items, or the cost to
						ship just the first of many items, with
						ShippingServiceAdditionalCost accounting for the rest.) For
						flat and calculated shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceAdditionalCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						(in/out) Cost of shipping each additional item beyond the first
						item. Should be zero for single-item listings. Default value is
						0.00. For flat shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServicePriority" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(in/out) Seller-preferred presentation order relative to other
						service options. Valid values are: 1, 2 and 3 (first, second
						and third choices). For flat and calculated shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShipToLocation" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
						An international location or region to which the item may be
						shipped via this particular shipping service. Associated with
						the shipping service by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="NotificationEnableArrayType">
		<xs:annotation>
			<xs:documentation> 
			Contains a list of NotificationEnable entries. Each entry specifies
			one notification and whether it is enabled.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:NotificationEnable" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
					   Specifies one notification event and whether it is
					   enabled or disabled.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="NotificationEnableType">
		<xs:annotation>
			<xs:documentation>
				Specifies a notification event and whether 
				notification is enabled or disabled.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EventType" type="ns:NotificationEventTypeCodeType">
				<xs:annotation>
					<xs:documentation>
						The name of the notification event.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EventEnable" type="ns:EnableCodeType">
				<xs:annotation>
					<xs:documentation>
						Whether the event is enabled or disabled.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ProximitySearchDetailsType">
		<xs:annotation>
			<xs:documentation>
				Contains information for use in proximity search.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="IncludeInProximitySearch" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies that the item should be included in proximity searches (searches
						for items within a certain distance of a particular postal code).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PostalCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The postal code where the item is located.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="PromotionRuleType">
		<xs:annotation>
			<xs:documentation>
			  Defines a rule that promotes items or a store category when
			  a buyer views a specific item or store category.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PromotedItem" type="ns:PromotedItemType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
					The unique item ID of the cross-promoted item. Use for an
					item-to-item rule.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromotedStoreCategoryID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The ID of the store category being promoted. Use for an
					item-to-store-category or store-category-to-store-category
					rule.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReferringItemID" type="ns:ItemIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The unique ID of the item the buyer is viewing or purchasing.
					Use for an item-to-item or item-to-store-category rule. 
					Always use ReferringItemID or ReferringStoreCategoryID, but
					not both.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReferringStoreCategoryID" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The ID of the store category the user is browsing. Use for a
					store-category-to-store-category rule.
					Always use ReferringStoreCategoryID or ReferringItemID, but
					not both.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromotionScheme" type="ns:PromotionSchemeCodeType">
				<xs:annotation>
					<xs:documentation> 
					The cross-promotion rule scheme you are defining (item-to-item,
					item-to-store-category, or store-category-to-store-category).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromotionMethod" type="ns:PromotionMethodCodeType">
				<xs:annotation>
					<xs:documentation> 
					The type of cross promotion, CrossSell or UpSell.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="PromotionRuleArrayType">
		<xs:annotation>
			<xs:documentation> 
			Contains a list of cross-promotion rules. Each PromotionRuleType
			defines one rule.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:PromotionRule" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
					  Defines one cross-promotion rule.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ShipmentType">
		<xs:annotation>
			<xs:documentation> 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:Currency" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EstimatedDeliveryDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InsuredValue" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PackageDepth" type="ns:MeasureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Depth dimension of the package needed to ship the item after it is sold. Input
            and output; for calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PackageLength" type="ns:MeasureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Length dimension of the package needed to ship the item after it is sold. Input
            and output; for calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PackageWidth" type="ns:MeasureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Width dimension of the package needed to ship the item after it is sold. Input
            and output; for calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PayPalShipmentID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PostageTotal" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrintedTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShipFromAddress" type="ns:AddressType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:ShippingAddress" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingCarrierUsed" type="ns:ShippingCarrierCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingFeature" type="ns:ShippingFeatureCodeType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingPackage" type="ns:ShippingPackageCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            The size of the package used to ship the item(s). See ShippingPackageCodeType
            for its possible values. Input.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceUsed" type="ns:ShippingPackageCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            The size of the package used to ship the item(s). See ShippingPackageCodeType
            for its possible values. Input.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShipmentTrackingNumber" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WeightMajor" type="ns:MeasureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Number of whole units for shipping weight unit of measure. For example, If
            WeightUnit is Pounds, WeightMajor is the number of whole pounds.  Input and
            output; for calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WeightMinor" type="ns:MeasureType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Fractional number of units for shipping weight unit of measure. If WeightUnit
            is Pounds, then WeightMinor is the number of ounces in addition to whole pounds
            in WeightMajor. Input and output; for calculated shipping only.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
			<!-- TBD: TRANSACTION/ID PAIRS -->
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ListingTipArrayType">
		<xs:annotation>
			<xs:documentation> 
      (out) Contains a list of tips on improving a listing's details, if any. 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ListingTip" type="ns:ListingTipType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
					An individual tip on improving a listing's details. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ListingTipType">
		<xs:annotation>
			<xs:documentation>
      (out) A tip on improving a listing's details. Tips are returned from the Listing Analyzer engine.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ListingTipID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Identifier for the tip. Primarily for internal use. This value may change over time. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Priority" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            The rank of the tip. All tips are ranked by importance. Ranking varies for each site. 
            The rank is always greater than 0.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Message" type="ns:ListingTipMessageType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            The tip's message content.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Field" type="ns:ListingTipFieldType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            The item field that is associated with the tip.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ListingTipMessageType">
		<xs:annotation>
			<xs:documentation>
      (out) Contains the message portion of a listing tip that is returned by the Listing Analyzer engine.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ListingTipMessageID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
              Identifier for the tip message. Primarily for internal use. This value may change over time. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShortMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
              Brief version of the tip message. Max length 125.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LongMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
               Detailed version of the tip message. Max length 125.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HelpURLPath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Path part of a URL for a "Learn More" link that points to a relevant eBay Web site online help page. 
            The path is relative to http://pages.ebay.XX, where XX is the 2-letter site code 
            (e.g., http://pages.ebay.de for the eBay Germany site). Applications should append the 
            URL to the appropriate path for the user's site. Max length 125.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ListingTipFieldType">
		<xs:annotation>
			<xs:documentation>
      (out) Identifies the item field that the tip relates to.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ListingTipFieldID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Identifier associated with the item field. Primarily for internal use. This value may change over time. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FieldTip" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Related text that appears near a field or at the top of the section within which 
            the field appears in the selling flow. Max length 125.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrentFieldText" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            A label used to preface the current value of a field. For example, 
            "Current value" would be the CurrentValueText in "Current value: 25". Max length 50. 
            If no label exists, this element is not returned.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrentFieldValue" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
             Current value of the field (in the listing or in the candidate item) or meta-data about the value. 
             For example, if the tip is recommending a longer item title, the CurrentFieldValue might specify 
             the current length of the title. If no current value is available, this information is not returned.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ListingAnalyzerRecommendationsType">
		<xs:annotation>
			<xs:documentation> 
	         (out) Contains results returned from the Listing Analyzer recommendation engine.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ListingTipArray" type="ns:ListingTipArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            (out) A collection of tips returned from the Listing Analyzer recommendation engine.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SIFFTASRecommendationsType">
		<xs:annotation>
			<xs:documentation> 
	         Reserved for future use..
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AttributeSetArray" type="ns:AttributeSetArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            Reserved for future use. A list of attribute sets for which recommendations were returned.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="PricingRecommendationsType">
		<xs:annotation>
			<xs:documentation> 
				Pricing data returned from the Product Pricing engine.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProductInfo" type="ns:ProductInfoType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            A product's pricing data (if any) and brief information about the product. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ProductInfoType">
		<xs:sequence>
			<xs:element name="AverageStartPrice" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
            The average start price (minimum bid), if any, of completed auction items that were listed 
            with Pre-filled Item Information from this product.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AverageSoldPrice" type="xs:string" minOccurs="0">
				<xs:annotation>
						<xs:documentation>
         The average sold price (winning bid, Buy It Now price, or fixed price), if any, of 
         completed items that were listed with Pre-filled Item Information from this product. 
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			<xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
         Title associated with the product. This value can be used as the basis for a 
         suggested listing title. If the title is longer than 55 characters, your application 
         should make sure the suggested title has a max length of 55 characters so that 
         it will be valid for the AddItem family of calls. Max length 1024 characters.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="productInfoID" type="xs:string">
			<xs:annotation>
				<xs:documentation>
         Unique identifier for the product. See the Developer's Guide for information about 
         eBay product IDs. If the primary and secondary category are both catalog-enabled, this 
         ID corresponds to the primary category. Max length 4000.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="Dispute" type="ns:DisputeType">
		<xs:annotation>
			<xs:documentation>
				Describes one dispute, including information about the buyer
				and seller, the dispute state and status, all messages in the
				dispute, and the dispute resolution.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeArray" type="ns:DisputeArrayType">
		<xs:annotation>
			<xs:documentation>
	    	Contains a list of disputes. Can have zero or more Dispute objects,
				each of which conveys the data for one dispute.
	    </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeCreditEligibility" type="ns:DisputeCreditEligibilityCodeType">
		<xs:annotation>
			<xs:documentation>
				Whether the dispute is currently eligible for credit. The value does
				not indicate whether the dispute party will actually receive credit.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeID" type="ns:DisputeIDType">
		<xs:annotation>
			<xs:documentation> 
				The unique identifier of a dispute, created when the
				seller filed a dispute.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeExplanation" type="ns:DisputeExplanationCodeType">
		<xs:annotation>
			<xs:documentation>
				Information that supplements the reason for the dispute.
				The value of DisputeReason determines the valid values of
				DisputeExplanation.			
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeMessage" type="ns:DisputeMessageType">
		<xs:annotation>
			<xs:documentation>
				All information describing a message passed to the dispute.			
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeResolution" type="ns:DisputeResolutionType">
		<xs:annotation>
			<xs:documentation>
				All information describing a dispute resolution.			
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeReason" type="ns:DisputeReasonCodeType">
		<xs:annotation>
			<xs:documentation>
				The top-level reason for the dispute. The value determines
				the valid values of DisputeExplanation. 			
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeState" type="ns:DisputeStateCodeType">
		<xs:annotation>
			<xs:documentation>
				The current state of the dispute. The value of DisputeState
				determines the valid values of DisputeActivity.			
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeStatus" type="ns:DisputeStatusCodeType">
		<xs:annotation>
			<xs:documentation>
				Additional information that supplements DisputeState, including
				whether the dispute is waiting for a response from the buyer or
				seller or whether it is closed.			
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeRecordType" type="ns:DisputeRecordTypeCodeType">
		<xs:annotation>
			<xs:documentation>
				The type of dispute. The only allowed value is UnpaidItem.			
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeCreatedTime" type="xs:dateTime">
		<xs:annotation>
			<xs:documentation>
				The date and time the dispute was created, in GMT.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeModifiedTime" type="xs:dateTime">
		<xs:annotation>
			<xs:documentation>
				The date and time the dispute was last modified, in GMT.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeResolutionReason" type="ns:DisputeResolutionReasonCodeType">
		<xs:annotation>
			<xs:documentation>
				The reason the resolution was reached.			
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisputeResolutionRecordType" type="ns:DisputeResolutionRecordTypeCodeType">
		<xs:annotation>
			<xs:documentation>
				The action resulting from the resolution, affecting either
				the buyer or the seller.			
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="NotificationEnable" type="ns:NotificationEnableType">
		<xs:annotation>
			<xs:documentation>
			   Specifies a notification event and whether notification is enabled or disabled.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UserDeliveryPreferenceArray" type="ns:NotificationEnableArrayType">
		<xs:annotation>
			<xs:documentation>
			  Defines an array of notification events, specifying an event
			  name and whether notification is enabled or disabled.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PromotionRule" type="ns:PromotionRuleType">
		<xs:annotation>
			<xs:documentation>
			  Contains a rule describing one item-to-item,
			  item-to-store-category, or store-category-to-store-category
			  promotion.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PromotionRuleArray" type="ns:PromotionRuleArrayType">
		<xs:annotation>
			<xs:documentation>
			  Contains an array of cross-promotion rules.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AccountCode" type="xs:string"/>
	<xs:element name="AccountEntry" type="ns:AccountEntryType"/>
	<xs:element name="AccountEntries" type="ns:AccountEntriesType"/>
	<xs:element name="AccountSummary" type="ns:AccountSummaryType"/>
	<xs:element name="BiddingItemArray" type="ns:ItemArrayType">
		<xs:annotation>
			<xs:documentation>
	     Contains a list of items the user has bid on but not
	     yet won or lost.
		</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AmountPaid" type="ns:AmountType"/>
	<xs:element name="AmountPastDue" type="ns:AmountType"/>
	<xs:element name="AttributeID" type="xs:int">
		<xs:annotation>
			<xs:documentation>

      Constant value that identifies the characteristic in a language-independent way.

      Unique within a characteristics set.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AttributeData" type="xs:string">
		<xs:annotation>
			<xs:documentation>

      An XML string containing a list of all the attributes that are applicable

      for a requested category, along with related meta-data.

      The meta-data specifies all the possible values of each attribute, the

      logic for presenting attributes to a user, and rules for validating the

      user's selections. This data is returned as "raw" XML. Individual

      elements are not described in the base components schema. See the

      description of GetAttributesCS in the reference guide for information about

      each element in the string.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AttributeSetID" type="xs:int">
		<xs:annotation>
			<xs:documentation>

      Constant value that identifies the attribute set in a language-independent way.

      Unique across all eBay sites. Corresponds to a characteristics set ID. 

      Call GetCategory2CS to determine valid characteristics set IDs.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AttributeSetVersion" type="xs:string">
		<xs:annotation>
			<xs:documentation>

      Version of the attribute set being specified (in requests) or that is currently

      on the site. This value changes each time changes are made to the meta-data

      for a characteristics set. The current version value is not necessarily 

      greater than the previous value.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AttributeSystemVersion" type="xs:string">
		<xs:annotation>
			<xs:documentation>

      Version of the characteristics set mappings for the site.

      This value changes each time changes are made to the mappings.

      The current version value is not necessarily greater than the previous

      value. Therefore, when comparing versions, only compare whether the

      value has changed.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Balance" type="ns:AmountType"/>
	<xs:element name="BidRetractionFeedbackPeriodArray" type="ns:FeedbackPeriodArrayType">
		<xs:annotation>
			<xs:documentation> 

        Contains feedback period statistics summarizing bid retractions. See FeedbackPeriodArrayType

        for its child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Buyer" type="ns:UserType">
		<xs:annotation>
			<xs:documentation> 

        Data for the item's buyer.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Category" type="ns:CategoryType">
		<xs:annotation>
			<xs:documentation> 

        Contains the data for one category. See CategoryType for

        specific child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CategoryArray" type="ns:CategoryArrayType"/>
	<xs:element name="CategoryFinanceOfferArray" type="ns:CategoryFinanceOfferArrayType"/>
	<xs:element name="CategoryID" type="xs:string"/>
	<xs:element name="CharacteristicID" type="xs:string">
		<xs:annotation>
			<xs:documentation> 

        Unique identifier for a characteristic. Unique within a characteristics set.

        Applicable when working with Item Specifics (Attributes) or 

        Pre-filled Item Information (Catalogs).

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CheckoutEnabled" type="xs:boolean">
		<xs:annotation>
			<xs:documentation> 

        If true, indicates the seller enabled the option for the buyer

        to go through the checkout process for payment and shipping of

        the specified item.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ColorScheme" type="ns:StoreColorSchemeType">
		<xs:annotation>
			<xs:documentation>
				Store color scheme.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CurrentBalance" type="ns:AmountType"/>
	<xs:element name="CustomCategory" type="ns:StoreCustomCategoryType"/>
	<xs:element name="CustomPage" type="ns:StoreCustomPageType"/>
	<xs:element name="CustomPageArray" type="ns:StoreCustomPageArrayType"/>
	<xs:element name="ExternalProductID" type="ns:ExternalProductIDType"/>
	<xs:element name="FeedbackDetail" type="ns:FeedbackDetailType">
		<xs:annotation>
			<xs:documentation> 

        Contains the data for one feedback detail entry. See FeedbackDetailType for its child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FeedbackDetailArray" type="ns:FeedbackDetailArrayType">
		<xs:annotation>
			<xs:documentation> 

        Contains a collection of one or multiple feedback detail entries. See FeedbackDetailArrayArrayType

        for its child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FeedbackPeriod" type="ns:FeedbackPeriodType">
		<xs:annotation>
			<xs:documentation> 

        Contains the data for one feedback period statistic. See FeedbackPeriodType for its child

        elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FeedbackSummary" type="ns:FeedbackSummaryType">
		<xs:annotation>
			<xs:documentation> 

        Contains the data for the feedback summary entry. See FeedbackSummaryType for its child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="BestOfferArray" type="ns:BestOfferArrayType">
		<xs:annotation>
			<xs:documentation> 
				A collection of best offers for an item.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="BestOffer" type="ns:BestOfferType">
		<xs:annotation>
			<xs:documentation> 
				Details for a single best offer for an item.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Fees" type="ns:FeesType"/>
	<xs:element name="FileName" type="xs:string"/>
	<xs:element name="FileVersion" type="xs:string"/>
	<xs:element name="FinanceOfferArray" type="ns:FinanceOfferArrayType"/>
	<xs:element name="HighBidder" type="ns:UserType">
		<xs:annotation>
			<xs:documentation> 

        Contains the data for the current high bidder for an item. GetItem

        returns a high bidder for auctions that have ended and have a winning bidder.

        For fixed-price listings, in-progress auctions, or auction items that received

        no bids, GetItem returns a HighBidder node with empty values.

        Output only.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InsuranceFee" type="ns:AmountType">
		<xs:annotation>
			<xs:documentation> 
				(in/out) Cost of shipping insurance set by the seller. If the
				buyer bought more than one of this item, this is the insurance
				for just a single item. Exception: for GetItemShipping, this is
				proportional to QuantitySold. Default
				is 0.00. Value should be greater than 0.00 if InsuranceOption
				is Optional or Required. For flat shipping only.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InsuranceOption" type="ns:InsuranceOptionCodeType">
		<xs:annotation>
			<xs:documentation> 
				(in/out) Whether the seller offers shipping insurance and, if
				so, whether the insurance is optional or required. Flat and
				calculated shipping.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Item" type="ns:ItemType">
		<xs:annotation>
			<xs:documentation> 

        Contains the data for one item. See ItemType for its child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ItemArray" type="ns:ItemArrayType"/>
	<xs:element name="ItemID" type="ns:ItemIDType">
		<xs:annotation>
			<xs:documentation> 

        Item ID that uniquely identifies one listing.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ItemTypeFilter" type="ns:ItemTypeFilterCodeType"/>
	<xs:element name="ListingDuration" type="ns:ListingDurationCodeType"/>
	<xs:element name="LostItemArray" type="ns:ItemArrayType">
		<xs:annotation>
			<xs:documentation>
	     Contains a list of the items the user has bid on and lost.
	    </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Logo" type="ns:StoreLogoType"/>
	<xs:element name="VacationPreferences" type="ns:StoreVacationPreferencesType"/>
	<xs:element name="LogoArray" type="ns:StoreLogoArrayType"/>
	<xs:element name="MappedCategoryArray" type="ns:CategoryArrayType"/>
	<xs:element name="NegativeFeedbackPeriodArray" type="ns:FeedbackPeriodArrayType">
		<xs:annotation>
			<xs:documentation> 

        Contains feedback period statistics summarizing negative feedback. See FeedbackPeriodArrayType

        for its child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="NeutralFeedbackPeriodArray" type="ns:FeedbackPeriodArrayType">
		<xs:annotation>
			<xs:documentation> 

        Contains feedback period statistics summarizing neutral feedback. See FeedbackPeriodArrayType

        for its child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UnmappedCategoryArray" type="ns:CategoryArrayType"/>
	<xs:element name="Offer" type="ns:OfferType"/>
	<xs:element name="Order" type="ns:OrderType"/>
	<xs:element name="OrderArray" type="ns:OrderArrayType"/>
	<xs:element name="OrderID" type="ns:OrderIDType"/>
	<xs:element name="OrderIDArray" type="ns:OrderIDArrayType"/>
	<xs:element name="Pagination" type="ns:PaginationType">
		<xs:annotation>
			<xs:documentation>

        Contains the data for controlling the pagination of data returned by call. 

        See PaginationType for its child elements.

        Input only.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PaginationResult" type="ns:PaginationResultType">
		<xs:annotation>
			<xs:documentation>

        Shows the pagination of data returned by a call. See

        PaginationResultType for its child elements.

        Output only.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PaymentMeans" type="ns:PaymentMeansType">
		<xs:annotation>
			<xs:documentation> 

		         Payment method the seller uses to pay eBay.

				</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PaymentMethods" type="ns:BuyerPaymentMethodCodeType">
		<xs:annotation>
			<xs:documentation> 

        Identifies the payment method used by the buyer to pay the seller. See

        BuyerPaymentMethodCodeType for possible values.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PaymentType" type="ns:PaymentType">
		<xs:annotation>
			<xs:documentation>
	      Specifies the method the seller uses to pay fees to eBay.
        </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PositiveFeedbackPeriodArray" type="ns:FeedbackPeriodArrayType">
		<xs:annotation>
			<xs:documentation> 

        Contains feedback period statistics summarizing positive feedback. See FeedbackPeriodArrayType

        for its child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Product" type="ns:ProductType"/>
	<xs:element name="ProductFinderData" type="xs:string"/>
	<xs:element name="ProductFinderID" type="xs:int">
		<xs:annotation>
			<xs:documentation>

      Identifier for a product finder associated with the characteristics set, if

      any. Use a product finder when you want to specify multiple attributes in a

      product search query. Call GetCategory2CS to determine which categories

      support product finder searches.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProductID" type="xs:string">
		<xs:annotation>
			<xs:documentation> 
  	    Unique identifier for a catalog product. A product is a prototype description 
  	    of a well-known type of item, such as a popular book.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProductSellingPagesData" type="xs:string"/>
	<xs:element name="Region" type="xs:string"/>
	<xs:element name="RegionID" type="xs:string"/>
	<xs:element name="RegistrationAddress" type="ns:AddressType">
		<xs:annotation>
			<xs:documentation> 

        Registration address for a user. Returned only if the user is registered

        on the Germany, Austria, or Switzerland eBay site and the user requesting

        the data is also registered on one of those sites. Returned in the place of

        an email address.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ReviseStatus" type="ns:ReviseStatusType">
		<xs:annotation>
			<xs:documentation> 

        Indicates whether an item has been revised since the listing became

        active and, if so, which among a subset of properties have been changed

        by the revision.

        Output only.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Seller" type="ns:UserType">
		<xs:annotation>
			<xs:documentation> 

             Indicates that the specified user is the listing's seller. 

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SellerLevel" type="ns:SellerLevelCodeType">
		<xs:annotation>
			<xs:documentation> 

             Indicates the user's eBay PowerSeller tier. 

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SellingStatus" type="ns:SellingStatusType">
		<xs:annotation>
			<xs:documentation>

              Various details about the current status of the listing, 

              such as the current number of bids and the current high bidder. 

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ShippingPriority" type="xs:int">
		<xs:annotation>
			<xs:documentation> 

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ShippingService" type="ns:ShippingServiceCodeType">
		<xs:annotation>
			<xs:documentation> 
				(in/out) A domestic shipping service offered
				for shipping the item (for example, UPS Ground). 
				For flat and calculated shipping.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Site" type="ns:SiteCodeType">
		<xs:annotation>
			<xs:documentation>

             The eBay site associated with the item or user (depending on the context). 

             The site associated with the item or user affects the business logic 

             and validation rules that are applied to the request, which in 

             turn affect the values that are returned in the response, as 

             well as values that appear on the eBay Web site. 

             For example, the value specified for Site can affect the list of 

             available categories, international business seller requirements, 

             the values of converted (localized) prices, the item-related time stamps 

             that are displayed on the eBay Web site, the visibility of the item 

             in some types of searches (e.g., GetCategoryListings), and other information. 

             In some cases, the rules are determined by a combination of Site, the user's 

             registration address, and other information.

          </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Store" type="ns:StoreType">
		<xs:annotation>
			<xs:documentation>
	      The configuration of an eBay Store.
	    </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StorePreferences" type="ns:StorePreferencesType"/>
	<xs:element name="StoreCategoryID" type="xs:int">
		<xs:annotation>
			<xs:documentation> 

             Applicable for eBay Store sellers only. Numeric ID for a 

             custom category that the seller created in their eBay Store.

             eBay Stores sellers can create up to 19 custom categories 

             for their stores. (One additional Store category cannot be customized 

             and retains the value of "Other"). Valid values are 0 to 20:

                 0=Not an eBay Store item

                 1=Other

                 2=Category 1

                 3=Category 2

                 ...

                 19=Category 18

                 20=Category 19

             If you specify an invalid value (e.g., 21), the system resets the 

             value to 1 (Other).

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StoreCategory2ID" type="xs:int">
		<xs:annotation>
			<xs:documentation> 
	        Identifies a second custom category for listing an item in an eBay store.
			Store owners can create up to 19 custom categories for their stores on
			the eBay site. If specified, must be an integer between 0 and 20. The values
			are 0 = None; 1 = Other;  2 = Category1; 3 = Category2; and up to 20 = Category19.
			One category cannot be set and always has the value Other.
             If you specify an invalid value (for example, 21), the system uses the value of StoreCategoryID. 
             If you specify StoreCategory2ID, but StoreCategoryID is blank (or Other),  the system sets the value 
             of StoreCategory2ID to 0 (None). StoreCategoryID must be set to something meaningful and 
             different from StoreCategory2ID. Can be used by eBay Stores owners only.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StoreOwner" type="xs:boolean">
		<xs:annotation>
			<xs:documentation> 

             If true, the user has an eBay Store.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StoreURL" type="xs:anyURI">
		<xs:annotation>
			<xs:documentation> 

             URL pointing to the seller's eBay Store page. 

             This URL follows the format below, where "sellerstorename" is 

             the seller's eBay Stores ID (that uniquely identifies the eBay Store).

             http://www.stores.ebay.com/sellerstorename

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ShippingAddress" type="ns:AddressType">
		<xs:annotation>
			<xs:documentation> 

        Contains the address of the buyer in the transaction, to which the seller

        would ship the item(s).

        See AddressType for its child elements.

        Output only.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SearchLocation" type="ns:SearchLocationType"/>
	<xs:element name="SellerPaymentAddress" type="ns:AddressType">
		<xs:annotation>
			<xs:documentation> 

        Contains the address for a seller used for eBay payment purposes.

        See AddressType for its child elements.

        Output only.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ShippingRegions" type="ns:ShippingRegionCodeType">
		<xs:annotation>
			<xs:documentation> 

        Indicates the global regions to which the seller is willing to ship the item(s).

        Only applicable if the seller specifies SitePlusRegions for the shipping option

        (ShippingOptionCodeType). See ShippingRegionCodeType for specific shipping regions

        values.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ShippingDetails" type="ns:ShippingDetailsType">
		<xs:annotation>
			<xs:documentation> 
        The shipping-related details for an item or transaction, 
        including flat and calculated shipping costs and shipping 
        insurance costs.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ShippingServiceOptions" type="ns:ShippingServiceOptionsType">
		<xs:annotation>
			<xs:documentation> 
				Shipping costs and options related to a domestic shipping service.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InternationalShippingServiceOption" type="ns:InternationalShippingServiceOptionsType">
		<xs:annotation>
			<xs:documentation> 
				(in/out) Shipping costs and options related to an international
				shipping service.
				When used as input, if one is provided,
        at least one domestic ShippingService must be provided.
        This element is ignored if compatibility level is less than 383.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ShippingTerm" type="ns:ShippingTermsCodeType">
		<xs:annotation>
			<xs:documentation> 

        Indicates who pays the shipping costs for the item(s), the buyer or the seller.

        See ShippingTermsCodeType for specific values.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SuggestedCategory" type="ns:SuggestedCategoryType">
		<xs:annotation>
			<xs:documentation> 
			 Describes a category that contains listings that have specified
			 keywords in their titles or descriptions.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SuggestedCategoryArray" type="ns:SuggestedCategoryArrayType">
		<xs:annotation>
			<xs:documentation> 
			 Contains the records of categories that have listings that match
			 the keyword search.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Subscription" type="ns:StoreSubscriptionType"/>
	<xs:element name="Theme" type="ns:StoreThemeType"/>
	<xs:element name="Transaction" type="ns:TransactionType">
		<xs:annotation>
			<xs:documentation> 

        Contains the data for one transaction. See TransactionType for its child

        elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TotalFeedbackPeriodArray" type="ns:FeedbackPeriodArrayType">
		<xs:annotation>
			<xs:documentation> 

        Contains feedback period statistics totals. See FeedbackPeriodArrayType

        for its child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TransactionArray" type="ns:TransactionArrayType">
		<xs:annotation>
			<xs:documentation> 

        Contains a collection of one or multiple transactions. See TransactionArrayType

        for its child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TransactionID" type="xs:string">
		<xs:annotation>
			<xs:documentation> 

        Contains the identifier for one transaction for a listing.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ItemTransactionIDArray" type="ns:ItemTransactionIDArrayType">
		<xs:annotation>
			<xs:documentation> 
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ItemTransactionID" type="ns:ItemTransactionIDType">
		<xs:annotation>
			<xs:documentation> 
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UserID" type="ns:UserIDType">
		<xs:annotation>
			<xs:documentation> 

        Contains the eBay ID for one user. Maximum length 127.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UseCase" type="ns:ProductUseCaseCodeType">
		<xs:annotation>
			<xs:documentation>

      Specifies the context in which the product selling page is being called,

      which will imply certain validation rules. Use this code list to make sure

      you retrieve the appropriate version of product information and characteristic

      meta-data when you are listing an item with Pre-filled Item Information.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="User" type="ns:UserType">
		<xs:annotation>
			<xs:documentation> 

        Contains the data for one user. Depending on the context, this might be

        a seller, a buyer, a bidder, or a high/winning bidder. See UserType for

        its child elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ValueList" type="ns:ValType">
		<xs:annotation>
			<xs:documentation>

      List of one or more valid values for an attribute or characteristic.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WatchItemArray" type="ns:ItemArrayType">
		<xs:annotation>
			<xs:documentation>
	      Contains a list of the items the user is watching.
	    </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WonItemArray" type="ns:ItemArrayType">
		<xs:annotation>
			<xs:documentation>
	     Contains a list of the items the user has bid on and won.
		</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="XSLFile" type="ns:XSLFileType"/>
	<xs:element name="PriceRangeFilter" type="ns:PriceRangeFilterType"/>
	<xs:element name="UserIdFilter" type="ns:UserIdFilterType"/>
	<xs:element name="SearchLocationFilter" type="ns:SearchLocationFilterType"/>
	<xs:element name="ProximitySearch" type="ns:ProximitySearchType"/>
	<xs:element name="StoreSearchFilter" type="ns:SearchStoreFilterType"/>
	<xs:element name="BidderNoticePreferences" type="ns:BidderNoticePreferencesType"/>
	<xs:element name="CalculatedShippingPreferences" type="ns:CalculatedShippingPreferencesType"/>
	<xs:element name="CombinedPaymentPreferences" type="ns:CombinedPaymentPreferencesType">
		<xs:annotation>
			<xs:documentation>
	      The combined payment preferences for a user.
	    </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CrossPromotionPreferences" type="ns:CrossPromotionPreferencesType">
		<xs:annotation>
			<xs:documentation>
	         The cross-promotion preferences set by a seller
			 who owns an eBay store.
	        </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FlatShippingPreferences" type="ns:FlatShippingPreferencesType">
		<xs:annotation>
			<xs:documentation>
	      The flat shipping preferences for a user.
	    </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SellerPaymentPreferences" type="ns:SellerPaymentPreferencesType">
		<xs:annotation>
			<xs:documentation>
	      Specifies the seller's preferences for payment options.
	    </xs:documentation>
		</xs:annotation>
	</xs:element>
<xs:complexType name="SellerPaymentPreferencesType">
		<xs:annotation>
			<xs:documentation>
			  Defines the values that make up the seller's preferences.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AlwaysUseThisPaymentAddress" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	    	      Indicates whether the seller wants all transactions
	    	      with eBay to use the address specified in
	    	      SellerPaymentAddress.
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DisplayPayNowButton" type="ns:DisplayPayNowButtonCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      Specifies whether the Pay Now button should always be displayed 
			      for the user's listings.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PayPalPreferred" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      Specifies whether other users should be informed that this 
			      user prefers PayPal payments.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefaultPayPalEmailAddress" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	    		  Specifies the default email address the seller wants
	    		  to use to receive PayPal payments.
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PayPalAlwaysOn" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	    		  Indicates whether PayPal is accepted for all the seller's
	    		  listings.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:SellerPaymentAddress" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
	    		   Specifies the address the seller uses to receive payments
	    		   from buyers.
				  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UPSRateOption" type="ns:UPSRateOptionCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      Specifies the type of UPS rates to use.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CombinedPaymentPreferencesType">
		<xs:annotation>
			<xs:documentation>
			Defines a seller's preferences for allowing buyers
			to combine purchases into one payment.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:CalculatedShippingPreferences" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      Calculated shipping preferences for the user.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CombinedPaymentOption" type="ns:CombinedPaymentOptionCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      Specifies whether or not a seller wants to allow buyers 
			      to combine purchases in order to receive a discount.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CombinedPaymentPeriod" type="ns:CombinedPaymentPeriodCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      Specifies the period in which the user will allow buyers to combine purchases in
			      order to receive a discount.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:FlatShippingPreferences" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      The flat shipping preferences for the user.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FlatShippingPreferencesType">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AmountPerAdditionalItem" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      If the user specifies ChargeAmountForEachAdditionalItem for FlatShippingRateOption, then this
			      value is used to specify how much to charge for each additional item.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DeductionAmountPerAdditionalItem" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      If the user specifies DeductAmountFromEachAdditionalItem for FlatShippingRateOption, then this
			      value is used to specify how much to deduct for each additional item shipped.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlatRateInsuranceRangeCost" type="ns:FlatRateInsuranceRangeCostType" minOccurs="0" maxOccurs="6">
				<xs:annotation>
					<xs:documentation>
			      For the given range, specifies the cost of insurance. If the InsuranceOption is either Optional or Required,
			      then 6 instances of this field must be specifies, one for each cost range.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlatShippingRateOption" type="ns:FlatShippingRateOptionCodeType">
				<xs:annotation>
					<xs:documentation>
			      Specifies how the user wants flat-rate shipping to be calculated.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:InsuranceOption">
				<xs:annotation>
					<xs:documentation>
            (in/out) Whether the seller offers shipping insurance and, if
            so, whether the insurance is optional or required. Flat and
            calculated shipping.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FlatRateInsuranceRangeCostType">
		<xs:annotation>
			<xs:documentation>Insurance Cost for Item Price Range</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FlatRateInsuranceRange" type="ns:FlatRateInsuranceRangeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      The price range for the shipment for which the insurance cost is being specified.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InsuranceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      The cost of insurance for the specified price range.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CalculatedShippingPreferencesType">
		<xs:annotation>
			<xs:documentation>
				Calculated shipping preferences for the user.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CalculatedShippingAmountForEntireOrder" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      The calculated shipping amount for the entire order.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalculatedShippingChargeOption" type="ns:CalculatedShippingChargeOptionCodeType">
				<xs:annotation>
					<xs:documentation>
			      Specifies whether to charge the actual shipping and handling cost for the entire order
			      or for each item.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalculatedShippingRateOption" type="ns:CalculatedShippingRateOptionCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      Specifies whether to calculate the actual rate shipping based on the combined item weight
			      or the individual item weight.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ns:InsuranceOption">
				<xs:annotation>
					<xs:documentation>
            (in/out) Whether the seller offers shipping insurance and, if
            so, whether the insurance is optional or required. Flat and
            calculated shipping.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="BidderNoticePreferencesType">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UnsuccessfulBidderNoticeIncludeMyItems" type="xs:boolean" minOccurs="0"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="CrossPromotionPreferencesType">
		<xs:annotation>
			<xs:documentation>
			  Defines how a seller uses cross-promotions.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CrossPromotionEnabled" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			         Specifies whether cross-promotions are enabled for the seller's listings.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CrossSellItemFormatSortFilter" type="ns:ItemFormatSortFilterCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      (For eBay Store owners only) Specifies which items should be shown
				  in cross-sell promotions (Buy It Now, Store Inventory items) and 
				  in which sequence.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CrossSellGallerySortFilter" type="ns:GallerySortFilterCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      (For eBay Store owners only) Specifies whether to display only items with
				  gallery images and whether they should precede other items in cross-sell
				  promotions.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CrossSellItemSortFilter" type="ns:ItemSortFilterCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			      (For eBay Store owners only) Specifies how to sort items being
				  promoted by cross-sell.
			    </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UpSellItemFormatSortFilter" type="ns:ItemFormatSortFilterCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			       (For eBay Store owners only) Specifies which items should be shown
				   in upsell promotions (Buy It Now, Store Inventory items) and 
				   in which sequence.
			      </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UpSellGallerySortFilter" type="ns:GallerySortFilterCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			        (For eBay Store owners only) Specifies whether to display only items with
				    gallery images and whether they should precede other items in upsell
				    promotions.
			      </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UpSellItemSortFilter" type="ns:ItemSortFilterCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			        (For eBay Store owners only) Specifies how to sort items being
				    promoted by upsell.
			      </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AuthenticationEntryArray" type="ns:AuthenticationEntryArrayType"/>
<xs:complexType name="AuthenticationEntryArrayType">
		<xs:annotation>
			<xs:documentation> 

          Container for a list of AuthenticationEntries. Can contain zero, one, or multiple

          AuthenticationEntryType objects.

			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ns:AuthenticationEntry" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 

            Contains the data properties that define one authentication entry.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="SiteWideCharacteristicsType">
		<xs:annotation>
			<xs:documentation> 

       
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CharacteristicsSet" type="ns:CharacteristicsSetType">
				<xs:annotation>
					<xs:documentation> 

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExcludeCategoryID" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="ApplicationDeliveryPreferencesType">
		<xs:annotation>
			<xs:documentation> 
			  Specifies preferences describing how notifications are
			  delivered to an application.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ApplicationURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The URL where eBay delivers all notifications sent
					to the application. For delivery to a server, the URL 
					begins with http:// or https:// and must be well 
					formed. Use a URL that is functional at the time of the 
					call. For delivery to an email address, the URL begins
					with mailto: and specifies a valid email address.
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApplicationEnable" type="ns:EnableCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					A token indicating whether notifications are
					enabled or disabled. If you disable notifications,
					the application does not receive them, but notification
					preferences are not erased. 
				</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ApplicationDeliveryPreferences" type="ns:ApplicationDeliveryPreferencesType">
		<xs:annotation>
			<xs:documentation> 
			  Specifies preferences describing how notifications are
			  delivered to an application.
		 </xs:documentation>
		</xs:annotation>
	</xs:element>
<xs:complexType name="BiddingDetailsType">
		<xs:annotation>
			<xs:documentation> 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ConvertedMaxBid" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                (GetMyeBay only) Converted value of the value in MaxBid, in the currency indicated by SiteCurrency. For active items, refresh the listing's data every 24

            hours to pick up the current conversion rates. Under conditions where this value would be N/A on the eBay site, this element is not returned at all.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxBid" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

                (GetMyeBay only) Indicates the maximum amount the user has agreed to pay for the item when the user last submitted a bid. Under conditions where this value would be N/A on the eBay site, this element is not returned at all.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuantityBid" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            (GetMyeBay only) Number of items from the listing the user agreed to purchase with a bid. For single-item listings, always 1. For multi-item listings, will be between 1 and the number of items offered in the auction.
Number of items purchased so far.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuantityWon" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            (GetMyeBay only) Used mainly for Dutch auction. For an active listing, number of items the user stands to win if the user is a current winning bidder. For an ended listing, number of items the user actually won. 
In both cases, the number may be less than that returned in QuantityBid as the lowest winning bidder in a Dutch auction might not win the number of items the user has bid on. 


					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Winning" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>

            (GetMyeBay only) Indicates whether the user is the current high bidder in a currently active listing.

					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="MyMessagesSummaryType">
		<xs:annotation>
			<xs:documentation> 
				Summary data for a given user's alerts and messages. This includes the numbers of 
				new alerts and messages, unresolved alerts, flagged messages, and 
				total alerts and messages.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="NewAlertCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The number of new alerts that a given user has.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NewMessageCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The number of new messages that a given user has.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UnresolvedAlertCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The number of alerts that are not yet resolved.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlaggedMessageCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The number of messages that have been flagged.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TotalAlertCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The total number of alerts for a given user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TotalMessageCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The total number of messages for a given user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Alerts" type="ns:MyMessagesAlertArrayType"/>
<xs:complexType name="MyMessagesAlertArrayType">
		<xs:annotation>
			<xs:documentation> 
				Contains a list of alert data.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Alert" type="ns:MyMessagesAlertType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
						(in/out) Contains the data for one alert. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Messages" type="ns:MyMessagesMessageArrayType"/>
<xs:complexType name="MyMessagesMessageArrayType">
		<xs:annotation>
			<xs:documentation> 
				Contains a list of message data.  
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Message" type="ns:MyMessagesMessageType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
						(in/out) Contains the data for one message. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AlertIDs" type="ns:MyMessagesAlertIDArrayType"/>
<xs:complexType name="MyMessagesAlertIDArrayType">
		<xs:annotation>
			<xs:documentation> 
				Contains a list of up to 10 AlertID values.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AlertID" type="ns:MyMessagesAlertIDType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						An ID that uniquely identifies an alert for a given user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ExternalAlertIDs" type="ns:ExternalAlertIDArrayType"/>
<xs:complexType name="ExternalAlertIDArrayType">
		<xs:sequence>
			<xs:element name="ExternalAlertID" type="xs:string" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="MessageIDs" type="ns:MyMessagesMessageIDArrayType"/>
<xs:complexType name="MyMessagesMessageIDArrayType">
		<xs:annotation>
			<xs:documentation> 
				Contains a list of up to 10 MessageID values.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MessageID" type="ns:MyMessagesMessageIDType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						An ID that uniquely identifies a message for a given user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="MyMessagesAlertType">
		<xs:annotation>
			<xs:documentation>
				This type is used by GetMyMessages to return an alert header and full alert 
				information.   
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Sender" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						The display name of the eBay application that sends the alert.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RecipientUserID" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						The displayable user ID of the recipient.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Subject" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						The subject of the alert.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Priority" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						A number ranging from 0 to 10000 (inclusive), with 10000 having the highest priority.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AlertID" type="ns:MyMessagesAlertIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						An ID that uniquely identifies an alert for a given user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExternalAlertID" type="xs:string" minOccurs="0"/>
			<xs:element name="ContentType" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The content type of the body text. The two acceptable values are "TEXT" and "HTML" (case sensitive).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The alert body. The body can contain plain text or HTML code, depending on the ContentType.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResolutionStatus" type="ns:MyMessagesAlertResolutionStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether or not an alert was resolved and how. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Read" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether or not an alert was viewed by a given user. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreationDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date and time an alert was created by a sender.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReceiveDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date and time that an alert was received by My Messages and stored in a database 
						for the recipient.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpirationDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date and time at which an alert expires.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastReadDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date and time an alert was last viewed by a given user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="ns:ItemIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A unique eBay item ID associated with an alert.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ActionURL" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A URL that the recipient must visit to resolve an alert.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="MyMessagesMessageType">
		<xs:annotation>
			<xs:documentation>
				This type is used by GetMyMessages to return a message header and full 
				message information.  
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Sender" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						The display name of the eBay application that sends the message.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RecipientUserID" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						The displayable user ID of the recipient.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Subject" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						The subject of the message.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageID" type="ns:MyMessagesMessageIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						An ID that uniquely identifies a message for a given user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentType" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The content type of the body text. The two acceptable values are "TEXT" and "HTML" (case sensitive).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The message body.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Flagged" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether or not a message has been flagged.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Read" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether or not a message has been viewed by a given user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreationDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date and time that a message was created by the sender.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReceiveDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date and time that a message was received by My Messages and stored in a 
						database for the recipient.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpirationDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date and time at which a message expires.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="ns:ItemIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A unique eBay Item ID associated with a message.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:simpleType name="MyMessagesAlertIDType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
<xs:simpleType name="MyMessagesMessageIDType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/eBLSharedComponents.xsd #####

-->
		<xs:annotation>
		<xs:documentation>
			This schema definition file contains specifications for:
			1)  The abstract request and response messages
			    that will be used to construct payloads for various use cases;
			2) Re-useable error components that are used to communicate 
			    application or business-level error messages back to the client application. 
			    These  error messages are tupically returned due to a problem detected 
			    while processing the request message (e.g., an invalid combination of arguments).
			3) Other utility components needed by various eBay buying, selling, and payment
			    applications (e.g., address type).
 		</xs:documentation>
	</xs:annotation>
<xs:complexType name="ErrorParameterType">
		<xs:annotation>
			<xs:documentation>
              A variable that contains specific information about the context of this error.
              For example, if you pass in an attribute set ID that does not match 
              the specified category, the attribute set ID might be returned as an error parameter.
              Use error parameters to flag fields that users need to correct.
              Also use error parameters to distinguish between errors when multiple
              errors are returned.
				</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Value" type="xs:string">
				<xs:annotation>
					<xs:documentation>
		             The value of the variable (e.g., the attribute set ID)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="ParamID" type="xs:string">
			<xs:annotation>
				<xs:documentation>
		          The index of the parameter in the list of parameter types returned
		          within the error type.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
<xs:complexType name="ErrorType">
		<xs:annotation>
			<xs:documentation>
             These are request errors (as opposed to system errors) that occur due to problems 
             with business-level data (e.g., an invalid combination of arguments) that 
             the application passed in.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShortMessage" type="xs:string">
				<xs:annotation>
					<xs:documentation>
                   A brief description of the condition that raised the error.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LongMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
                   A more detailed description of the condition that raised the error.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorCode" type="xs:token">
				<xs:annotation>
					<xs:documentation>
                  A unique code that identifies the particular error condition that occurred.
                  Your application can use error codes as identifiers 
                  in your customized error-handling algorithms. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeverityCode" type="ns:SeverityCodeType">
				<xs:annotation>
					<xs:documentation>
                   Indicates whether the error is a severe error (causing the request to fail)
                   or an informational error (a warning) that should be communicated to the user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorParameters" type="ns:ErrorParameterType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
                   This optional element carries a list of context-specific 
                   error variables that indicate details about the error condition. 
                   These are useful when multiple instances of ErrorType are returned.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FaultDetailsType">
		<xs:annotation>
			<xs:documentation>
            SOAP faults are used to indicate that an infrastructure error has occurred, 
            such as a problem on eBay's side with database or server going down, or a 
            problem with the client or server-side SOAP framework.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ErrorCode" type="xs:string">
				<xs:annotation>
					<xs:documentation>
                  Error code can be used by a receiving application to debug a SOAP response 
                  message that contains one or more SOAP fault details. 
                  Each error code is uniquely defined for each fault scenario.
                  See the eBay documentation for more information.
                  Your application can use error codes as identifiers 
                  in your customized error-handling algorithms.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Severity" type="xs:string">
				<xs:annotation>
					<xs:documentation>
                   Indicates whether the error is a severe error (causing the request to fail)
                   or an informational error (a warning).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DetailedMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
                   Description of the condition that caused the SOAP fault.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="AbstractRequestType" abstract="true">
		<xs:annotation>
			<xs:documentation> 
            Base type definition of the request payload, which can carry any type 
            of payload content plus optional versioning information and detail level requirements.
            All concrete request types (e.g., AddItemRequestType) are derived from the abstract request type. 
            The naming convention we use for the concrete type names is the name of the service 
            (the verb or call name) followed by "RequestType": VerbNameRequestType
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DetailLevel" type="ns:DetailLevelCodeType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
                  Detail levels are instructions that define standard subsets of data to return for 
                  particular data components (e.g., each Item, Transaction, or User) within the response payload. 
                  For example, a particular detail level might cause the response to include buyer-related 
                  data in every result (e.g., for every Item), but no seller-related data. 
                  Specifying a detail level is like using a predefined attribute list in the SELECT clause of 
                  an SQL query. Use the DetailLevel element to specify the required detail level that 
                  the client application needs pertaining to the data components that are applicable for the request. 
                  The DetailLevelCodeType defines the global list of available detail levels for
                  all request types. Most request types support certain detail levels or none at all.
                  If you pass a detail level that exists in the schema but that isn't valid for a 
                  particular request, eBay will ignore it and your request will still be processed. 
                  For each request type, see the eBay documentation to determine which detail levels 
                  are applicable.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorLanguage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
                   Use ErrorLanguage to return error strings for the call in a different language 
                   from the language commonly associated with the site that the requesting user is registered with. 
                   Specify the standard RFC 3066 language identification tag (e.g., en_US).
                   See http://www.ietf.org/rfc/rfc3066.txt.
                   
                   ID       country
						 -----    -----
						 de_AT    Austria
						 de_CH    Switzerland
						 de_DE    Germany 
						 en_AU    Australia 
						 en_CA    Canada 
						 en_GB    United Kingdom
						 en_US    United States 
						 es_ES    Spain 
						 fr_BE    Belgium (French)
						 fr_FR    France 
						 it_IT    Italy 
						 nl_BE    Belgium (Dutch)
						 nl_NL    Netherlands 
						 zh_TW    Taiwan
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
                  All requests support a MessageID element and all responses support a CorrelationID element. 
                  If you pass a message ID in a request, we will return the same value as the correlation ID 
                  in the response. This may be useful for tracking that a response is returned for every request 
                  and to match particular responses to particular requests.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Version" type="xs:string">
				<xs:annotation>
					<xs:documentation> 
                   The version of the request payload schema. Specify the version
                   of the eBay Service WSDL your application is using. 
                   The value you pass in the Version property of the request has two effects:
                   - It directly indicates the version of the code lists and other data that eBay 
                     will use to process your request.
                   - It indirectly indicates the API compatibility level of the data and functionality 
                      you are using.
                   See the eBay documentation for more information.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndUserIP" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			The IP address of the machine from which the end user is sending the request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BotBlock" type="ns:BotBlockRequestType" minOccurs="0"/>
			<xs:element name="PostTransactionData" type="xs:string" minOccurs="0">
			</xs:element>
			<xs:element name="UsageData" type="xs:string" minOccurs="0">
			</xs:element>
			
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="AbstractResponseType" abstract="true">
		<xs:annotation>
			<xs:documentation> 
                    Base type definition of a response payload that can carry any 
                    type of payload content with following optional elements:
                    	- timestamp of response message, 
                    	- application-level acknowledgement 
                    	- application-level (business-level) errors and warnings
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
                    This value represents the date and time (in GMT) when the response 
                    was generated by a service provider (e.g., the AddItem service) 
                    as a result of processing of a request). 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ack" type="ns:AckCodeType">
				<xs:annotation>
					<xs:documentation> 
                  A token representing the application-level acknowledgement code that indicates
                  the response status (e.g., success). The AckCodeType list specifies
                  the possible values for Ack.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CorrelationID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
                  All requests support a MessageID element and all responses support a CorrelationID element. 
                  If you pass a message ID in a request, we will return the same value as the correlation ID 
                  in the response. This may be useful for tracking that a response is returned for every request 
                  and to match particular responses to particular requests.
                  The CorrelationID may be used with an application level acknowledgement.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Errors" type="ns:ErrorType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
                  A list of application-level errors (if any) that occurred when eBay processed the request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Version" type="xs:string">
				<xs:annotation>
					<xs:documentation> 
                   The version of the response payload schema. Indicates the version of the
                   schema that eBay used to process the request, and it should match the version 
                   you sent in the request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Build" type="xs:string">
				<xs:annotation>
					<xs:documentation> 
                   This refers to the specific software build that eBay used when processing the request 
                   and generating the response. eBay Developer Support may request the build information 
                   when helping you resolve technical issues.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BotBlock" type="ns:BotBlockResponseType" minOccurs="0"/>
			<xs:element name="PostTransactionData" type="xs:string" minOccurs="0">
			</xs:element>
			<xs:element name="UsageData" type="xs:string" minOccurs="0">
			</xs:element>
			<xs:element name="NotificationEventName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
			Event name of the notification
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="AddressType">
		<xs:annotation>
			<xs:documentation> 
        Contains the data for one user address. This is the base type for a
        number of user addresses, including seller payment address and buyer
        shipping address.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="0"/>
			<xs:element name="Street1" type="xs:string" minOccurs="0"/>
			<xs:element name="Street2" type="xs:string" minOccurs="0"/>
			<xs:element name="CityName" type="xs:string" minOccurs="0"/>
			<xs:element name="StateOrProvince" type="xs:string" minOccurs="0"/>
			<xs:element ref="ns:Country" minOccurs="0"/>
			<xs:element ref="ns:CountryName" minOccurs="0"/>
			<xs:element name="Phone" type="xs:string" minOccurs="0"/>
			<xs:element name="PostalCode" type="xs:string" minOccurs="0"/>
			<xs:element name="AddressID" type="xs:string" minOccurs="0"/>
			<xs:element name="AddressOwner" type="ns:AddressOwnerCodeType" minOccurs="0"/>
			<xs:element name="AddressStatus" type="ns:AddressStatusCodeType" minOccurs="0"/>
			<xs:element name="ExternalAddressID" type="xs:string" minOccurs="0"/>
			<xs:element name="InternationalName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Seller's international name that is associated with the payment address.
            Only applicable to SellerPaymentAddress.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternationalStateAndCity" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            International state and city for the seller's payment address.
            Only applicable to SellerPaymentAddress.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternationalStreet" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Seller's international street address that is associated with the payment address.
            Only applicable to SellerPaymentAddress.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Country" type="ns:CountryCodeType">
		<xs:annotation>
			<xs:documentation>
        Two-letter ISO 3166 code for a country.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CountryName" type="xs:string">
		<xs:annotation>
			<xs:documentation>
        Textual name of a country.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Currency" type="ns:CurrencyCodeType">
		<xs:annotation>
			<xs:documentation>
	         Three-letter ISO 4217 currency code. The annotations of CurrencyCodeType identify the
	         currencies that are applicable when listing items on eBay.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Email" type="xs:string">
		<xs:annotation>
			<xs:documentation>
        User email address. Only returned when certain conditions are met. See anti-spam
        rules for the conditions under which a user's email address is returned.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StateOrProvince" type="xs:string">
		<xs:annotation>
			<xs:documentation>
		      The state or province associated with the user's registration address
		      or the sender or recipient's shipping address (depending on the context).
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UUID" type="ns:UUIDType">
		<xs:annotation>
			<xs:documentation>
        Universally unique constraint tag. Use UUID as a precaution if you are listing many
        items at once. If you add an item and do not get an HTTP response, resend the item
        with the same UUID. If the item was successfully listed the first time, you will receive
        an error message for trying to use a UUID that you have already used. The error will also
        include item ID for the duplicated item and a boolean value indicating whether the duplicate
        item was listed by the same application. The UUID can only contain digits from 0-9 and
        letters from A-F and must be 32 characters long. The UUID is unique for each root-level
        category.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
<xs:complexType name="CustomSecurityHeaderType">
		<xs:annotation>
			<xs:documentation>
      			Custom Securiy Header
      			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="eBayAuthToken" type="xs:string" minOccurs="0"/>
			<xs:element name="HardExpirationWarning" type="xs:string" minOccurs="0"/>
			<xs:element name="Credentials" type="ns:UserIdPasswordType" minOccurs="0"/>
			<xs:element name="NotificationSignature" type="xs:string" minOccurs="0"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="UserIdPasswordType">
		<xs:sequence>
			<xs:element name="AppId" type="xs:string"/>
			<xs:element name="DevId" type="xs:string"/>
			<xs:element name="AuthCert" type="xs:string"/>
			<xs:element name="Username" type="xs:string"/>
			<xs:element name="Password" type="xs:string"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="XMLRequesterCredentialsType">
		<xs:sequence>
			<xs:element name="Username" type="xs:string"/>
			<xs:element name="Password" type="xs:string"/>
			<xs:element name="eBayAuthToken" type="xs:string" minOccurs="0"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="BotBlockRequestType">
		<xs:sequence>
			<xs:element name="BotBlockToken" type="xs:string"/>
			<xs:element name="BotBlockUserInput" type="xs:string"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="BotBlockResponseType">
		<xs:sequence>
			<xs:element name="BotBlockToken" type="xs:string"/>
			<xs:element name="BotBlockUrl" type="xs:string"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file eBLBaseComponents/AccessRuleStatusCodeList.xsd #####

-->
	<xs:simpleType name="AccessRuleStatusCodeType">
	  <xs:annotation>
        <xs:documentation>
	     Defines values that describe an application's current status
	     with respect to an API access rule. The rules specify daily
	     and hourly usage limits for various eBay API calls.
        </xs:documentation>
      </xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="RuleOff">
			  <xs:annotation>
				<xs:documentation>
	    		 (out) The rule is turned off, and no rule validation
	    		 was performed.
				</xs:documentation>
			  </xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RuleOn">
			  <xs:annotation>
				<xs:documentation>
	    		 (out) The rule is turned on, and rule validation was
	    		 performed.
				</xs:documentation>
			  </xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ApplicationBlocked">
			  <xs:annotation>
				<xs:documentation>
	    		  (out) The application is blocked from making
	    		  requests to the call named in this rule.
				</xs:documentation>
			  </xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
			  <xs:annotation>
				<xs:documentation>
	    		 (out) Reserved for internal or future use.
				</xs:documentation>
			  </xs:annotation>			
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AccessRuleCurrentStatusCodeList.xsd #####

-->
	<xs:simpleType name="AccessRuleCurrentStatusCodeType">
      <xs:annotation>
        <xs:documentation>
	    	Describes your application's current status with
	    	respect to the access rule.
        </xs:documentation>
      </xs:annotation>	  
		<xs:restriction base="xs:token">
			<xs:enumeration value="NotSet">
				<xs:annotation>
  					<xs:documentation>
	    			  (out) The rule is not set and usage limits do not apply.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="HourlyLimitExceeded">
				<xs:annotation>
  					<xs:documentation>
	    			 (out) Your application exceeded its hourly limit.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="DailyLimitExceeded">
				<xs:annotation>
  					<xs:documentation>
	    			 (out) Your application exceeded its daily limit.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
  					<xs:documentation>
	    			 (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AccountDetailEntryCodeList.xsd #####

-->
	<xs:simpleType name="AccountDetailEntryCodeType">
		<xs:annotation>
			<xs:documentation>
			  Specifies values that describe a transaction on an account. Details of
			  the transaction are returned in AccountEntry. The transaction can
			  be a debit or credit to the account.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unknown">
				<xs:annotation>
					<xs:documentation>
					 (out) The reason for the charge is unknown.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeInsertion">
				<xs:annotation>
					<xs:documentation>
					  (out) The fee for listing an item for sale on eBay.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeBold">
				<xs:annotation>
					<xs:documentation>
					 (out) The fee for a listing title in boldface font.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeFeatured">
				<xs:annotation>
					<xs:documentation>
					  (out) The fee for adding an optional feature to a listing,
					  such as a reserve fee or a listing upgrade fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeCategoryFeatured">
				<xs:annotation>
					<xs:documentation>
					 (out) 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeFinalValue">
				<xs:annotation>
					<xs:documentation>
					 (out) The fee charged when a listed item sells. The fee
					 is a percentage of the final sale price.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentCheck">
				<xs:annotation>
					<xs:documentation>
					(out) A payment by check made by a seller to eBay.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentCC">
				<xs:annotation>
					<xs:documentation>
					(out) A payment by credit card made by a seller to eBay.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCourtesy">
				<xs:annotation>
					<xs:documentation>
					 (out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditNoSale">
				<xs:annotation>
					<xs:documentation>
					 (out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditPartialSale">
				<xs:annotation>
					<xs:documentation>
					 (out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RefundCC">
				<xs:annotation>
					<xs:documentation>
					 (out) A refund made by eBay to the seller's credit card.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RefundCheck">
				<xs:annotation>
					<xs:documentation>
					(out) A refund made by eBay to the seller by check.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FinanceCharge">
				<xs:annotation>
					<xs:documentation>
					(out) A finance charge made to the seller's account, for example,
					the monthly finance charge added to an account whose balance has not been
					paid.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AWDebit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AWCredit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AWMemo">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditDuplicateListing">
				<xs:annotation>
					<xs:documentation>
					(out) A credit made by eBay for a duplicate listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeePartialSale">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay for a partial sale.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentElectronicTransferReversal">
				<xs:annotation>
					<xs:documentation>
					(out) A reversal of an electronic transfer payment.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentCCOnce">
				<xs:annotation>
					<xs:documentation>
					(out) A one-time payment to the account made by
					credit card.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeReturnedCheck">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay for a returned check.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeRedepositCheck">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay when a check must be redeposited
					to collect funds.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentCash">
				<xs:annotation>
					<xs:documentation>
					(out) A cash payment made on the seller's account.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditInsertion">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for an insertion fee.
					If a listed item does not sell or results in an
					Unpaid Item (UPI) dispute, the seller can relist 
					the item. If the item sells the second time, eBay
					credits the insertion fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditBold">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for the Bold listing fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditFeatured">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for the Featured listing fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCategoryFeatured">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditFinalValue">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for the Final Value Fee.
					Issued as a result of an Unpaid Item dispute, under
					some circumstances.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeNSFCheck">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay when the seller's check does not clear
					due to insufficient funds.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeReturnCheckClose">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay when the seller's check does not clear
					because the account has been closed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Memo">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentMoneyOrder">
				<xs:annotation>
					<xs:documentation>
					(out) A payment made to the account by money order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardOnFile">
				<xs:annotation>
					<xs:documentation>
					(out) An automatic monthly charge of the seller's invoice
					amount made by eBay to a credit card the seller has placed
					on file.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardNotOnFile">
				<xs:annotation>
					<xs:documentation>
					(out) A one-time payment made by a credit card
					that is not on file with eBay for automatic monthly
					payments.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Invoiced">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="InvoicedCreditCard">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditTransferFrom">
				<xs:annotation>
					<xs:documentation>
					(out) A transfer from another account to this account,
					resulting in a credit to this account.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DebitTransferTo">
				<xs:annotation>
					<xs:documentation>
					(out) A transfer from this account to another account,
					resulting in a debit to this account.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="InvoiceCreditBalance">
				<xs:annotation>
					<xs:documentation>
					(out) A credit balance for an account's invoice period,
					meaning that the seller should not pay.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayDebit">
				<xs:annotation>
					<xs:documentation>
					(out) An all-purpose code for debits that are manually applied to auctions,
					for example, when the credit cannot be applied to an item number
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayCredit">
				<xs:annotation>
					<xs:documentation>
					(out) An all-purpose code for credits that are manually applied to auctions,
					for example, when the credit cannot be applied to an item number
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PromotionalCredit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CCNotOnFilePerCustReq">
				<xs:annotation>
					<xs:documentation>
					(out) A note that the credit card is not
					on file at the customer's request.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditInsertionFee">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for an insertion
					fee when an item is relisted.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CCPaymentRejected">
				<xs:annotation>
					<xs:documentation>
					(out) 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeGiftIcon">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay for adding a gift icon to 
					a listing. The gift icon highlights the item as a good
					gift and might offer gift services, such as wrapping
					or shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditGiftIcon">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for the gift item
					fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeGallery">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay for listing an item
					in the Picture Gallery. A buyer sees a picture of
					the item when browsing a category, before moving to
					the item's listing page.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeFeaturedGallery">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay for listing an item
					in the Featured section at the top of the Picture Gallery
					page.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditGallery">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for the Gallery fee
					charged when the item was listed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditFeaturedGallery">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for the Featured Gallery
					fee charged when the item was listed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemMoveFee">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OutageCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay when listings are not available
					due to system downtime. The downtime can be a title search
					outage or a hard outage. See the online help for details.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditPSA">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditPCGS">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeReserve">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay when an item is listed with
					a reserve price. The fee is credited when the auction
					completes successfully. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditReserve">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for a reserve price auction
					when the auction completes successfully.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayVISACredit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BBAdminCredit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BBAdminDebit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReferrerCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay to a Store owner
					who has promoted items outside of eBay.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReferrerDebit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SwitchCurrency">
				<xs:annotation>
					<xs:documentation>
					(out) A switch from one billing currency to another.
					The billing currency can be USD, EUR, CAD, GBP, AUD,
					JPY, or TWD.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentGiftCertificate">
				<xs:annotation>
					<xs:documentation>
					(out) A payment made to the account by gift certificate.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentWireTransfer">
				<xs:annotation>
					<xs:documentation>
					(out) A payment made to the account by wire transfer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentHomeBanking">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentElectronicTransfer">
				<xs:annotation>
					<xs:documentation>
					(out) A one-time payment made to the account by electronic
					transfer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentAdjustmentCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit (addition) made by eBay to the seller's account
					when a payment needs to be adjusted.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentAdjustmentDebit">
				<xs:annotation>
					<xs:documentation>
					(out) A debit (deduction) made by eBay to the seller's account
					when a payment needs to be adjusted.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Chargeoff">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffRecovery">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffBankruptcy">
				<xs:annotation>
					<xs:documentation>
					(out) A writeoff of the account charge by eBay
					because the seller has declared bankruptcy.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffSuspended">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffDeceased">
				<xs:annotation>
					<xs:documentation>
					(out) A writeoff of the account charge by eBay
					because the seller is deceased.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffOther">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffWacko">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FinanceChargeReversal">
				<xs:annotation>
					<xs:documentation>
					(out) A reversal of a finance charge, made by eBay.
					The finance charge is added if the seller does not pay
					the monthly account balance on time.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FVFCreditReversal">
				<xs:annotation>
					<xs:documentation>
					(out) A reversal of a Final Value Fee credit, resulting
					in the fee being charged to the seller. The Final Value
					Fee can be credited as a result of an Unpaid Item Dispute.
					If the buyer later pays, the seller can request a reversal.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ForeignFundsConvert">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for currency conversion.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ForeignFundsCheckReversal">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EOMRestriction">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AllFeesCredit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SetOnHold">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RevertUserState">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebitOnFile">
				<xs:annotation>
					<xs:documentation>
					(out) A monthly payment made by automatic direct debit to the
					seller's checking account, when the account information
					is on file.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebitNotOnFile">
				<xs:annotation>
					<xs:documentation>
					(out) A one-time payment made by direct debit to the seller's 
					checking account, when the account information is not on file,
					but is provided for this payment.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentDirectDebit">
				<xs:annotation>
					<xs:documentation>
					(out) A payment made by direct debit from the seller's
					checking account when the seller has requested automatic
					monthly invoice payments.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebitReversal">
				<xs:annotation>
					<xs:documentation>
					(out) A reversal of a payment made by direct debit
					from the seller's checking account.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebitReturnedItem">
				<xs:annotation>
					<xs:documentation>
					(out) A reversal of a payment made by direct debit
					from a seller's checking account when an item is returned
					by the buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeHighlight">
				<xs:annotation>
					<xs:documentation>
					 (out) A fee charged by eBay for adding a colored band to
					 emphasize a listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditHighlight">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for a highlight fee on an
					item's listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BulkUserSuspension">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeRealEstate30DaysListing">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for a 30-day real estate
					listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditRealEstate30DaysListing">
				<xs:annotation>
					<xs:documentation>
					(out) A credit for a 30-day real estate listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TradingLimitOverrideOn">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TradingLimitOverrideOff">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EquifaxRealtimeFee">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged to sellers who do not provide a credit card
					or checking account number to verify identify.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditEquifaxRealtimeFee">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted for an EquifaxRealtimeFee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentEquifaxDebit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentEquifaxCredit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Merged">
				<xs:annotation>
					<xs:documentation>
					(out) Two accounts with the same owner but different user IDs 
					have been merged into one.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoTraderOn">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoTraderOff">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaperInvoiceOn">
				<xs:annotation>
					<xs:documentation>
					(out) The option to send the seller paper invoices
					has been turned on.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaperInvoiceOff">
				<xs:annotation>
					<xs:documentation>
					(out) The option to send the seller paper invoices
					has been turned off.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AccountStateSwitch">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FVFCreditReversalAutomatic">
				<xs:annotation>
					<xs:documentation>
					(out) An automatic reversal of a Final Value Fee
					credit.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditSoftOutage">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted by eBay when a title search
					outage of one hour or longer occurs on the site. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LACatalogFee">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for listing a lot (one or more items) in a 
					Live Auction catalog.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LAExtraItem">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for listing an extra item in a Live Auction.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LACatalogItemFeeRefund">
				<xs:annotation>
					<xs:documentation>
					(out) 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LACatalogInsertionRefund">
				<xs:annotation>
					<xs:documentation>
					(out) A credit for listing an item in a Live Auction catalog.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LAFinalValueFee">
				<xs:annotation>
					<xs:documentation>
					(out) A Final Value Fee charged by eBay when a lot listed
					on a Live Auction is sold.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LAFinalValueFeeRefund">
				<xs:annotation>
					<xs:documentation>
					(out) A refund of a Final Value Fee that was charged
					when a Live Auction lot was sold.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LABuyerPremiumPercentageFee">
				<xs:annotation>
					<xs:documentation>
					(out) A fee paid by the buyer to the auction house for
					a purchase in a Live Auction.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LABuyerPremiumPercentageFeeRefund">
				<xs:annotation>
					<xs:documentation>
					(out) A refund of the fee paid by a buyer to the auction
					house for a purchase in a Live Auction.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LAAudioVideoFee">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for audio or video services provided
					during the sale of lots at a Live Auction.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LAAudioVideoFeeRefund">
				<xs:annotation>
					<xs:documentation>
					(out) A refund for audio or video services provided at
					a Live Auction.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeIPIXPhoto">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for a panoramic 360-degree photo
					in a listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeIPIXSlideShow">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for a slide show of panoramic 360-degree
					photos.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditIPIXPhoto">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted to reverse an IPIX photo fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditIPIXSlideShow">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted to reverse an IPIX slideshow fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeTenDayAuction">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for listing an item for 10 days,
					rather than one, three, five, or seven days.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditTenDayAuction">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted to reverse a 10-day auction
					fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TemporaryCredit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TemporaryCreditReversal">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubscriptionAABasic">
				<xs:annotation>
					<xs:documentation>
				      (out) A fee charged for a subscription to Auction Assistant Basic.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubscriptionAAPro">
				<xs:annotation>
					<xs:documentation>
				      (out) A fee charged for a subscription to Auction Assistant Pro.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditAABasic">
				<xs:annotation>
					<xs:documentation>
				     (out) A credit granted for a subscription fee charged for Auction Assistant Basic.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditAAPro">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted for a subscription fee charged for Auction Assistant Pro.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeLargePicture">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay for a supersized picture
					in a listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditLargePicture">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for a supersized picture.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeePicturePack">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay for the Picture Pack feature.
					The fee differs according to the number of pictures you
					use. See the online help for details.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditPicturePackPartial">
				<xs:annotation>
					<xs:documentation>
					 (out) A partial credit issued by eBay for the Picture Pack fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditPicturePackFull">
				<xs:annotation>
					<xs:documentation>
					 (out) A full credit issued by eBay for the Picture Pack fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubscriptioneBayStores">
				<xs:annotation>
					<xs:documentation>
					 (out) A monthly subscription fee charged for an eBay Store.
					  The fee can be Basic, Featured, or Anchor. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CrediteBayStores">
				<xs:annotation>
					<xs:documentation>
					 (out) A credit issued by eBay for the monthly fee charged
					 for an eBay store.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeInsertionFixedPrice">
				<xs:annotation>
					<xs:documentation>
					(out) The fee charged by eBay for listing a Fixed Price item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditInsertionFixedPrice">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for listing a Fixed Price item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeFinalValueFixedPrice">
				<xs:annotation>
					<xs:documentation>
					 (out) The Final Value Fee credit charged by eBay when
					 a fixed price item sells.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditFinalValueFixedPrice">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for the Final Value Fee
					for a fixed price item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ElectronicInvoiceOn">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ElectronicInvoiceOff">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlagDDDDPending">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlagDDPaymentConfirmed">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceDurationFee">
				<xs:annotation>
					<xs:documentation>
					(out) The fee charged by eBay for creating a Fixed Price
					listing with a 10-day duration. Fixed Price listings
					of 1, 3, 5, and 7 days are not charged this fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceDurationCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for a Fixed Price listing
					with a 10-day duration.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowFee">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged by eBay for listing a Buy It Now item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for the fee charged for a 
					Buy It Now listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeSchedule">
				<xs:annotation>
					<xs:documentation>
					(out) A fee for scheduling a listing to start at some
					later time, up to 3 weeks after the listing is created.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditSchedule">
				<xs:annotation>
					<xs:documentation>
					(out) A credit made by eBay for the fee charged for
					scheduling a listing to start after the listing is created.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubscriptionSMBasic">
				<xs:annotation>
					<xs:documentation>
					 (out) The monthly subscription fee charged for 
					 Selling Manager Basic. The monthly charge is billed
					 in advance.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubscriptionSMBasicPro">
				<xs:annotation>
					<xs:documentation>
					(out) The monthly subscription fee charged for
					Selling Manager Pro. The monthly charge is billed
					in advance.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditSMBasic">
				<xs:annotation>
					<xs:documentation>
					(out) A one-time credit for a free one-month
					trial of Selling Manager Basic.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditSMBasicPro">
				<xs:annotation>
					<xs:documentation>
					(out) A one-time credit for a free one-month
					trial of Selling Manager Pro.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresGTCFee">
				<xs:annotation>
					<xs:documentation>
					(out) The fee charged for a Good-Til-Cancelled
					listing in an eBay Store. The charge is made once
					each 30 days, until the listing ends.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresGTCCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit for the fee charged for a Good-Til-Cancelled
					listing in an eBay Store.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ListingDesignerFee">
				<xs:annotation>
					<xs:documentation>
					(out) The fee charged for using a Listing Designer theme and layout
					template for a listing. The fee is displayed to the seller during
					the listing process.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ListingDesignerCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit issued by eBay for a Listing Designer fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ExtendedAuctionFee">
				<xs:annotation>
					<xs:documentation>
					(out) The fee charged for listing an auction item
					for 10 days.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ExtendedAcutionCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit for the fee charged for listing an
					auction item for 10 days.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalOTPSucc">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalOTPPend">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalFailed">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalChargeBack">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeBack">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeBackReversal">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalRefund">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsAddition">
				<xs:annotation>
					<xs:documentation>
					(out) An addition to the seller's eBay
					Anything Points account. Each point is 
					equivalent to $0.01.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsReduction">
				<xs:annotation>
					<xs:documentation>
					(out) A reduction to the seller's eBay
					Anything Points account. Each point is 
					equivalent to $0.01.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsPaymentAutomatic">
				<xs:annotation>
					<xs:documentation>
					(out) An automatic payment of seller fees
					from the seller's eBay Anything Points account.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsPaymentManual">
				<xs:annotation>
					<xs:documentation>
					(out) A one-time payment of seller fees from
					the seller's eBay Anything Points account.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsPaymentReversal">
				<xs:annotation>
					<xs:documentation>
					(out) A reversal of a seller fee payment made
					from the seller's eBay Anything Points account.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsCashPayout">
				<xs:annotation>
					<xs:documentation>
					(out) A cash payment made from the seller's eBay
					Anything Points account and credited to the seller's
					account.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit (return) to your account of Value-Added Tax
					previously paid.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATDebit">
				<xs:annotation>
					<xs:documentation>
					 (out) A debit to your account for a Value-Added Tax charge.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATStatusChangePending">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATStatusChangeApproved">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATStatusChange_Denied">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATStatusDeletedByCSR">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATStatusDeletedByUser">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SMProListingDesignerFee">
				<xs:annotation>
					<xs:documentation>		
					(out)			
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SMProListingDesignerCredit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresSuccessfulListingFee">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for the difference between an eBay Store inventory listing
					fee and an auction listing fee if a Store inventory item sells.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresSuccessfulListingFeeCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit for a StoresSuccessfulListingFee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresReferralFee">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresReferralCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit posted to a seller's account
					for sale of Stores Inventory items by buyers
					referred to the seller's Store by printed materials
					and emails outside eBay.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubtitleFee">
				<xs:annotation>
					<xs:documentation>
					(out) The fee charged for adding a subtitle
					to a listing. The subtitle adds information
					to the title.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubtitleFeeCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit of the fee charged for adding a
					subtitle to a listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayStoreInventorySubscriptionCredit">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoPmntReqExempt">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoPmntReqRein">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PictureManagerSubscriptionFee">
				<xs:annotation>
					<xs:documentation>
					(out) The monthly fee charged for subscribing to
					Picture Manager. The fee varies according to 
					the level of subscription.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PictureManagerSubscriptionFeeCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted for a Picture Manageer subscription
					fee. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerReportsBasicFee">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for a basic subscription to Seller Reports.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerReportsBasicCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted for a basic subscription to Seller Reports.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerReportsPlusFee">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for a subscription to Seller Reports Plus.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerReportsPlusCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted for a subscription to Seller Reports Plus.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaypalOnFile">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaypalOnFileByCSR">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaypalOffFile">
				<xs:annotation>
					<xs:documentation>
					(out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BorderFee">
				<xs:annotation>
					<xs:documentation>
					(out) The fee for adding a border that outlines a listing with a frame.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BorderFeeCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit for the border fee charged for a listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeSearchableMobileDE">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged to a seller for upgrading
					a listing from eBay Germany's Car, Motorcycle, 
					and Special Vehicle categories so that it is also
					searchable on the mobile.de classifieds site.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SalesReportsPlusFee">
				<xs:annotation>
					<xs:documentation>
					(out) A monthly subscription fee charged for
					Sales Reports Plus.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SalesReportsPlusCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted for a Sales Reports Plus
					monthly subscription fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditSearchableMobileDE">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted for upgrading a listing
					to make it searchable on the mobile.de platform.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EmailMarketingFee">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged to owners of eBay Stores
					who have a sent a marketing email to buyers,
					for the number of email recipients over
					the Store's monthly free allocation. The
					monthly allocation varies according to the type
					of Store.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EmailMarketingCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted for an email marketing fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeePictureShow">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for the Picture Show
					service, which lets buyers browse or see a slide
					show of 2 or more pictures at the top of the 
					item page.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditPictureShow">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted for a Picture Show fee.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ProPackBundleFee">
				<xs:annotation>
					<xs:documentation>
					(out) A fee charged for ProPack Bundle, a feature for Motors
					sellers who are vehicle dealers.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ProPackBundleFeeCredit">
				<xs:annotation>
					<xs:documentation>
					(out) A credit granted by eBay for ProPack Bundle.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FinalEntry">
				<xs:annotation>
					<xs:documentation>
					(out) The final entry in an account before it is closed
					or merged with another account.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					(out) Reserved for future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AccountHistorySelectionCodeList.xsd #####

-->
	<xs:simpleType name="AccountHistorySelectionCodeType">
		<xs:annotation>
			<xs:documentation>
           AccountHistorySelectionCodeType - Type declaration to be used by other schema.
           Specifies the account retrieval cases (the seller account report format).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="LastInvoice">
				<xs:annotation>
					<xs:documentation>
                (in) Last Invoice report. Generates a report consisting of the data in the
                last invoice eBay sent to the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SpecifiedInvoice">
				<xs:annotation>
					<xs:documentation>
                (in) Specified invoice. Generates a report consisting of the data for a
                specific invoice, identified by the month and year the invoice was issued.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BetweenSpecifiedDates">
				<xs:annotation>
					<xs:documentation>
                (in) Between specified dates. Generates a report consisting of account
                entries that were posted to the user's seller account between two dates.
                The period covered may cross the boundaries between formal invoices.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AllHistory">
				<xs:annotation>
					<xs:documentation>
                (in) All history. Generates a report of all of the account entries in the
                user's seller account that are accessible (i.e., those that have not been
                archived and removed from the active database at eBay).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AccountStateCodeList.xsd #####

-->
	<xs:simpleType name="AccountStateCodeType">
		<xs:annotation>
			<xs:documentation>
           AccountStateCodeType - Type declaration to be used by other schema.
           These are the possible codes to describe the state of an account of an 
           eBay user.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Active">
				<xs:annotation>
					<xs:documentation>
                (out) Indicates that the account is active and the current account used for
                the user's seller activities.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Pending">
				<xs:annotation>
					<xs:documentation>
                (out) Indicates that the account has been created, but is not yet active
                pending additional information or processing by eBay.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Inactive">
				<xs:annotation>
					<xs:documentation>
                (out) Indicates that the account is inactive. No new seller account entries
                would be posted by eBay to the account.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AckCodeList.xsd #####

-->
	<xs:simpleType name="AckCodeType">
		<xs:annotation>
			<xs:documentation>
AckCodeType - Type declaration to be used by other schema.
This code identifies the acknowledgement code types that 
eBay could use to communicate the status of processing a 
(request) message to an application. This code would be used 
as part of a response message that contains an  
application-level acknowledgement element.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Success">
				<xs:annotation>
					<xs:documentation>
					   (out) Request processing succeeded
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Failure">
				<xs:annotation>
					<xs:documentation> 
					   (out) Request processing failed
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Warning">
				<xs:annotation>
					<xs:documentation>
					   (out) Request processing completed with warning information
					   being included in the response message
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AddressOwnerCodeList.xsd #####

-->
	<xs:simpleType name="AddressOwnerCodeType">
		<xs:annotation>
			<xs:documentation>
AddressOwnerCodeType - Type declaration to be used by other schema.
This code identifies the AddressOwner code types which indicates
who owns the user'a address.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="PayPal">
				<xs:annotation>
					<xs:documentation>
                (in/out) PayPal owns the address.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBay">
				<xs:annotation>
					<xs:documentation> 
                (in/out) eBay owns the address.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AddressStatusCodeList.xsd #####

-->
	<xs:simpleType name="AddressStatusCodeType">
		<xs:annotation>
			<xs:documentation>
           AddressStatusCodeType - Type declaration to be used by other schemas.
           PayPal address status.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Confirmed"/>
			<xs:enumeration value="Unconfirmed"/>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/BalanceCodeList.xsd #####

-->
	<xs:simpleType name="BalanceCodeType">
		<xs:annotation>
			<xs:documentation>
           BalanceCodeType - Type declaration to be used by other schema. This
           code identifies the types of balances in an account, e.g., a PayPal
           account.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>
                (out) Custom Code.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/BidActionCodeList.xsd #####

-->
	<xs:simpleType name="BidActionCodeType">
		<xs:annotation>
			<xs:documentation>
          BidActionCodeType - Type declaration to be used by other schema.
          These are the possible codes for types of bid.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unknown">
				<xs:annotation>
					<xs:documentation>
                Unknown
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Bid">
				<xs:annotation>
					<xs:documentation>
                (in/out) Bid. The offer is being or was placed on a competitive-bidding
                listing (a Chinese or Dutch auction).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NotUsed">
				<xs:annotation>
					<xs:documentation>
                (out) Not used.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Retraction">
				<xs:annotation>
					<xs:documentation>
                (out) Retraction. The offer was retracted by the user who extended the
                offer. (Must be done on the eBay site, not possible through the API.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoRetraction">
				<xs:annotation>
					<xs:documentation>
                (out) Auto-retraction. The offer was auto-retracted. (Must be done on the
                eBay site, not possible through the API.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Cancelled">
				<xs:annotation>
					<xs:documentation>
                (out) Cancelled. The offer was cancelled. (Must be done on the eBay site,
                not possible through the API.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoCancel">
				<xs:annotation>
					<xs:documentation>
                (out) Auto-cancel. The offer was auto-cancelled. (Must be done on the eBay
                site, not possible through the API.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Absentee">
				<xs:annotation>
					<xs:documentation>
                (out) Absentee. The offer placed was an absentee bid. (Must be done on the
                eBay site, not possible through the API.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNow">
				<xs:annotation>
					<xs:documentation>
                (out) BuyItNow. The offer resulted in the successful exercise of the Buy It
                Now option for a Chinese auction.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Purchase">
				<xs:annotation>
					<xs:documentation>
                (in/out) Purchase. The offer is being or was placed on a fixed-price listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/BuyerPaymentMethodCodeList.xsd #####

-->
	<xs:simpleType name="BuyerPaymentMethodCodeType">
		<xs:annotation>
			<xs:documentation>
				BuyerPaymentMethodCodeType - Type declaration to be used by other
				schema. Identifies the payment method used by the buyer to pay the
				seller. On item listing, identifies one of the payment methods
				seller will accept for the item.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						(in/out) No payment method specified.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MOCC">
				<xs:annotation>
					<xs:documentation>
						(in/out) Money order/cashiers check.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AmEx">
				<xs:annotation>
					<xs:documentation>
						(in/out) American Express.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentSeeDescription">
				<xs:annotation>
					<xs:documentation>
						(in/out) Payment instructions are contained in the item's description.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CCAccepted">
				<xs:annotation>
					<xs:documentation>
						(in/out) American Express.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PersonalCheck">
				<xs:annotation>
					<xs:documentation>
						(in/out) Personal check.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="COD">
				<xs:annotation>
					<xs:documentation>
						(in/out) Cash on delivery.  NOTE: This value is deprecated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VisaMC">
				<xs:annotation>
					<xs:documentation>
						(in/out) Visa/Mastercard.  NOTE: This value is deprecated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>
						(in/out) Other forms of payment. Some custom method is accepted by seller
						as the payment method in the transaction. For Motors vehicle items, this
						field refers to the Deposit payment method.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPal">
				<xs:annotation>
					<xs:documentation>
						(in/out) PayPal.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Discover">
				<xs:annotation>
					<xs:documentation>
						(in/out) Discover.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CashOnPickup">
				<xs:annotation>
					<xs:documentation>
						(in/out) Payment on delivery acceptable payment term.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MoneyXferAccepted">
				<xs:annotation>
					<xs:documentation>
						(in/out) Direct transfer of money acceptable payment term.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MoneyXferAcceptedInCheckout">
				<xs:annotation>
					<xs:documentation>
						(in/out) If the seller has bank account information on file, and
						MoneyXferAcceptedInCheckout = true, then the bank account information will
						be displayed in Checkout. Applicable only to certain global eBay sites. See
						the international differences section in the Developers Guide.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OtherOnlinePayments">
				<xs:annotation>
					<xs:documentation>
						(in/out) All other online payments.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Escrow">
				<xs:annotation>
					<xs:documentation>
						(in/out) China site payment method: Escrow managed payment.  NOTE: This value is deprecated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PrePayDelivery">
				<xs:annotation>
					<xs:documentation>
						(in/out) China site payment method: PrePayDelivery.  NOTE: This value is deprecated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CODPrePayDelivery">
				<xs:annotation>
					<xs:documentation>
						(in/out) China site payment method: CODPrePayDelivery.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PostalTransfer">
				<xs:annotation>
					<xs:documentation>
						(in/out) China site payment method: PostalTransfer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/BuyerProtectionCodeList.xsd #####

-->
	<xs:simpleType name="BuyerProtectionCodeType">
		<xs:annotation>
			<xs:documentation>
           BuyerProtectionCodeType - Type declaration to be used by other
           schema. Indicates the status of the item's eligibility for the Buyer
           Protection Program.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ItemIneligible">
				<xs:annotation>
					<xs:documentation>
                (out) Item is ineligible (e.g., category not applicable).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemEligible">
				<xs:annotation>
					<xs:documentation>
                (out) Item is eligible per standard criteria.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemMarkedIneligible">
				<xs:annotation>
					<xs:documentation>
                (out) Item marked ineligible per special criteria (e.g., seller's account closed).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemMarkedEligible">
				<xs:annotation>
					<xs:documentation>
                (out) Item marked eligible per other criteria.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CategoryListingsOrderCodeList.xsd #####

-->
	<xs:simpleType name="CategoryListingsOrderCodeType">
		<xs:annotation>
			<xs:documentation>
           CategoryListingsOrderCodeType - Type declaration to be used by other
           schema. This code identifies the CategoryListingsOrder codes (e.g.,
           for GetCategoryListings request) to be used to filter the returned
           data in the ways enumerated below.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NoFilter">
				<xs:annotation>
					<xs:documentation>
                (in) Applies no filter. For the US site, sorts items by start time. For
                International sites, sorts items by end time.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemsBy24Hr">
				<xs:annotation>
					<xs:documentation> 
                (in) Returns items that were listed in the past 24 hours.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemsEndToday">
				<xs:annotation>
					<xs:documentation> 
                (in) [NOTE: ROWInternal] Returns items that end today.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemsEndIn5Hr">
				<xs:annotation>
					<xs:documentation> 
                (in) [NOTE: ROWInternal] Returns items that end within approximately 5 hours.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			
			<xs:enumeration value="SortByPriceAsc">
				<xs:annotation>
					<xs:documentation> 
				(in) Sort items by price (lowest first)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="SortByPriceDesc">
				<xs:annotation>
					<xs:documentation> 
				(in) Sort items by price (highest first)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="DistanceSort">
				<xs:annotation>
					<xs:documentation> 
				(in) Sort items by distance
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CategoryListingsSearchTypeCodeList.xsd #####

-->
	<xs:simpleType name="CategoryListingsSearchCodeType">
		<xs:annotation>
			<xs:documentation>
           CategoryListingsSearchCodeType - Type declaration to be used by
           other schema. Used to filter returned item listings to just those
           that are featured or super-featured.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Featured">
				<xs:annotation>
					<xs:documentation>
                (in) Return only featured item listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SuperFeatured">
				<xs:annotation>
					<xs:documentation>
                (in) Return only super-featured item listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CharacteristicsSearchCodeList.xsd #####

-->
	<xs:simpleType name="CharacteristicsSearchCodeType">
		<xs:annotation>
			<xs:documentation>
Indicates whether one attribute or multiple attributes can be used 
as the search criteria when calling GetProductSearchResults. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Single">
				<xs:annotation>
					<xs:documentation>
            (in/out) The search criteria can consist of one attribute.
            Applications should validate that only one searchable attribute 
            is selected for the query.
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Multi">
				<xs:annotation>
					<xs:documentation> 
            (in/out) The search criteria can consist of multiple attributes.
            One or more searchable attributes can be selected, and users should be informed 
            that the search engine will apply "AND" logic to the query.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
            (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CheckoutStatusCodeList.xsd #####

-->
	<xs:simpleType name="CheckoutStatusCodeType">
		<xs:annotation>
			<xs:documentation>
           CheckoutStatusCodeType - Type declaration to be used by other schema.
           Indicates the current state of the checkout process for a transaction.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="CheckoutComplete">
				<xs:annotation>
					<xs:documentation>
                (in/out) Checkout complete.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CheckoutIncomplete">
				<xs:annotation>
					<xs:documentation>
                (in/out) Checkout incomplete--no details specified.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerRequestsTotal">
				<xs:annotation>
					<xs:documentation>
                (out) Buyer requests total from seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerResponded">
				<xs:annotation>
					<xs:documentation>
                (out) Seller responded to buyer's request.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CommentTypeCodeList.xsd #####

-->
	<xs:simpleType name="CommentTypeCodeType">
		<xs:annotation>
			<xs:documentation>
           CommentTypeCodeType - Type declaration to be used by other schema.
           These are the possible codes to specify the types of feedback/comment.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Positive">
				<xs:annotation>
					<xs:documentation>
                Positive feedback. Increases total feedback score.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Neutral">
				<xs:annotation>
					<xs:documentation>
                Neutral feedback. No effect on total feedback score.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Negative">
				<xs:annotation>
					<xs:documentation>
                Negative feedback. Decreases total feedback score.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Withdrawn">
				<xs:annotation>
					<xs:documentation>
                Withdrawn feedback.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CompleteStatusCodeList.xsd #####

-->
	<xs:simpleType name="CompleteStatusCodeType">
		<xs:annotation>
			<xs:documentation>
CompleteStatusCodeType - Type declaration to be used by other schema.
Indicates whether the transaction process is complete or incomplete.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Incomplete">
				<xs:annotation>
					<xs:documentation>
						    (out) transaction is incomplete.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Complete">
				<xs:annotation>
					<xs:documentation>
						    (out) transaction is complete.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CountryCodeList.xsd #####

-->
	<xs:simpleType name="CountryCodeType">
		<xs:annotation>
			<xs:documentation>
CountryCodeType - Type declaration to be used by other schema.
This code list module defines the enumerated types of standard
2-letter ISO 3166 country codes. This code list also contains
some additional country codes not defined in the ISO 3166
country code set, which appear at the end of this code list and
are noted as non-ISO. Country codes may be used as input and as
output. For more information on ISO 3166 country codes, see the ISO site:
http://www.iso.ch/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AF"/>
			<xs:enumeration value="AL"/>
			<xs:enumeration value="DZ"/>
			<xs:enumeration value="AS"/>
			<xs:enumeration value="AD"/>
			<xs:enumeration value="AO"/>
			<xs:enumeration value="AI"/>
			<xs:enumeration value="AQ"/>
			<xs:enumeration value="AG"/>
			<xs:enumeration value="AR"/>
			<xs:enumeration value="AM"/>
			<xs:enumeration value="AW"/>
			<xs:enumeration value="AU"/>
			<xs:enumeration value="AT"/>
			<xs:enumeration value="AZ"/>
			<xs:enumeration value="BS"/>
			<xs:enumeration value="BH"/>
			<xs:enumeration value="BD"/>
			<xs:enumeration value="BB"/>
			<xs:enumeration value="BY"/>
			<xs:enumeration value="BE"/>
			<xs:enumeration value="BZ"/>
			<xs:enumeration value="BJ"/>
			<xs:enumeration value="BM"/>
			<xs:enumeration value="BT"/>
			<xs:enumeration value="BO"/>
			<xs:enumeration value="BA"/>
			<xs:enumeration value="BW"/>
			<xs:enumeration value="BV"/>
			<xs:enumeration value="BR"/>
			<xs:enumeration value="IO"/>
			<xs:enumeration value="BN"/>
			<xs:enumeration value="BG"/>
			<xs:enumeration value="BF"/>
			<xs:enumeration value="BI"/>
			<xs:enumeration value="KH"/>
			<xs:enumeration value="CM"/>
			<xs:enumeration value="CA"/>
			<xs:enumeration value="CV"/>
			<xs:enumeration value="KY"/>
			<xs:enumeration value="CF"/>
			<xs:enumeration value="TD"/>
			<xs:enumeration value="CL"/>
			<xs:enumeration value="CN"/>
			<xs:enumeration value="CX"/>
			<xs:enumeration value="CC"/>
			<xs:enumeration value="CO"/>
			<xs:enumeration value="KM"/>
			<xs:enumeration value="CG"/>
			<xs:enumeration value="CD"/>
			<xs:enumeration value="CK"/>
			<xs:enumeration value="CR"/>
			<xs:enumeration value="CI"/>
			<xs:enumeration value="HR"/>
			<xs:enumeration value="CU"/>
			<xs:enumeration value="CY"/>
			<xs:enumeration value="CZ"/>
			<xs:enumeration value="DK"/>
			<xs:enumeration value="DJ"/>
			<xs:enumeration value="DM"/>
			<xs:enumeration value="DO"/>
			<xs:enumeration value="TP"/>
			<xs:enumeration value="EC"/>
			<xs:enumeration value="EG"/>
			<xs:enumeration value="SV"/>
			<xs:enumeration value="GQ"/>
			<xs:enumeration value="ER"/>
			<xs:enumeration value="EE"/>
			<xs:enumeration value="ET"/>
			<xs:enumeration value="FK"/>
			<xs:enumeration value="FO"/>
			<xs:enumeration value="FJ"/>
			<xs:enumeration value="FI"/>
			<xs:enumeration value="FR"/>
			<xs:enumeration value="GF"/>
			<xs:enumeration value="PF"/>
			<xs:enumeration value="TF"/>
			<xs:enumeration value="GA"/>
			<xs:enumeration value="GM"/>
			<xs:enumeration value="GE"/>
			<xs:enumeration value="DE"/>
			<xs:enumeration value="GH"/>
			<xs:enumeration value="GI"/>
			<xs:enumeration value="GR"/>
			<xs:enumeration value="GL"/>
			<xs:enumeration value="GD"/>
			<xs:enumeration value="GP"/>
			<xs:enumeration value="GU"/>
			<xs:enumeration value="GT"/>
			<xs:enumeration value="GN"/>
			<xs:enumeration value="GW"/>
			<xs:enumeration value="GY"/>
			<xs:enumeration value="HT"/>
			<xs:enumeration value="HM"/>
			<xs:enumeration value="VA"/>
			<xs:enumeration value="HN"/>
			<xs:enumeration value="HK"/>
			<xs:enumeration value="HU"/>
			<xs:enumeration value="IS"/>
			<xs:enumeration value="IN"/>
			<xs:enumeration value="ID"/>
			<xs:enumeration value="IR"/>
			<xs:enumeration value="IQ"/>
			<xs:enumeration value="IE"/>
			<xs:enumeration value="IL"/>
			<xs:enumeration value="IT"/>
			<xs:enumeration value="JM"/>
			<xs:enumeration value="JP"/>
			<xs:enumeration value="JO"/>
			<xs:enumeration value="KZ"/>
			<xs:enumeration value="KE"/>
			<xs:enumeration value="KI"/>
			<xs:enumeration value="KP"/>
			<xs:enumeration value="KR"/>
			<xs:enumeration value="KW"/>
			<xs:enumeration value="KG"/>
			<xs:enumeration value="LA"/>
			<xs:enumeration value="LV"/>
			<xs:enumeration value="LB"/>
			<xs:enumeration value="LS"/>
			<xs:enumeration value="LR"/>
			<xs:enumeration value="LY"/>
			<xs:enumeration value="LI"/>
			<xs:enumeration value="LT"/>
			<xs:enumeration value="LU"/>
			<xs:enumeration value="MO"/>
			<xs:enumeration value="MK"/>
			<xs:enumeration value="MG"/>
			<xs:enumeration value="MW"/>
			<xs:enumeration value="MY"/>
			<xs:enumeration value="MV"/>
			<xs:enumeration value="ML"/>
			<xs:enumeration value="MT"/>
			<xs:enumeration value="MH"/>
			<xs:enumeration value="MQ"/>
			<xs:enumeration value="MR"/>
			<xs:enumeration value="MU"/>
			<xs:enumeration value="YT"/>
			<xs:enumeration value="MX"/>
			<xs:enumeration value="FM"/>
			<xs:enumeration value="MD"/>
			<xs:enumeration value="MC"/>
			<xs:enumeration value="MN"/>
			<xs:enumeration value="MS"/>
			<xs:enumeration value="MA"/>
			<xs:enumeration value="MZ"/>
			<xs:enumeration value="MM"/>
			<xs:enumeration value="NA"/>
			<xs:enumeration value="NR"/>
			<xs:enumeration value="NP"/>
			<xs:enumeration value="NL"/>
			<xs:enumeration value="AN"/>
			<xs:enumeration value="NC"/>
			<xs:enumeration value="NZ"/>
			<xs:enumeration value="NI"/>
			<xs:enumeration value="NE"/>
			<xs:enumeration value="NG"/>
			<xs:enumeration value="NU"/>
			<xs:enumeration value="NF"/>
			<xs:enumeration value="MP"/>
			<xs:enumeration value="NO"/>
			<xs:enumeration value="OM"/>
			<xs:enumeration value="PK"/>
			<xs:enumeration value="PW"/>
			<xs:enumeration value="PS"/>
			<xs:enumeration value="PA"/>
			<xs:enumeration value="PG"/>
			<xs:enumeration value="PY"/>
			<xs:enumeration value="PE"/>
			<xs:enumeration value="PH"/>
			<xs:enumeration value="PN"/>
			<xs:enumeration value="PL"/>
			<xs:enumeration value="PT"/>
			<xs:enumeration value="PR"/>
			<xs:enumeration value="QA"/>
			<xs:enumeration value="RE"/>
			<xs:enumeration value="RO"/>
			<xs:enumeration value="RU"/>
			<xs:enumeration value="RW"/>
			<xs:enumeration value="SH"/>
			<xs:enumeration value="KN"/>
			<xs:enumeration value="LC"/>
			<xs:enumeration value="PM"/>
			<xs:enumeration value="VC"/>
			<xs:enumeration value="WS"/>
			<xs:enumeration value="SM"/>
			<xs:enumeration value="ST"/>
			<xs:enumeration value="SA"/>
			<xs:enumeration value="SN"/>
			<xs:enumeration value="SC"/>
			<xs:enumeration value="SL"/>
			<xs:enumeration value="SG"/>
			<xs:enumeration value="SK"/>
			<xs:enumeration value="SI"/>
			<xs:enumeration value="SB"/>
			<xs:enumeration value="SO"/>
			<xs:enumeration value="ZA"/>
			<xs:enumeration value="GS"/>
			<xs:enumeration value="ES"/>
			<xs:enumeration value="LK"/>
			<xs:enumeration value="SD"/>
			<xs:enumeration value="SR"/>
			<xs:enumeration value="SJ"/>
			<xs:enumeration value="SZ"/>
			<xs:enumeration value="SE"/>
			<xs:enumeration value="CH"/>
			<xs:enumeration value="SY"/>
			<xs:enumeration value="TW"/>
			<xs:enumeration value="TJ"/>
			<xs:enumeration value="TZ"/>
			<xs:enumeration value="TH"/>
			<xs:enumeration value="TG"/>
			<xs:enumeration value="TK"/>
			<xs:enumeration value="TO"/>
			<xs:enumeration value="TT"/>
			<xs:enumeration value="TN"/>
			<xs:enumeration value="TR"/>
			<xs:enumeration value="TM"/>
			<xs:enumeration value="TC"/>
			<xs:enumeration value="TV"/>
			<xs:enumeration value="UG"/>
			<xs:enumeration value="UA"/>
			<xs:enumeration value="AE"/>
			<xs:enumeration value="GB"/>
			<xs:enumeration value="US"/>
			<xs:enumeration value="UM"/>
			<xs:enumeration value="UY"/>
			<xs:enumeration value="UZ"/>
			<xs:enumeration value="VU"/>
			<xs:enumeration value="VE"/>
			<xs:enumeration value="VN"/>
			<xs:enumeration value="VG"/>
			<xs:enumeration value="VI"/>
			<xs:enumeration value="WF"/>
			<xs:enumeration value="EH"/>
			<xs:enumeration value="YE"/>
			<xs:enumeration value="YU"/>
			<xs:enumeration value="ZM"/>
			<xs:enumeration value="ZW"/>
			<xs:enumeration value="AA">
				<xs:annotation>
					<xs:documentation>
		                NOTE: APO/FPO was defined in eBay list previously 
		                but they are not defined in ISO 3166. This country 
		                will remain on eBay country code list for backward 
		                compatibility.
		             </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QM">
				<xs:annotation>
					<xs:documentation>
		                NOTE: Guernsey was defined in eBay list previously 
		                but they are not defined in ISO 3166. This country 
		                will remain on eBay country list for backward 
		                compatibility.
		             </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QN">
				<xs:annotation>
					<xs:documentation>
		                 NOTE: Jan Mayen was defined in eBay list previously 
		                 but they are not defined in ISO 3166. This country 
		                 will remain on eBay country list for backward 
		                 compatibility.
		             </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QO">
				<xs:annotation>
					<xs:documentation>
		                 NOTE: Jersey was defined in eBay list previously 
		                 but they are not defined in ISO 3166. This country 
		                 will remain on eBay country list for backward 
		                 compatibility.
		             </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QP">
				<xs:annotation>
					<xs:documentation>
		                 NOTE: Tahiti was defined in eBay list previously 
		                 but they are not defined in ISO 3166. This country 
		                 will remain on eBay country list for backward 
		                 compatibility.
		             </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CurrencyCodeList.xsd #####

-->
	<xs:simpleType name="CurrencyCodeType">
		<xs:annotation>
			<xs:documentation>
CurrencyCodeType - Type declaration to be used by other schema.
This code list module defines the enumerated types of standard 3-letter 
ISO 4217 currency codes. Currency codes can be used as input or 
output (in/out); however, only certain currency codes are currently valid 
for use on eBay. The valid codes are documented below with the notation 
"(in/out)". Other codes in this list are for future use.
A reference: http://www.xe.com/iso4217.htm
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AFA"/>
			<xs:enumeration value="ALL"/>
			<xs:enumeration value="DZD"/>
			<xs:enumeration value="ADP"/>
			<xs:enumeration value="AOA"/>
			<xs:enumeration value="ARS"/>
			<xs:enumeration value="AMD"/>
			<xs:enumeration value="AWG"/>
			<xs:enumeration value="AZM"/>
			<xs:enumeration value="BSD"/>
			<xs:enumeration value="BHD"/>
			<xs:enumeration value="BDT"/>
			<xs:enumeration value="BBD"/>
			<xs:enumeration value="BYR"/>
			<xs:enumeration value="BZD"/>
			<xs:enumeration value="BMD"/>
			<xs:enumeration value="BTN"/>
			<xs:enumeration value="INR"/>
			<xs:enumeration value="BOV"/>
			<xs:enumeration value="BOB"/>
			<xs:enumeration value="BAM"/>
			<xs:enumeration value="BWP"/>
			<xs:enumeration value="BRL"/>
			<xs:enumeration value="BND"/>
			<xs:enumeration value="BGL"/>
			<xs:enumeration value="BGN"/>
			<xs:enumeration value="BIF"/>
			<xs:enumeration value="KHR"/>
			<xs:enumeration value="CAD">
				<xs:annotation>
					<xs:documentation>
                   (in/out) Canadian Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CVE"/>
			<xs:enumeration value="KYD"/>
			<xs:enumeration value="XAF"/>
			<xs:enumeration value="CLF"/>
			<xs:enumeration value="CLP"/>
			<xs:enumeration value="CNY"/>
			<xs:enumeration value="COP"/>
			<xs:enumeration value="KMF"/>
			<xs:enumeration value="CDF"/>
			<xs:enumeration value="CRC"/>
			<xs:enumeration value="HRK"/>
			<xs:enumeration value="CUP"/>
			<xs:enumeration value="CYP"/>
			<xs:enumeration value="CZK"/>
			<xs:enumeration value="DKK"/>
			<xs:enumeration value="DJF"/>
			<xs:enumeration value="DOP"/>
			<xs:enumeration value="TPE"/>
			<xs:enumeration value="ECV"/>
			<xs:enumeration value="ECS"/>
			<xs:enumeration value="EGP"/>
			<xs:enumeration value="SVC"/>
			<xs:enumeration value="ERN"/>
			<xs:enumeration value="EEK"/>
			<xs:enumeration value="ETB"/>
			<xs:enumeration value="FKP"/>
			<xs:enumeration value="FJD"/>
			<xs:enumeration value="GMD"/>
			<xs:enumeration value="GEL"/>
			<xs:enumeration value="GHC"/>
			<xs:enumeration value="GIP"/>
			<xs:enumeration value="GTQ"/>
			<xs:enumeration value="GNF"/>
			<xs:enumeration value="GWP"/>
			<xs:enumeration value="GYD"/>
			<xs:enumeration value="HTG"/>
			<xs:enumeration value="HNL"/>
			<xs:enumeration value="HKD">
				<xs:annotation>
					<xs:documentation>
                   (in/out) Hong Kong Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HUF"/>
			<xs:enumeration value="ISK"/>
			<xs:enumeration value="IDR"/>
			<xs:enumeration value="IRR"/>
			<xs:enumeration value="IQD"/>
			<xs:enumeration value="ILS"/>
			<xs:enumeration value="JMD"/>
			<xs:enumeration value="JPY"/>
			<xs:enumeration value="JOD"/>
			<xs:enumeration value="KZT"/>
			<xs:enumeration value="KES"/>
			<xs:enumeration value="AUD">
				<xs:annotation>
					<xs:documentation>
					   (in/out) Australian Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="KPW"/>
			<xs:enumeration value="KRW"/>
			<xs:enumeration value="KWD"/>
			<xs:enumeration value="KGS"/>
			<xs:enumeration value="LAK"/>
			<xs:enumeration value="LVL"/>
			<xs:enumeration value="LBP"/>
			<xs:enumeration value="LSL"/>
			<xs:enumeration value="LRD"/>
			<xs:enumeration value="LYD"/>
			<xs:enumeration value="CHF">
				<xs:annotation>
					<xs:documentation>
					   (in/out) Swiss Franc
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LTL"/>
			<xs:enumeration value="MOP"/>
			<xs:enumeration value="MKD"/>
			<xs:enumeration value="MGF"/>
			<xs:enumeration value="MWK"/>
			<xs:enumeration value="MYR"/>
			<xs:enumeration value="MVR"/>
			<xs:enumeration value="MTL"/>
			<xs:enumeration value="EUR">
				<xs:annotation>
					<xs:documentation>
                   (in/out) Euro
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MRO"/>
			<xs:enumeration value="MUR"/>
			<xs:enumeration value="MXN"/>
			<xs:enumeration value="MXV"/>
			<xs:enumeration value="MDL"/>
			<xs:enumeration value="MNT"/>
			<xs:enumeration value="XCD"/>
			<xs:enumeration value="MZM"/>
			<xs:enumeration value="MMK"/>
			<xs:enumeration value="ZAR"/>
			<xs:enumeration value="NAD"/>
			<xs:enumeration value="NPR"/>
			<xs:enumeration value="ANG"/>
			<xs:enumeration value="XPF"/>
			<xs:enumeration value="NZD"/>
			<xs:enumeration value="NIO"/>
			<xs:enumeration value="NGN"/>
			<xs:enumeration value="NOK"/>
			<xs:enumeration value="OMR"/>
			<xs:enumeration value="PKR"/>
			<xs:enumeration value="PAB"/>
			<xs:enumeration value="PGK"/>
			<xs:enumeration value="PYG"/>
			<xs:enumeration value="PEN"/>
			<xs:enumeration value="PHP"/>
			<xs:enumeration value="PLN"/>
			<xs:enumeration value="USD">
				<xs:annotation>
					<xs:documentation>
                   (in/out) US Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QAR"/>
			<xs:enumeration value="ROL"/>
			<xs:enumeration value="RUB"/>
			<xs:enumeration value="RUR"/>
			<xs:enumeration value="RWF"/>
			<xs:enumeration value="SHP"/>
			<xs:enumeration value="WST"/>
			<xs:enumeration value="STD"/>
			<xs:enumeration value="SAR"/>
			<xs:enumeration value="SCR"/>
			<xs:enumeration value="SLL"/>
			<xs:enumeration value="SGD">
				<xs:annotation>
					<xs:documentation>
                   (in/out) Singapore Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SKK"/>
			<xs:enumeration value="SIT"/>
			<xs:enumeration value="SBD"/>
			<xs:enumeration value="SOS"/>
			<xs:enumeration value="LKR"/>
			<xs:enumeration value="SDD"/>
			<xs:enumeration value="SRG"/>
			<xs:enumeration value="SZL"/>
			<xs:enumeration value="SEK"/>
			<xs:enumeration value="SYP"/>
			<xs:enumeration value="TWD">
				<xs:annotation>
					<xs:documentation>
                   (in/out) New Taiwan Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TJS"/>
			<xs:enumeration value="TZS"/>
			<xs:enumeration value="THB"/>
			<xs:enumeration value="XOF"/>
			<xs:enumeration value="TOP"/>
			<xs:enumeration value="TTD"/>
			<xs:enumeration value="TND"/>
			<xs:enumeration value="TRL"/>
			<xs:enumeration value="TMM"/>
			<xs:enumeration value="UGX"/>
			<xs:enumeration value="UAH"/>
			<xs:enumeration value="AED"/>
			<xs:enumeration value="GBP">
				<xs:annotation>
					<xs:documentation>
                   (in/out) Pound Sterling
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USS"/>
			<xs:enumeration value="USN"/>
			<xs:enumeration value="UYU"/>
			<xs:enumeration value="UZS"/>
			<xs:enumeration value="VUV"/>
			<xs:enumeration value="VEB"/>
			<xs:enumeration value="VND"/>
			<xs:enumeration value="MAD"/>
			<xs:enumeration value="YER"/>
			<xs:enumeration value="YUM"/>
			<xs:enumeration value="ZMK"/>
			<xs:enumeration value="ZWD"/>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DateSpecifierCodeList.xsd #####

-->
	<xs:simpleType name="DateSpecifierCodeType">
		<xs:annotation>
			<xs:documentation>
           AccountStateCodeType - Type declaration to be used by other schema.
           Specifies a subcomponent of a date. Useful in cases when it is
           helpful to allow separate text fields or drop-down lists to be
           rendered for each date subcomponent. (For example, when calling
           GetProductSearchResults, you use date specifiers to indicate the
           date subcomponent that the attribute represents.)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="M">
				<xs:annotation>
					<xs:documentation>
                (in/out) Represents the month subcomponent of a date.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="D">
				<xs:annotation>
					<xs:documentation> 
                (in/out) Represents the day subcomponent of a date.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Y">
				<xs:annotation>
					<xs:documentation> 
                (in/out) Represents the year subcomponent of a date.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DetailLevelCodeList.xsd #####

-->
	<xs:simpleType name="DetailLevelCodeType">
		<xs:annotation>
			<xs:documentation>
DetailLevelCodeType - Type declaration to be used by other schema.
Specifies standard subsets of data to return for each result
within the set of results in the response payload. If no 
detail level is specified, a base set of data is returned.
The base set of data varies per call.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ReturnAll">
				<xs:annotation>
					<xs:documentation>
						  (in) Return all available data
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemReturnDescription">
				<xs:annotation>
					<xs:documentation>
						  (in) Return Description, plus the 
						  ListingDesigner node if applicable 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemReturnAttributes">
				<xs:annotation>
					<xs:documentation>
						  (in) Return Item Specifics and Pre-filled Item Information,
						  if applicable
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReturnSummary">
				<xs:annotation>
					<xs:documentation>
						  (in) Return the summary data
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReturnHeaders">
				<xs:annotation>
					<xs:documentation>
						  (in) Return message headers 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReturnMessages">
				<xs:annotation>
					<xs:documentation>
						  (in) Return full message information.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DepositTypeCodeList.xsd #####

-->
	<xs:simpleType name="DepositTypeCodeType">
		<xs:annotation>
			<xs:documentation>
DepositTypeCodeType - Type declaration to be used by other schema.
For vehicles listed through the US eBay Motors site, DepositType 
indicates how the buyer should pay the deposit amount. It is 
used in conjunction with a buyer payment method (BuyerPaymentMethodCodeType).
If the item listed is not a US eBay Motors item, the DepositType value 
is returned as "None".
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
					  (in/out) No deposit needed
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OtherMethod">
				<xs:annotation>
					<xs:documentation>
					  (in/out) Pay the deposit using one of the specified
					  PaymentMethods (BuyerPaymentMethodCodeType)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FastDeposit">
				<xs:annotation>
					<xs:documentation> 
					   (in/out) No longer in use (defaults to OtherMethod)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/EndReasonCodeList.xsd #####

-->
	<xs:simpleType name="EndReasonCodeType">
		<xs:annotation>
			<xs:documentation>
           ReasonCodeType - Type declaration to be used by other schema.
           Specifies the seller's reason for ending an item listing early. This
           is required if the seller ended the listing early and the item did
           not successfully sell.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="LostOrBroken">
				<xs:annotation>
					<xs:documentation>
                (in) The item was lost or broken.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NotAvailable">
				<xs:annotation>
					<xs:documentation>
                (in) The item is no longer available for sale.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Incorrect">
				<xs:annotation>
					<xs:documentation>
                (in) The minimum bid or reserve price is incorrect.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OtherListingError">
				<xs:annotation>
					<xs:documentation>
                (in) The listing contained an error (other than minimum bid or reserve
                price).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/EscrowCodeList.xsd #####

-->
	<xs:simpleType name="EscrowCodeType">
		<xs:annotation>
			<xs:documentation>
EscrowCodeType - Type declaration to be used by other schema. Indicates whether
escrow is used for a listing.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ByBuyer">
				<xs:annotation>
					<xs:documentation>
						    (in/out) By Buyer
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BySeller">
				<xs:annotation>
					<xs:documentation>
						   (in/out) By Seller
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						   (in/out) None
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ExternalProductCodeList.xsd #####

-->
	<xs:simpleType name="ExternalProductCodeType">
		<xs:annotation>
			<xs:documentation>
Only applicable for AddItem and GetSearchResults requests that include the ExternalProductID property.
Indicates the type of ID being used to identify a stock product.
Used when listing or searching for an item with Pre-filled Item Information in certain categories. 
See the Developer's Guide for applicable categories.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ISBN">
				<xs:annotation>
					<xs:documentation>
            (in) The value passed in ExternalProductID. Value is an ISBN value.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPC">
				<xs:annotation>
					<xs:documentation>
            (in) The value passed in ExternalProductID. Value is a UPC value.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ProductID">
				<xs:annotation>
					<xs:documentation>
            (in) The value passed in ExternalProductID. Value is 
            an eBay catalog product ID. Not applicable with GetSearchResults.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/FeedbackRatingStarCodeList.xsd #####

-->
	<xs:simpleType name="FeedbackRatingStarCodeType">
		<xs:annotation>
			<xs:documentation>
           FeedbackRatingStarCodeType - Type declaration to be used by other
           schema. The color of a feedback score star visually denotes the
           range in which the member's summary feedback score falls. The score
           is the net positive feedback minus the net negative feedback left
           for the member.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
                (out) No graphic displayed, feedback score 0-9.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Yellow">
				<xs:annotation>
					<xs:documentation>
                (out) Yellow Star, feedback score 10-49.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Blue">
				<xs:annotation>
					<xs:documentation>
                (out) Blue Star, feedback score 50-99.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Turquoise">
				<xs:annotation>
					<xs:documentation>
                (out) Turquoise Star, feedback score 100-499.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Purple">
				<xs:annotation>
					<xs:documentation>
                (out) Purple Star, feedback score 500-999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Red">
				<xs:annotation>
					<xs:documentation>
                (out) Red Star, feedback score 1,000-4,999
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Green">
				<xs:annotation>
					<xs:documentation>
                (out) Green Star, feedback score 5,000-9,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="YellowShooting">
				<xs:annotation>
					<xs:documentation>
                (out) Yellow Shooting Star, feedback score 10,000-24,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TurquoiseShooting">
				<xs:annotation>
					<xs:documentation>
                (out) Turquoise Shooting Star, feedback score 25,000-49,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PurpleShooting">
				<xs:annotation>
					<xs:documentation>
                (out) Purple Shooting Star, feedback score 50,000-99,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RedShooting">
				<xs:annotation>
					<xs:documentation>
                (out) Red Shooting Star, feedback score 100,000 and above.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/GalleryTypeCodeList.xsd #####

-->
	<xs:simpleType name="GalleryTypeCodeType">
		<xs:annotation>
			<xs:documentation>
           GalleryTypeCodeType - Type declaration to be used by other schema.
           Indicates whether the item is listed in the Gallery and, if so
           whether it is also featured in the Gallery.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
                (in/out) Item is listed and featured in the Gallery.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Featured">
				<xs:annotation>
					<xs:documentation>
                (in/out) Item is listed and featured in the Gallery.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Gallery">
				<xs:annotation>
					<xs:documentation>
                (in/out) Item is listed in the Gallery.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/GeneralPaymentMethodCodeList.xsd #####

-->
	<xs:simpleType name="GeneralPaymentMethodCodeType">
		<xs:annotation>
			<xs:documentation>
           GeneralPaymentMethodCodeType - Type declaration to be used by other
           schema. This code identifies the general types of payment means,
           e.g., used by payment service provider applications.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>
                (out) Custom Code.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Echeck">
				<xs:annotation>
					<xs:documentation>
                (in/out) Electronic check.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ACH">
				<xs:annotation>
					<xs:documentation>
                (in/out) ACH.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Creditcard">
				<xs:annotation>
					<xs:documentation>
                (in/out) Credit-card.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalBalance">
				<xs:annotation>
					<xs:documentation>
                (in/out) Pay balance.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/GetAllBiddersModeCodeList.xsd #####

-->
	<xs:simpleType name="GetAllBiddersModeCodeType">
		<xs:annotation>
			<xs:documentation>
				Specifies which bidder information to return.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ViewAll">
				<xs:annotation>
					<xs:documentation>
						(in) Returns all bidders for an ended or still-active 
						listing. It may be used by any user.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EndedListing">
				<xs:annotation>
					<xs:documentation>
						(in) Returns all non-winning only bidders for ended 
						listings only. It may be used only by a seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SecondChanceEligibleEndedListing">
				<xs:annotation>
					<xs:documentation>
						(in) Returns all non-winning bidders for an ended listing 
						who have not yet received a Second Chance Offer and noted 
						interest in receiving a Second Chance Offer. It may be used 
						only by a seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/GiftServicesCodeList.xsd #####

-->
	<xs:simpleType name="GiftServicesCodeType">
		<xs:annotation>
			<xs:documentation>
GiftServicesCodeType - Type declaration to be used by other schema.
Each code identifies an optional service that the seller is offering if the buyer
chooses to purchase the item as a gift. 
Not applicable for eBay Store Inventory listings. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="GiftExpressShipping">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller is offering to ship the item via 
						an express shipping method as explained in the item description 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GiftShipToRecipient">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller is offering to ship to the gift recipient 
						(instead of to the buyer) after payment clears
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GiftWrap">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller is offering to wrap the item (and 
						optionally include a card) as explained in the item 
						description
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/HitCounterCodeList.xsd #####

-->
	<xs:simpleType name="HitCounterCodeType">
		<xs:annotation>
			<xs:documentation>
HitCounterCodeType - Type declaration to be used by other schema.
Indicates whether a hit counter is used for the item's listing page
and, if so, what type.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NoHitCounter">
				<xs:annotation>
					<xs:documentation>(in/out) No hit counter</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HonestyStyle">
				<xs:annotation>
					<xs:documentation>
					   (in/out) Honesty Style Hit Counter
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GreenLED">
				<xs:annotation>
					<xs:documentation> 
					   (in/out) Green LED counter																	</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Hidden">
				<xs:annotation>
					<xs:documentation>
					     (in/out) Hidden counter (US only)
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ItemSortTypeCodeList.xsd #####

-->
	<xs:simpleType name="ItemSortTypeCodeType">
		<xs:annotation>
			<xs:documentation>
           ItemSortTypeCodeType- Type declaration to be used by other schema.
           Indicates fields and direction (ascending/descending) on which to
           sort returned item listing data.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ItemID">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by Item ID (ascending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Price">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by price (ascending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StartPrice">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by start price (ascending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Title">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by item title (ascending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BidCount">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by number of bids on the item (ascending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Quantity">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StartTime">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by listing start time (ascending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EndTime">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by listing end time (ascending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerUserID">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TimeLeft">
				<xs:annotation>
					<xs:documentation>
				(in) Sort by the time left for the item's listing,
					in ascending order: active items, good-til-cancelled items,
					and completed items.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="ItemIDDescending">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by Item ID (descending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PriceDescending">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by price (descending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StartPriceDescending">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by start price (descending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TitleDescending">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by item title (descending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BidCountDescending">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by number of bids on the item (descending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QuantityDescending">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StartTimeDescending">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by listing start time (descending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EndTimeDescending">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by listing end time (descending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerUserIDDescending">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TimeLeftDescending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by time left on the listing, in descending
					order: completed items, good-til-cancelled items,
					and active items.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ItemLocationCodeList.xsd #####

-->
	<xs:simpleType name="ItemLocationCodeType">
		<xs:annotation>
			<xs:documentation>
           ItemLocationCodeType - Type declaration to be used by other schema.
           Use with Country Code argument in GetSearchResults.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ItemAvailableIn">
				<xs:annotation>
					<xs:documentation>
                Items available to the specified country.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemLocatedIn">
				<xs:annotation>
					<xs:documentation> 
                Items located in the specified country.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/InsuranceOptionCodeList.xsd #####

-->
	<xs:simpleType name="InsuranceOptionCodeType">
		<xs:annotation>
			<xs:documentation>
				The seller's requirements regarding whether the buyer pays
				for shipping insurance.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Optional">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller offers the buyer the choice of paying
						for shipping insurance or not.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Required">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller requires that the buyer pay for
						shipping insurance.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NotOffered">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller does not offer shipping insurance to the buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IncludedInShippingHandling">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller is not charging separately for shipping
						insurance costs; any insurance is already included in the
						base shipping cost.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ItemTypeFilterCodeList.xsd #####

-->
	<xs:simpleType name="ItemTypeFilterCodeType">
		<xs:annotation>
			<xs:documentation>
           ItemTypeFilterCodeType - Type declaration to be used by other
           schema. This code identifies the ItemTypeFilters (e.g., for
           GetSearchResults requests) used to filter items returned by the type
           of listing. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AuctionItemsOnly">
				<xs:annotation>
					<xs:documentation>
                (in) Return auction items only.
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPricedItem">
				<xs:annotation>
					<xs:documentation> 
                (in) Return fixed price items (both Fixed Price and Buy It Now) only.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AllItems">
				<xs:annotation>
					<xs:documentation> 
                (in) Return all items (auction and fixed-price).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ListingDurationCodeList.xsd #####

-->
	<xs:simpleType name="ListingDurationCodeType">
		<xs:annotation>
			<xs:documentation>
           ListingDurationCodeType - Type declaration to be used by other
           schema. Each code specifies a number of days that a listing can be
           active (i.e., available for bidding/buying). The validity of a code
           depends on the listing type.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Days_1">
				<xs:annotation>
					<xs:documentation>
                (in/out) 1 Day - A seller must have a positive feedback rating of 10 or
                more or must be ID Verified to use the 1-day listing duration on the US
                site. Applicable for Chinese and Dutch auction formats (including Real
                Estate) and Personal Offer (Second Chance Offer)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_3">
				<xs:annotation>
					<xs:documentation>
                (in/out) 3 Days - Applicable to Chinese, Dutch, and Live auction formats
                (including Real Estate); Personal Offer (Second Chance Offer); and Basic
                Fixed-Price format
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_5">
				<xs:annotation>
					<xs:documentation>
                (in/out) 5 Days - Applicable to Chinese, Dutch, and Live auction formats
                (including Real Estate); Personal Offer (Second Chance Offer); and Basic
                Fixed-Price format.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_7">
				<xs:annotation>
					<xs:documentation>
                (in/out) 7 Days - Applicable to Chinese, Dutch, and Live auction formats
                (including Real Estate); Personal Offer (Second Chance Offer); and Basic
                Fixed-Price format.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_10">
				<xs:annotation>
					<xs:documentation>
                (in/out) 10 Days - Subject to an additional listing upgrade fee. Applicable
                to Chinese, Dutch, and Live auction formats (including Real Estate) and
                Basic Fixed-Price format.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_30">
				<xs:annotation>
					<xs:documentation>
                (in/out) 30 Days - Applicable to Real Estate Ad format and Store Inventory
                format.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_60">
				<xs:annotation>
					<xs:documentation>
                (in/out) 60 Days - Applicable to Store Inventory format.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_90">
				<xs:annotation>
					<xs:documentation>
                (in/out) 90 Days - Applicable to Real Estate Ad format and Store Inventory
                format.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_120">
				<xs:annotation>
					<xs:documentation>
                (in/out) 120 Days - Applicable to Store Inventory format.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GTC">
				<xs:annotation>
					<xs:documentation>
                (in/out) GTC  - Relist automatically every 30 days until all the items sell
                or the seller ends the listing. Applicable to Store Inventory format.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ListingTypeCodeList.xsd #####

-->
	<xs:simpleType name="ListingTypeCodeType">
		<xs:annotation>
			<xs:documentation>
           ListingTypeCodeType - Type declaration to be used by other schema.
           This includes codes indicating the type of auction for the listed
           item.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unknown">
				<xs:annotation>
					<xs:documentation>
                (out) Unknown auction type.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Chinese">
				<xs:annotation>
					<xs:documentation>
                (in/out) Chinese auction (single item, competitive bidding, automatically
                listed in the seller's Store if the seller is a Store owner).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Dutch">
				<xs:annotation>
					<xs:documentation>
                (in/out) Dutch auction (multiple items, competitive bidding, automatically
                listed in the seller's Store if the seller is a Store owner).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Live">
				<xs:annotation>
					<xs:documentation>
                (out) Live Auctions-type auction (live, on-site auctions that include
                non-eBay bidders).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AdType">
				<xs:annotation>
					<xs:documentation>
                (in/out) Ad type auction (real estate advertisement listings to solicit
                inquiries, no bidding or purchases).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresFixedPrice">
				<xs:annotation>
					<xs:documentation>
                (in/out) eBay Stores Inventory format (one or multiple items sold at a
                fixed price, no bidding for purchase, listed in the seller's Store).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PersonalOffer">
				<xs:annotation>
					<xs:documentation>
                (out) Personal Offer auction (special second chance offer listing available
                only to the recipient the seller chooses to extend the offer to).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceItem">
				<xs:annotation>
					<xs:documentation>
                (in/out) Fixed Price format (one or multiple items sold at a fixed price,
                no bidding for purchase, not listed in an eBay Store).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ListingEnhancementsCodeList.xsd #####

-->
	<xs:simpleType name="ListingEnhancementsCodeType">
		<xs:annotation>
			<xs:documentation>
           ListingEnhancementsCodeType - Type declaration to be used by other
           schema. Indicates optional featuring properties of an item.
           Featuring properties make a listing stand out in a search or listing
           page, or let the item be featured on the eBay home page.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
		<xs:enumeration value="Border">
				<xs:annotation>
					<xs:documentation>
                (in/out) Indicates whether an item is displayed with a border that goes
                around the item (e.g., for category-based search result page or Store
                search that brings up multiple items) to differentiate it from other items
                in the list.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BoldTitle">
				<xs:annotation>
					<xs:documentation>
                (in/out) Listing's title appears in bold in lists.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Featured">
				<xs:annotation>
					<xs:documentation>
                (in/out) Indicates whether it is a featured item (Featured Plus! on the
                eBay site).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Highlight">
				<xs:annotation>
					<xs:documentation>
                (in/out) Listing is highlighted in a different color in lists.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HomePageFeatured">
				<xs:annotation>
					<xs:documentation>
                (in/out) Listing is featured on the eBay home page.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ProPackBundle">
				<xs:annotation>
					<xs:documentation>
                (in/out) Listing is using ProPackBundle include Bold, Border, Featured and Highlight.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:annotation>
				<xs:documentation>eBay Listing Enhancements Codes</xs:documentation>
			</xs:annotation>
	<xs:annotation>
				<xs:documentation>Code List Agency - eBay, Inc.</xs:documentation>
			</xs:annotation>
	<xs:annotation>
				<xs:documentation>Code List Version - 1.0</xs:documentation>
			</xs:annotation>
<!--  

##### from file eBLBaseComponents/MessageTypeCodeList.xsd #####

-->
	<xs:simpleType name="MessageTypeCodeType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="AskSellerQuestion">
				<xs:annotation>
					<xs:documentation>
						not available
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ResponseToASQQuestion">
				<xs:annotation>
					<xs:documentation>
						Response message
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ContactEbayMember">
				<xs:annotation>
					<xs:documentation>
						not available
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						not available
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>	
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/MessageStatusTypeCodeList.xsd #####

-->
	<xs:simpleType name="MessageStatusTypeCodeType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="Answered">
				<xs:annotation>
					<xs:documentation>
						The question has been answered at least once.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>	
			<xs:enumeration value="Unanswered">
				<xs:annotation>
					<xs:documentation>
						The question has not yet been answered.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Not available.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/MerchandizingPrefCodeList.xsd #####

-->
	<xs:simpleType name="MerchandizingPrefCodeType">
		<xs:annotation>
			<xs:documentation>
           MerchandizingPrefCodeType - Type declaration to be used by other
           schema. Indicates whether the seller has opted to participate in
           item cross-promotion through the Merchandising Manager feature. This
           option is set on the user's My eBay page and determines whether the
           seller's other items are cross-promoted with items from the seller
           that are listed or sold.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="OptIn">
				<xs:annotation>
					<xs:documentation>
                (in/out) Seller allows item cross-promotion.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OptOut">
				<xs:annotation>
					<xs:documentation>
                (in/out) Seller does not allow item cross-promotion.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/MerchDisplayCodeList.xsd #####

-->
	<xs:simpleType name="MerchDisplayCodeType">
		<xs:annotation>
			<xs:documentation>
			Specifies whether an eBay Stores seller prefers to promote items with a
			cross-promotion widget that is customized with the store theme or uses
			the default eBay theme. This option is the same as the one set on the
			seller's Customize Cross-Promotion Display page.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="DefaultTheme">
				<xs:annotation>
					<xs:documentation>
               		 (in/out) Uses the default eBay theme for cross-promotion widgets. 									</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoreTheme">
				<xs:annotation>
					<xs:documentation>
					(in/out) Uses the store theme for cross-promotion widgets.										</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                		(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ModifyCodeList.xsd #####

-->
	<xs:simpleType name="ModifyCodeType">
		<xs:annotation>
			<xs:documentation>
           ModifyCodeType - Type declaration to be used by other schema. This
           code identifies the types of modifications that can be made to an object.
           For example, use this when changing or removing field values when
           re-listing an item.  
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Dropped">
				<xs:annotation>
					<xs:documentation>
                (in) Indicates that the value of the specified field should be removed.
				Do not use to remove a property from a listing with ReviseItem
				or RelistItem. See the Developer's Guide for details.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Modify">
				<xs:annotation>
					<xs:documentation>
                (in) Indicates that the value of the specified field should be modified.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ModifyActionCodeList.xsd #####

-->
	<xs:simpleType name="ModifyActionCodeType">
		<xs:annotation>
			<xs:documentation>
          Specifies what action to take with the entry that is being modified.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Add">
				<xs:annotation>
					<xs:documentation>
						  (in) Add the entry
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Delete">
				<xs:annotation>
					<xs:documentation>
						  (in) Delete the entry
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
				<xs:enumeration value="Update">
				<xs:annotation>
					<xs:documentation>
						  (in) Update the entry
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/NotificationEventTypeCodeList.xsd #####

-->
	<xs:simpleType name="NotificationEventTypeCodeType">
		<xs:annotation>
			<xs:documentation>
			    Defines all notification events that can be used.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
					  (out)	Not a notification event.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OutBid">
				<xs:annotation>
					<xs:documentation>
					  (in/out)	Sent to a user when 
					  another buyer has placed a higher maximum bid and the user 
					  is no longer the current high bidder.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EndOfAuction">
				<xs:annotation>
					<xs:documentation>
					  (in/out)	Sent when
					  an auction ends. An auction ends either when its duration
					  expires, the buyer purchases an item with Buy It Now,
					  or the auction is canceled. Applies to both Chinese and
					  Dutch auctions.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AuctionCheckoutComplete">
				<xs:annotation>
					<xs:documentation>
					  (in/out)	Sent to a seller
					   when a buyer completes the checkout process for an item.
					   Occurs even when a seller has disabled checkout and
					   the buyer uses eBayPayments.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceEndOfTransaction">
				<xs:annotation>
					<xs:documentation>
					  (in/out)	Sent to a seller when a fixed-price item is sold
					  and the buyer completes the checkout process. Not sent when
					  a fixed-price item's duration expires without purchase.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CheckoutBuyerRequestsTotal">
				<xs:annotation>
					<xs:documentation>
					  (in/out) Sent to a seller each time a buyer requests
					  a total price. Occurs before checkout is complete.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeedbackForSeller">
				<xs:annotation>
					<xs:documentation>
					  (in/out) Sent to a partner when a buyer leaves a
					  feedback entry for a seller or when the seller responds.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceTransaction">
				<xs:annotation>
					<xs:documentation>
					  (in/out) Sent to a user when a listing for a fixed price
					  item ends. A fixed price listing ends when a buyer starts
					  to move through checkout or purchases the item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SecondChanceOffer">
				<xs:annotation>
					<xs:documentation>
					  (in/out) Sent to a user when a listing ends but for some reason
					  the transaction does not close. The seller can offer the item
					  to previous bidders a second time.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AskSellerQuestion">
				<xs:annotation>
					<xs:documentation>
					  (in/out) Sent to a seller when a question is posted about one
					  of the seller's active listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemListed">
				<xs:annotation>
					<xs:documentation>
					  (in/out) Sent to an eBay partner on behalf of a seller
					  when a seller has listed an item. Sent for each item
					  the seller lists.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerResponseDispute">
				<xs:annotation>
					<xs:documentation>
					  (in/out) Sent to an eBay partner on behalf of a seller
					   when a buyer responds to a dispute the seller has opened.
					   Sent for each response the buyer makes.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BestOffer">
				<xs:annotation>
					<xs:documentation>
						(in/out) Sent to a seller when a bidder makes a best offer on 
						an item opted into the Best Offer feature by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					  (out)	Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/OrderStatusCodeList.xsd #####

-->
	<xs:simpleType name="OrderStatusCodeType">
		<xs:annotation>
			<xs:documentation>
				The set of valid states for an order.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Active">
				<xs:annotation>
					<xs:documentation>
						(out) Active order status.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Inactive">
				<xs:annotation>
					<xs:documentation>
						(out) Inactive order status.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Completed">
				<xs:annotation>
					<xs:documentation>
						(out) Completed order status.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Cancelled">
				<xs:annotation>
					<xs:documentation>
						(out) Cancelled order status.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/OrderRoleCodeList.xsd #####

-->
	<xs:simpleType name="OrderRoleCodeType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="Buyer">
			</xs:enumeration>
			<xs:enumeration value="Seller">
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PaymentStatusCodeList.xsd #####

-->
	<xs:simpleType name="PaymentStatusCodeType">
		<xs:annotation>
			<xs:documentation>
			Indicates the success or failure of the buyer's online 
			payment for a transaction.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NoPaymentFailure">
				<xs:annotation>
					<xs:documentation>
						    (out) No payment failure.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerECheckBounced">
				<xs:annotation>
					<xs:documentation>
						    (out) The buyer's eCheck bounced.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerCreditCardFailed">
				<xs:annotation>
					<xs:documentation>
						   (out) The buyer's credit card failed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerFailedPaymentReportedBySeller">
				<xs:annotation>
					<xs:documentation>
						  (out) The seller reports that the buyer's payment
						  failed. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalPaymentInProcess">
				<xs:annotation>
					<xs:documentation>
						  (out) The payment from buyer to seller is in PayPal process, 
                           but has not yet been completed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PhotoDisplayCodeList.xsd #####

-->
	<xs:simpleType name="PhotoDisplayCodeType">
		<xs:annotation>
			<xs:documentation>
PhotoDisplayCodeType - Type declaration to be used by other schema.
These are types of display for photos used for PhotoHosting slide show.
Applicable only if the item's images are hosted on eBay Picture Services
(EPS).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						      (in/out) No special eBay Picture Services features
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SlideShow">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Slideshow of multiple pictures
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SuperSize">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Super-size format picture
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PicturePack">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Picture Pack 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SiteHostedPictureShow">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Picture Show for Site Hosted pictures
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VendorHostedPictureShow">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Picture show for vendor hosted pictures
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="SuperSizePictureShow">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Combined selectionn of Picture show and supersize  for Site Hosted
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ProductUseCaseCodeList.xsd #####

-->
	<xs:simpleType name="ProductUseCaseCodeType">
		<xs:annotation>
			<xs:documentation>
Specifies the context in which the product selling page is being called, 
which will imply certain validation rules. Use this code list to make sure 
you retrieve the appropriate version of product information and characteristic 
meta-data when you are listing an item with Pre-filled Item Information.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AddItem">
				<xs:annotation>
					<xs:documentation>
            (in) Use this code when calling GetProductSellingPages 
            before adding an item. This retrieves the latest product ID and the corresponding characteristic meta-data. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReviseItem">
				<xs:annotation>
					<xs:documentation>
            (in) Use this code when calling GetProductSellingPages 
            before revising an item that already contains product information. 
            If the product ID or data has changed, the original 
            product ID that you passed in and the data associated with that original version of the 
            product is returned. This is useful because the original Pre-filled Item Information 
            is used when you call ReviseItem.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RelistItem">
				<xs:annotation>
					<xs:documentation>
            (in) Use this code when calling GetProductSellingPages 
            before relisting an item that already contains product information. 
            This retrieves the latest product ID and the 
            corresponding characteristic meta-data (same data as AddItem). 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PromotionItemPriceTypeCodeList.xsd #####

-->
	<xs:simpleType name="PromotionItemPriceTypeCodeType">
		<xs:annotation>
			<xs:documentation>
           PromotionItemPriceTypeCodeType - Type declaration to be used by
           other schema. Indicates the type of offer that can be made for a
           cross-promoted item. Note that for a Chinese listing with a
           still-active Buy It Now option, either a Bid (Auction) or a Buy It
           Now type offer may be made.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AuctionPrice">
				<xs:annotation>
					<xs:documentation>
                (out) Bid offer in a competitive-bidding listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowPrice">
				<xs:annotation>
					<xs:documentation>
                (out) Buy It Now offer in a fixed-price or Buy It Now listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PromotionItemSelectionCodeList.xsd #####

-->
	<xs:simpleType name="PromotionItemSelectionCodeType">
		<xs:annotation>
			<xs:documentation>
           PromotionItemSelectionCodeType - Type declaration to be used by
           other schema. Indicates how the cross-promoted item was selected for
           association with the referring item. If the seller defined an
           item-to-item cross-promotion rule and the item was selected because
           of that rule, then "Manual" is returned. If the seller defined some
           other rule and the item was selected because of that rule (or the
           seller defined no rules that could be applied), then "Automatic" is
           returned.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Manual">
				<xs:annotation>
					<xs:documentation>
                (out) Manual selection.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Automatic">
				<xs:annotation>
					<xs:documentation>
                (out) Automatic selection.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PromotionMethodCodeList.xsd #####

-->
	<xs:simpleType name="PromotionMethodCodeType">
		<xs:annotation>
			<xs:documentation>
			  Indicates the type of cross-promotion used.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="CrossSell">
				<xs:annotation>
					<xs:documentation>
                (in/out) A cross-sell. The seller presents items that are
				related to or can be used with the item the buyer is bidding on or has
				purchased.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UpSell">
				<xs:annotation>
					<xs:documentation>
                (in/out) An upsell. The seller presents items that are higher 
				quality or more expensive than the item the buyer is bidding 
				on or has purchased.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (in/out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PromotionSchemeCodeList.xsd #####

-->
	<xs:simpleType name="PromotionSchemeCodeType">
		<xs:annotation>
			<xs:documentation>
           Identifies the rule scheme used to define a
           cross-promotion rule. To define a rule scheme,
		   you must be a seller and the owner of an eBay Store.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ItemToItem">
				<xs:annotation>
					<xs:documentation>
                (in/out) An item-to-item promotion scheme.
				The seller specifies individual items in the store that are
				displayed when a buyer views, bids on, or
				purchases a store item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemToStoreCat">
				<xs:annotation>
					<xs:documentation>
                (in/out) An item-to-store-category scheme. The seller
				specifies a category in the store from 
				which items are displayed when a buyer views, bids on,
				or purchases an individual item in the store.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoreToStoreCat">
				<xs:annotation>
					<xs:documentation>
                (in/out) A store-category-to-store-category scheme.
				The seller specifies a category in the store as the 
				referring category. When any item from that category is
				displayed, items from the promoted category are also
				displayed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PurchasePurposeTypeCodeList.xsd #####

-->
	<xs:simpleType name="PurchasePurposeTypeCodeType">
		<xs:annotation>
			<xs:documentation>
PurchasePurposeTypeCodeType - Type declaration to be used by other 
schema. This code identifies the purpose of a purchase (e.g.,  
by a PayPal application).                
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>Custom Code</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyNowItem">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShoppingCart">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AuctionItem">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GiftCertificates">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Subscription">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Donation">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayBilling">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/QuestionTypeCodeList.xsd #####

-->
	<xs:simpleType name="QuestionTypeCodeType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="General">
			  <xs:annotation>
			  	<xs:documentation>
			  		General questions about the item.
			  	</xs:documentation>
			  </xs:annotation>		
			</xs:enumeration>
			<xs:enumeration value="Shipping">
				<xs:annotation>
					<xs:documentation>
						 Questions related to the shipping of the item.
					</xs:documentation>
			  </xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Payment">
				<xs:annotation>
					<xs:documentation>
						Questions related to the payment for the item.
					</xs:documentation>
			  </xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MultipleItemShipping">
				<xs:annotation>
					<xs:documentation>
						Questions related to the shipping of this item
						bundled with other items also purchased on eBay.
					</xs:documentation>
			  </xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Not available.
					</xs:documentation>
			  </xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/RangeCodeList.xsd #####

-->
	<xs:simpleType name="RangeCodeType">
		<xs:annotation>
			<xs:documentation>
           Type declaration to be used by other schema. Indicates that the data
           represents the high or low end in a range, such as a date range,
           price range, or width range. (For example, when calling
           GetProductSearchResults, you use range codes to indicate the role of
           an attribute in a range.)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="High">
				<xs:annotation>
					<xs:documentation>
                High end of the range.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Low">
				<xs:annotation>
					<xs:documentation> 
                Low end of the range.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SearchFlagsCodeList.xsd #####

-->
	<xs:simpleType name="SearchFlagsCodeType">
		<xs:annotation>
			<xs:documentation>
           SearchFlagsCodeType - Search flags for GetSearchResults.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Charity">
				<xs:annotation>
					<xs:documentation>
                Return only charity item listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SearchInDescription">
				<xs:annotation>
					<xs:documentation>
                Include the description field of item listings in keyword search. Item
                listings returned are those where specified search keywords appear in
                the description, as well as the title and sub-title.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalBuyerPaymentOption">
				<xs:annotation>
					<xs:documentation>
                Return only item listings where PayPal is a payment method offered by the
                seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NowAndNew">
				<xs:annotation>
					<xs:documentation>
               (in) Return only items that have been listed with Now and New. Applicable for 
               certain sites only. See the Developer's Guide.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SearchResultValuesCodeList.xsd #####

-->
	<xs:simpleType name="SearchResultValuesCodeType">
		<xs:annotation>
			<xs:documentation>
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Escrow">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="New">
				<xs:annotation>
					<xs:documentation>
            (out) Indicates items listed one day or less earlier than the current query. 
            If the listing is no more than one day old, New returns a value of true. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CharityListing">
				<xs:annotation>
					<xs:documentation>
            (out) Indicates that the seller has chosen to use eBay Giving Works to donate 
            a percentage of the item purchase price to a selected nonprofit organization. 
            Not applicable for eBay Motors, international sites, and Real Estate and Tickets listings. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Picture">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Gift">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SearchSortOrderCodeList.xsd #####

-->
	<xs:simpleType name="SearchSortOrderCodeType">
		<xs:annotation>
			<xs:documentation>
           SearchSortOrderCodeType - Type declaration to be used by other
           schema. Determines the order that item listings appear in the
           GetSearchResult result set.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="SortByEndDate">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by item end date.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SortByStartDate">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by item start date.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SortByCurrentBid">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by current bid price.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SortByListingDate">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by listing date, descending order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SortByCurrentBidAsc">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by current bid price, ascending order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SortByCurrentBidDesc">
				<xs:annotation>
					<xs:documentation>
                (in) Sort by current bid price, descending order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SearchTypeCodeList.xsd #####

-->
	<xs:simpleType name="SearchTypeCodeType">
		<xs:annotation>
			<xs:documentation>
           SearchTypeCodeType - Type declaration to be used by other schema.
           Identifies the SearchTypes (e.g., for GetSearchResults requests)
           used to restrict items returned to: only Gallery items or gallery
           and non-Gallery items.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="All">
				<xs:annotation>
					<xs:documentation>
                (in) Return Gallery and non-Gallery item listings.
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Gallery">
				<xs:annotation>
					<xs:documentation> 
                (in) Return Gallery items only.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SecondChanceOfferDurationCodeList.xsd #####

-->
	<xs:simpleType name="SecondChanceOfferDurationCodeType">
		<xs:annotation>
			<xs:documentation>
           SecondChanceOfferDurationCodeType - Type declaration to be used by
           other schema. Specifies the number of days the second chance offer
           active. The recipient bidder must purchase the item within that time
           or the listing expires. The duration for a new second chance offer
           listing is limited to these values.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Days_1">
				<xs:annotation>
					<xs:documentation>
                (in) 1 Day.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_3">
				<xs:annotation>
					<xs:documentation>
                (in) 3 Days.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_5">
				<xs:annotation>
					<xs:documentation>
                (in) 5 Days.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_7">
				<xs:annotation>
					<xs:documentation>
                (in) 7 Days.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SellerLevelCodeList.xsd #####

-->
	<xs:simpleType name="SellerLevelCodeType">
		<xs:annotation>
			<xs:documentation>
SellerLevelCodeType - Type declaration to be used by other schema.
Indicates the user's eBay PowerSeller tier.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Bronze">
				<xs:annotation>
					<xs:documentation>
						(out) Bronze
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Silver">
				<xs:annotation>
					<xs:documentation>
						(out) Silver
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Gold">
				<xs:annotation>
					<xs:documentation>
						(out) Gold
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Platinum">
				<xs:annotation>
					<xs:documentation>
						(out) Platinum
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Titanium">
				<xs:annotation>
					<xs:documentation>
						(out) Titanium
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						(out) None
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SellerPaymentMethodCodeList.xsd #####

-->
	<xs:simpleType name="SellerPaymentMethodCodeType">
		<xs:annotation>
			<xs:documentation>
SellerPaymentMethodCodeType - Type declaration to be used by other schema.
These are payment methods that sellers can use to pay eBay fees.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NothingOnFile">
				<xs:annotation>
					<xs:documentation>
						    Used for all other payment methods (e.g., payment via PayPal) which are not specifically listed in other columns.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCard">
				<xs:annotation>
					<xs:documentation>
						    Credit Card
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebit">
				<xs:annotation>
					<xs:documentation>
						    Direct Debit
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebitPendingSignatureMandate">
				<xs:annotation>
					<xs:documentation>
						   Direct Debit, pending signature mandate
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayDirectPay">
				<xs:annotation>
					<xs:documentation>
						   eBay Direct Pay
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SeverityCodeList.xsd #####

-->
	<xs:simpleType name="SeverityCodeType">
		<xs:annotation>
			<xs:documentation>
SeverityCodeType - Type declaration to be used by other schema.
This code identifies the severity of an API error. A code indicates
whether there is an API-level error or warning that needs to be
communicated to the client.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Warning">
				<xs:annotation>
					<xs:documentation>
					   (out) Warning or informational error
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Error">
				<xs:annotation>
					<xs:documentation> 
					   (out) Application-level error										
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingOptionCodeList.xsd #####

-->
	<xs:simpleType name="ShippingOptionCodeType">
		<xs:annotation>
			<xs:documentation>
			  Where the seller is willing to ship the item.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="SiteOnly">
				<xs:annotation>
					<xs:documentation>
						(in/out) Seller will only ship to a buyer in the same country/region as the
						eBay site the item is listed on.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WorldWide">
				<xs:annotation>
					<xs:documentation>
						(in/out) Seller will ship to a buyer anywhere in the world.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SitePlusRegions">
				<xs:annotation>
					<xs:documentation>
						(in/out) Seller will ship to a buyer on the same eBay site or in one of the
						specified regions (ShippingRegionCodeType).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WillNotShip">
				<xs:annotation>
					<xs:documentation>
						(in/out) Seller will not (or cannot) ship the item to any buyer at any
						location.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingPackageCodeList.xsd #####

-->
	<xs:simpleType name="ShippingPackageCodeType">
		<xs:annotation>
			<xs:documentation>
				(in/out) The nature of the package used to ship the item(s). 
				Required for calculated shipping only. Not all package types 
				are supported by a specific shipping service (ShippingServiceCodeType).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
 						(in/out) None
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Letter">
				<xs:annotation>
					<xs:documentation>
 						(in/out) Letter
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LargeEnvelope">
				<xs:annotation>
					<xs:documentation>
 						(in/out) LargeEnvelope
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSLargePack">
				<xs:annotation>
					<xs:documentation>
 						(in/out) USPS Large Package/Oversize 1
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VeryLargePack">
				<xs:annotation>
					<xs:documentation>
 						(in/out) Very Large Package/Oversize 2
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPSLetter">
				<xs:annotation>
					<xs:documentation>
 						(in/out) UPS Letter
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSFlatRateEnvelope">
				<xs:annotation>
					<xs:documentation>
 						(in/out) USPS Flat Rate Envelope
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PackageThickEnvelope">
				<xs:annotation>
					<xs:documentation>
 						(in/out) Package/thick envelope
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
 						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingRegionCodeList.xsd #####

-->
	<xs:simpleType name="ShippingRegionCodeType">
		<xs:annotation>
			<xs:documentation>
				Regions to which the seller is willing to ship the item.
				Only applicable if the seller specifies SitePlusRegions for the shipping
				option (ShippingOptionCodeType).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Africa">
				<xs:annotation>
					<xs:documentation>
						(in/out) Africa
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Asia">
				<xs:annotation>
					<xs:documentation>
						(in/out) Asia
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Caribbean">
				<xs:annotation>
					<xs:documentation>
						(in/out) Caribbean
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Europe">
				<xs:annotation>
					<xs:documentation>
						(in/out) Europe
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LatinAmerica">
				<xs:annotation>
					<xs:documentation>
						(in/out) LatinAmerica
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MiddleEast">
				<xs:annotation>
					<xs:documentation>
						(in/out) MiddleEast
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NorthAmerica">
				<xs:annotation>
					<xs:documentation>
						(in/out) NorthAmerica
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Oceania">
				<xs:annotation>
					<xs:documentation>
						(in/out) Oceania (Pacific region other than Asia)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SouthAmerica">
				<xs:annotation>
					<xs:documentation>
						(in/out) SouthAmerica
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingServiceCodeList.xsd #####

-->
	<xs:simpleType name="ShippingServiceCodeType">
		<xs:annotation>
			<xs:documentation>
				A shipping service used to ship an item.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="UPSGround">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Ground.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPS3rdDay">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS 3rd Day.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPS2ndDay">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS 2nd Day.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPSNextDay">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Next Day.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSPriority">
				<xs:annotation>
					<xs:documentation>
						(in/out) USPS Priority.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSParcel">
				<xs:annotation>
					<xs:documentation>
						(in/out) USPS Parcel.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSMedia">
				<xs:annotation>
					<xs:documentation>
						(in/out) USPS Media.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSFirstClass">
				<xs:annotation>
					<xs:documentation>
						(in/out) USPS First Class.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShippingMethodStandard">
				<xs:annotation>
					<xs:documentation>
						(in/out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShippingMethodExpress">
				<xs:annotation>
					<xs:documentation>
						(in/out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSExpressMail">
				<xs:annotation>
					<xs:documentation>
						(in/out) USPS Express Mail.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPSNextDayAir">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Next Day Air.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPS2DayAirAM">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Next Day Air.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>
						(in/out) Other (see description).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LocalDelivery">
				<xs:annotation>
					<xs:documentation>
						(in/out) Local Delivery/Pickup.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NotSelected">
				<xs:annotation>
					<xs:documentation>
						(in/out) Not Selected.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="InternationalNotSelected">
				<xs:annotation>
					<xs:documentation>
						(in/out) International Not Selected.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StandardInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Standard International Flat Rate Shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ExpeditedInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Expedited International Flat Rate Shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSGlobalExpress">
				<xs:annotation>
					<xs:documentation>
						(in/out) USPS Global Express Mail.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSGlobalPriority">
				<xs:annotation>
					<xs:documentation>
						(in/out) USPS Global Priority Mail.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSEconomyParcel">
				<xs:annotation>
					<xs:documentation>
						(in/out) USPS Economy Parcel Post.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSEconomyLetter">
				<xs:annotation>
					<xs:documentation>
						(in/out) USPS Economy Letter Post.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSAirmailLetter">
				<xs:annotation>
					<xs:documentation>
						(in/out) USPS Airmail Letter Post.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSAirmailParcel">
				<xs:annotation>
					<xs:documentation>
						(in/out) USPS Airmail Parcel Post.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPSWorldWideExpressPlus">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Worldwide Express Plus.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPSWorldWideExpress">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Worldwide Express.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPSWorldWideExpedited">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Worldwide Expedited.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPSStandardToCanada">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Standard To Canada.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OtherInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Other International Shipping (see description).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="AT_StandardDispatch">
				<xs:annotation>
					<xs:documentation>
						(in/out) Standardversand (unversichert).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AT_InsuredDispatch">
				<xs:annotation>
					<xs:documentation>
						(in/out) Versicherter Versand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AT_Writing">
			</xs:enumeration>
			<xs:enumeration value="AT_COD">
			</xs:enumeration>
			<xs:enumeration value="AT_ExpressOrCourier">
				<xs:annotation>
					<xs:documentation>
						(in/out) Express- oder Kurierversand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AT_InsuredExpressOrCourier">
				<xs:annotation>
					<xs:documentation>
						(in/out) Versicherter Express- oder Kurierversand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AT_SpecialDispatch">
			</xs:enumeration>
			<xs:enumeration value="AT_InsuredSpecialDispatch">
			</xs:enumeration>
			<xs:enumeration value="AT_Sonstige">
				<xs:annotation>
					<xs:documentation>
						(in/out) Sonstige (Siehe Artikelbeschreibung).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="AT_UnversicherterVersandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Unversicherter Versand International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AT_VersicherterVersandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Versicherter Versand International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AT_SonstigerVersandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Sonstiger Versand International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AT_UnversicherterExpressVersandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Unversicherter Express Versand International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AT_VersicherterExpressVersandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Versicherter Express Versand International
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="AU_Regular">
				<xs:annotation>
					<xs:documentation>
						(in/out) Regular.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_Express">
				<xs:annotation>
					<xs:documentation>
						(in/out) Express.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_Registered">
				<xs:annotation>
					<xs:documentation>
						(in/out) Registered.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_Courier">
				<xs:annotation>
					<xs:documentation>
						(in/out) Courier.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_Other">
				<xs:annotation>
					<xs:documentation>
						(in/out) Other.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="AU_EMSInternationalCourierParcels">
				<xs:annotation>
					<xs:documentation>
						(in/out) EMS International Courier - Parcels.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_EMSInternationalCourierDocuments">
				<xs:annotation>
					<xs:documentation>
						(in/out) EMS International Courier - Documents.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_ExpressPostInternationalDocuments">
				<xs:annotation>
					<xs:documentation>
						(in/out) Express Post International - Documents.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_AirMailInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Air Mail.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_EconomyAirInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Economy Air.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_SeaMailInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Sea Mail.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_StandardInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Standard International Flat Rate Postage.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_ExpeditedInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Expedited International Flat Rate Postage.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AU_OtherInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Other International Postage (see description).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="BEFR_StandardDelivery">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_PriorityDelivery">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_ParcelPost">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_RegisteredMail">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_Other">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="BEFR_DePostInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) De Post.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_UPSInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_FedExInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Fedex.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_DHLInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) DHL.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_TPGPostTNTInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) TPG Post/TNT (Netherlands).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_StandardInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Frais de livraison internationale fixes.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_ExpeditedInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Frais fixes pour livraison internationale express.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_OtherInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Autres livraisons internationales (voir description).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BEFR_LaPosteInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) La Poste (France).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="BENL_StandardDelivery">
				<xs:annotation>
					<xs:documentation>
						(in/out) Standard Delivery.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_PriorityDelivery">
				<xs:annotation>
					<xs:documentation>
						(in/out) Priority Delivery
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_ParcelPost">
				<xs:annotation>
					<xs:documentation>
						(in/out) Parcel Post
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_RegisteredMail">
				<xs:annotation>
					<xs:documentation>
						(in/out) Registered Mail
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_Other">
				<xs:annotation>
					<xs:documentation>
						(in/out) Other Shipping Service.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="BENL_DePostInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) De Post.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_UPSInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_FedExInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Fedex.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_DHLInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) DHL.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_TPGPostTNTInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) TPG Post/TNT (Netherlands).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_StandardInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Standard International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_ExpeditedInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Expedited International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_OtherInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Other International Shipping Services.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BENL_LaPosteInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) La Poste (France).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>		
			<!-- Intl codes end -->
			<xs:enumeration value="CA_StandardDelivery">
				<xs:annotation>
					<xs:documentation>
						(in/out) Standard Delivery.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_ExpeditedDelivery">
			</xs:enumeration>
			<xs:enumeration value="CA_PostLettermail">
				<xs:annotation>
					<xs:documentation>
						(in/out) Canada Post Lettermail.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_PostRegularParcel">
				<xs:annotation>
					<xs:documentation>
						(in/out) Canada Post Regular Parcel.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_PostExpeditedParcel">
				<xs:annotation>
					<xs:documentation>
						(in/out) Canada Post Expedited Parcel.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_PostXpresspost">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_PostPriorityCourier">
				<xs:annotation>
					<xs:documentation>
						(in/out) Canada Post Priority Courier.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="CA_StandardInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Standard International Flat Rate Shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_ExpeditedInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Expedited International Flat Rate Shipping.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_OtherInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Other International Shipping (see description).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_PostExpeditedParcelUSA">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_PostSmallPacketsUSA">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_PostXpresspostUSA">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_PostXpresspostInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_PostInternationalParcelSurface">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_PostInternationalParcelAir">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_SmallPacketsInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Small Packets - International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CA_PurolatorInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Purolator International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="CH_StandardDispatchAPost">
				<xs:annotation>
					<xs:documentation>
						(in/out) Standardversand (A-Post/Priority).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CH_StandardDispatchBPost">
				<xs:annotation>
					<xs:documentation>
						(in/out) Standardversand (B-Post/Economy).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CH_InsuredDispatch">
				<xs:annotation>
					<xs:documentation>
						(in/out) Versicherter Versand (z.B. Assurance/Fragile).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CH_Writing">
			</xs:enumeration>
			<xs:enumeration value="CH_COD">
			</xs:enumeration>
			<xs:enumeration value="CH_ExpressOrCourier">
				<xs:annotation>
					<xs:documentation>
						(in/out) Express- oder Kurierversand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CH_InsuredExpressOrCourier">
				<xs:annotation>
					<xs:documentation>
						(in/out) Versicherter Express- oder Kurierversand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CH_SpecialDispatch">
			</xs:enumeration>
			<xs:enumeration value="CH_InsuredSpecialDispatch">
			</xs:enumeration>
			<xs:enumeration value="CH_Sonstige">
				<xs:annotation>
					<xs:documentation>
						(in/out) Sonstige (Siehe Artikelbeschreibung).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="CH_SonstigerVersandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Sonstiger Versand (Siehe Artikelbeschreibung).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CH_EconomySendungenInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) ECONOMY Sendungen.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CH_PrioritySendungenInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) PRIORITY Sendungen.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CH_UrgentSendungenInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) URGENT Sendungen.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="CN_PersonalDelivery">
			</xs:enumeration>
			<xs:enumeration value="CN_RegularPackage">
			</xs:enumeration>
			<xs:enumeration value="CN_DeliveryCompanyExpress">
			</xs:enumeration>
			<xs:enumeration value="CN_PostOfficeExpress">
			</xs:enumeration>
			<xs:enumeration value="CN_Others">
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="CN_StandardInternational">
			</xs:enumeration>
			<xs:enumeration value="CN_ExpeditedInternational">
			</xs:enumeration>
			<xs:enumeration value="CN_OtherInternational">
			</xs:enumeration>
			<xs:enumeration value="CN_CODInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CN_StandardMailingInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CN_RegularLogisticsInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CN_EMSInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CN_OthersInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="DE_StandardDispatch">
				<xs:annotation>
					<xs:documentation>
						(in/out) Unversicherter Versand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_InsuredDispatch">
				<xs:annotation>
					<xs:documentation>
						(in/out) Versicherter Versand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_Writing">
			</xs:enumeration>
			<xs:enumeration value="DE_COD">
			</xs:enumeration>
			<xs:enumeration value="DE_ExpressOrCourier">
				<xs:annotation>
					<xs:documentation>
						(in/out) Express- oder Kurierversand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_InsuredExpressOrCourier">
				<xs:annotation>
					<xs:documentation>
						(in/out) Versicherter Express- oder Kurierversand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_SpecialDispatch">
			</xs:enumeration>
			<xs:enumeration value="DE_InsuredSpecialDispatch">
			</xs:enumeration>
			<xs:enumeration value="DE_UnversicherterVersand">
				<xs:annotation>
					<xs:documentation>
						(in/out) Unversicherter Versand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_DeutschePostBrief">
				<xs:annotation>
					<xs:documentation>
						(in/out) Deutsche Post Brief.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_DHLPostpaket">
				<xs:annotation>
					<xs:documentation>
						(in/out) DHL Postpaket.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_DHLPackchen">
			</xs:enumeration>
			<xs:enumeration value="DE_DeutschePostWarensendung">
				<xs:annotation>
					<xs:documentation>
						(in/out) Deutsche Post Warensendung.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_DeutschePostBuchersendung">
			</xs:enumeration>
			<xs:enumeration value="DE_HermesPaketUnversichert">
				<xs:annotation>
					<xs:documentation>
						(in/out) Hermes Paket (unversichert).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_HermesPaketVersichert">
				<xs:annotation>
					<xs:documentation>
						(in/out) Hermes Paket (versichert).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_IloxxTransportXXL">
				<xs:annotation>
					<xs:documentation>
						(in/out) iloxx Transport XXL.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_IloxxUbernachtExpress">
			</xs:enumeration>
			<xs:enumeration value="DE_IloxxStandard">
				<xs:annotation>
					<xs:documentation>
						(in/out) iloxx Standard.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_Sonstige">
				<xs:annotation>
					<xs:documentation>
						(in/out) Sonstige (Siehe Artikelbeschreibung).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="DE_UnversicherterVersandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Unversicherter Versand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_VersicherterVersandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Versicherter Versand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_DHLPostpaketInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) DHL Postpaket International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_DHLPackchenInternational">
			</xs:enumeration>
			<xs:enumeration value="DE_SonstigerVersandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Sonstiger Versand (Siehe Artikelbeschreibung).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_UnversicherterExpressVersandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Unversicherter Express - Versand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_VersicherterExpressVersandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Versicherter Express - Versand.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_DeutschePostBriefLandInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Deutsche Post Brief (Land).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_DeutschePostBriefLuftInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Deutsche Post Brief (Luft).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_IloxxEuropaInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) iloxx Europa.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DE_IloxxWorldWideInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) iloxx World Wide.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="ES_CartasNacionalesHasta20">
				<xs:annotation>
					<xs:documentation>
						(in/out) Cartas nacionales hasta 20 gr.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ES_CartasNacionalesDeMas20">
			</xs:enumeration>
			<xs:enumeration value="ES_CartasInternacionalesHasta20">
				<xs:annotation>
					<xs:documentation>
						(in/out) Cartas internacionales hasta 20 gr.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ES_CartasInternacionalesDeMas20">
				<xs:annotation>
					<xs:documentation>
						(in/out) Cartas internacionales de mas de 20 gr.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ES_PaqueteAzulHasta2kg">
				<xs:annotation>
					<xs:documentation>
						(in/out) Paquete Azul (nacional) hasta 2 kg.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ES_PaqueteAzulDeMas2kg">
			</xs:enumeration>
			<xs:enumeration value="ES_PaqueteInternacionalEconomico">
			</xs:enumeration>
			<xs:enumeration value="ES_Urgente">
			</xs:enumeration>
			<xs:enumeration value="ES_Otros">
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="ES_StandardInternational">
			</xs:enumeration>
			<xs:enumeration value="ES_ExpeditedInternational">
			</xs:enumeration>
			<xs:enumeration value="ES_OtherInternational">
			</xs:enumeration>
			<xs:enumeration value="ES_CartasPostalInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Cartas y tarjetas postales internacionales.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ES_EmsPostalExpressInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Ems postal expres internacional.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ES_EconomyPacketInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Paquete internacional economico.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="FR_ChronoposteInternationalClassic">
				<xs:annotation>
					<xs:documentation>
						(in/out) Chronoposte International Classic.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_ColiposteColissimoDirect">
				<xs:annotation>
					<xs:documentation>
						(in/out) Coliposte Colissimo Direct.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_DHLExpressEuropack">
				<xs:annotation>
					<xs:documentation>
						(in/out) DHL Express Europack.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_UPSStandard">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Standard.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_PostOfficeLetter">
				<xs:annotation>
					<xs:documentation>
						(in/out) Lettre.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_PostOfficeLetterFollowed">
				<xs:annotation>
					<xs:documentation>
						(in/out) Lettre avec suivi.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_PostOfficeLetterRecommended">
			</xs:enumeration>			
			<xs:enumeration value="FR_ColiposteColissimo">
				<xs:annotation>
					<xs:documentation>
						(in/out) Colissimo.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_ColiposteColissimoRecommended">
			</xs:enumeration>
			<xs:enumeration value="FR_UPSStandardAgainstRefund">
				<xs:annotation>
					<xs:documentation>
						(in/out) Contre remboursement.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_Autre">
				<xs:annotation>
					<xs:documentation>
						(in/out) Autre mode d'envoi de courrier.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_Ecopli">
				<xs:annotation>
					<xs:documentation>
						(in/out) Ecopli.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_Colieco">
			</xs:enumeration>
			<xs:enumeration value="FR_AuteModeDenvoiDeColis">
				<xs:annotation>
					<xs:documentation>
						(in/out) Autre mode d'envoi de colis.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_RemiseEnMainPropre">
				<xs:annotation>
					<xs:documentation>
						(in/out) Remise en main propre.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="FR_StandardInternational">
			</xs:enumeration>
			<xs:enumeration value="FR_ExpeditedInternational">
			</xs:enumeration>
			<xs:enumeration value="FR_OtherInternational">
			</xs:enumeration>
			<xs:enumeration value="FR_LaPosteInternationalPriorityCourier">
				<xs:annotation>
					<xs:documentation>
						(in/out) La Poste - Courrier International Prioritaire.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_LaPosteInternationalEconomyCourier">
				<xs:annotation>
					<xs:documentation>
						(in/out) La Poste - Courrier International Economique.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_LaPosteColisPostalPriorityInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) La Poste - Colis Postal Prioritaire.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_LaPosteColisPostalEconomyInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) La Poste - Colis Postal Economique.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_EmballageColissimoInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Emballage Colissimo International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_ChronopostClassicInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Chronopost Classic International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_ChronopostPremiumInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Chronopost Premium International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_UPSStandardInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Standard.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_UPSExpressInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Express.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FR_DHLInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) DHL.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="IT_RegularMail">
				<xs:annotation>
					<xs:documentation>
						(in/out) Posta ordinaria.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IT_PriorityMail">
				<xs:annotation>
					<xs:documentation>
						(in/out) Posta prioritaria.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IT_MailRegisteredLetter">
				<xs:annotation>
					<xs:documentation>
						(in/out) Posta raccomandata.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IT_MailRegisteredLetterWithMark">
				<xs:annotation>
					<xs:documentation>
						(in/out) Posta raccomandata con contrassegno.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IT_InsuredMail">
				<xs:annotation>
					<xs:documentation>
						(in/out) Posta assicurata.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IT_QuickMail">
				<xs:annotation>
					<xs:documentation>
						(in/out) Posta celere.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IT_RegularPackage">
				<xs:annotation>
					<xs:documentation>
						(in/out) Pacco ordinario.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IT_QuickPackage1">
				<xs:annotation>
					<xs:documentation>
						(in/out) Pacco celere 1.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IT_QuickPackage3">
				<xs:annotation>
					<xs:documentation>
						(in/out) Pacco celere 3.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IT_ExpressCourier">
				<xs:annotation>
					<xs:documentation>
						(in/out) Corriere espresso.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="IT_StandardInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Spedizione internazionale standard a prezzo fisso.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IT_ExpeditedInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Spedizione internazionale celere a prezzo fisso.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IT_OtherInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Altre spedizioni internazionali (vedi descrizione).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="NL_StandardDelivery">
				<xs:annotation>
					<xs:documentation>
						(in/out) Standaardverzending.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NL_ParcelPost">
				<xs:annotation>
					<xs:documentation>
						(in/out) Pakketpost.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NL_RegisteredMail">
				<xs:annotation>
					<xs:documentation>
						(in/out) Verzending met ontvangstbevestiging.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NL_Other">
				<xs:annotation>
					<xs:documentation>
						(in/out) Andere verzendservice.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="NL_TPGPostTNTInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) TPG Post/TNT.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NL_UPSInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NL_FedExInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Fedex.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NL_DHLInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) DHL.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NL_DPDGBRInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) DPD (Germany).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NL_GLSBusinessInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) GLS (Business only).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NL_StandardInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Vaste kosten standaard internationale verzending.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NL_ExpeditedInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Vaste kosten versnelde internationale verzending.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NL_OtherInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Andere internationale verzending (zie beschrijving).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="TW_RegisteredMail">
			</xs:enumeration>
			<xs:enumeration value="TW_UnregisteredMail">
			</xs:enumeration>
			<xs:enumeration value="TW_COD">
			</xs:enumeration>
			<xs:enumeration value="TW_DwellingMatchPost">
			</xs:enumeration>
			<xs:enumeration value="TW_DwellingMatchCOD">
			</xs:enumeration>
			<xs:enumeration value="TW_SelfPickup">
			</xs:enumeration>
			<xs:enumeration value="TW_ParcelPost">
			</xs:enumeration>
			<xs:enumeration value="TW_ExpressMail">
			</xs:enumeration>
			<xs:enumeration value="TW_Other">
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="TW_CPInternationalLetterPost">
			</xs:enumeration>
			<xs:enumeration value="TW_CPInternationalParcelPost">
			</xs:enumeration>
			<xs:enumeration value="TW_CPInternationalRegisteredLetterPost">
			</xs:enumeration>
			<xs:enumeration value="TW_CPInternationalRegisteredParcelPost">
			</xs:enumeration>
			<xs:enumeration value="TW_CPInternationalEMS">
			</xs:enumeration>
			<xs:enumeration value="TW_CPInternationalOceanShippingParcel">
			</xs:enumeration>
			<xs:enumeration value="TW_FedExInternationalPriority">
				<xs:annotation>
					<xs:documentation>
						(in/out) Fedex International Priority.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TW_FedExInternationalEconomy">
				<xs:annotation>
					<xs:documentation>
						(in/out) Fedex International Economy.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TW_UPSWorldwideExpedited">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Worldwide Expedited.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TW_UPSWorldwideExpress">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Worldwide Express.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TW_UPSWorldwideExpressPlus">
				<xs:annotation>
					<xs:documentation>
						(in/out) UPS Worldwide Express Plus.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TW_OtherInternational">
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="UK_RoyalMailFirstClassStandard">
				<xs:annotation>
					<xs:documentation>
						(in/out) Royal Mail 1st Class Standard.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_RoyalMailSecondClassStandard">
				<xs:annotation>
					<xs:documentation>
						(in/out) Royal Mail 2nd Class Standard.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_RoyalMailFirstClassRecorded">
				<xs:annotation>
					<xs:documentation>
						(in/out) Royal Mail 1st Class Recorded.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_RoyalMailSecondClassRecorded">
				<xs:annotation>
					<xs:documentation>
						(in/out) Royal Mail 2nd Class Recorded.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_RoyalMailSpecialDelivery">
				<xs:annotation>
					<xs:documentation>
						(in/out) Royal Mail Special Delivery.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_RoyalMailStandardParcel">
				<xs:annotation>
					<xs:documentation>
						(in/out) Royal Mail Standard Parcels.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_Parcelforce24">
				<xs:annotation>
					<xs:documentation>
						(in/out) Parcelforce 24.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_Parcelforce48">
				<xs:annotation>
					<xs:documentation>
						(in/out) Parcelforce 48.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_OtherCourier">
				<xs:annotation>
					<xs:documentation>
						(in/out) Other Courier.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_SellersStandardRate">
				<xs:annotation>
					<xs:documentation>
						(in/out) Seller's Standard Rate.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_CollectInPerson">
				<xs:annotation>
					<xs:documentation>
						(in/out) Collection in Person.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes begin -->
			<xs:enumeration value="UK_SellersStandardInternationalRate">
				<xs:annotation>
					<xs:documentation>
						(in/out) Sellers Standard International Rate.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_RoyalMailAirmailInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Royal Mail Airmail.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_RoyalMailAirsureInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Royal Mail Airsure.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_RoyalMailSurfaceMailInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Royal Mail Surface Mail.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_RoyalMailInternationalSignedFor">
				<xs:annotation>
					<xs:documentation>
						(in/out) Royal Mail International Signed-for.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_RoyalMailHMForcesMailInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Royal Mail HM Forces Mail.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_ParcelForceInternationalDatapost">
				<xs:annotation>
					<xs:documentation>
						(in/out) Parcelforce International Datapost.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_ParcelForceIreland24International">
				<xs:annotation>
					<xs:documentation>
						(in/out) Parcelforce Ireland 24.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_ParcelForceEuro48International">
				<xs:annotation>
					<xs:documentation>
						(in/out) Parcelforce Euro 48.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_ParcelForceInternationalScheduled">
				<xs:annotation>
					<xs:documentation>
						(in/out) Parcelforce International Scheduled.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_OtherCourierOrDeliveryInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Other courier or delivery service.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK_CollectInPersonInternational">
				<xs:annotation>
					<xs:documentation>
						(in/out) Collect in person.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Intl codes end -->
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingTermsCodeList.xsd #####

-->
	<xs:simpleType name="ShippingTermsCodeType">
		<xs:annotation>
			<xs:documentation>
           ShippingTermsCodeType - Type declaration to be used by other
           schemas. Shipping terms codes indicate who pays for the shipping of
           an item, the seller or the buyer.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="SellerPays">
				<xs:annotation>
					<xs:documentation>
                (in/out) Seller pays all shipping costs.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerPays">
				<xs:annotation>
					<xs:documentation>
                (in/out) Buyer pays all shipping costs.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SiteCodeList.xsd #####

-->
	<xs:simpleType name="SiteCodeType">
		<xs:annotation>
			<xs:documentation>
SiteCodeType - Type declaration to be used by other schema.
Identifies eBay sites (by the country in which each resides) on
which a user is registered and on which items can be listed.   
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="US">
				<xs:annotation>
					<xs:documentation>
						(in/out) USA
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Canada">
				<xs:annotation>
					<xs:documentation>
						(in/out) Canada
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK">
				<xs:annotation>
					<xs:documentation>
						(in/out) United Kingdom
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Australia">
				<xs:annotation>
					<xs:documentation>
						(in/out) Australia
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Austria">
				<xs:annotation>
					<xs:documentation>
						(in/out) Austria
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Belgium_French">
				<xs:annotation>
					<xs:documentation>
						(in/out) Belgium (French)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="France">
				<xs:annotation>
					<xs:documentation>
						(in/out) France
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Germany">
				<xs:annotation>
					<xs:documentation>
						(in/out) Germany
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Italy">
				<xs:annotation>
					<xs:documentation>
						(in/out) Italy
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Belgium_Dutch">
				<xs:annotation>
					<xs:documentation>
						(in/out) Belgium (Dutch)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Netherlands">
				<xs:annotation>
					<xs:documentation>
						(in/out) Netherlands
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Spain">
				<xs:annotation>
					<xs:documentation>
						(in/out) Spain
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Switzerland">
				<xs:annotation>
					<xs:documentation>
						(in/out) Switzerland
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Taiwan">
				<xs:annotation>
					<xs:documentation>
						(in/out) Taiwan
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayMotors">
				<xs:annotation>
					<xs:documentation>
						(in/out) eBay Motors
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="HongKong">
				<xs:annotation>
					<xs:documentation>
						(out) Hong Kong
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="Singapore">
				<xs:annotation>
					<xs:documentation>
						(out) Singapore
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="India">
				<xs:annotation>
					<xs:documentation>
						(out) India
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>


			<xs:enumeration value="China">
				<xs:annotation>
					<xs:documentation>
						(out) China
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="Malaysia">
				<xs:annotation>
					<xs:documentation>
						(out) Malaysia
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="Philippines">
				<xs:annotation>
					<xs:documentation>
						(out) Philippines
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SiteIDFilterCodeList.xsd #####

-->
	<xs:simpleType name="SiteIDFilterCodeType">
		<xs:annotation>
			<xs:documentation>
           SiteIDFilterCodeType - Type declaration to be used by other schema.
           This code identifies the SiteIDFilters  to allow user to filter the
           category listings by SiteID. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ListedInCurrencyImplied">
				<xs:annotation>
					<xs:documentation>
                (in) Items listed in the currency implied by SiteID. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LocatedInCountryImplied">
				<xs:annotation>
					<xs:documentation> 
                (in) Items located in the country implied by SiteID.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AvailableInCountryImplied">
				<xs:annotation>
					<xs:documentation>
                (in) Items available to the country implied by SiteID. (For the US site,
                this implies listings from ALL English-language countries that are
                available to the US.)
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SiteImplied">
				<xs:annotation>
					<xs:documentation>
                (in) Items listed on the site implied by SiteID, regardless of listing
                currency.
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BelgiumListing">
				<xs:annotation>
					<xs:documentation>
                (in) Items located in Belgium or listed on one of the two Belgian sites.
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SortOrderCodeList.xsd #####

-->
	<xs:simpleType name="SortOrderCodeType">
		<xs:annotation>
			<xs:documentation>
Indicates the order in which the catalog search engine will sort the results 
if you pass a sort attribute (SortAttributeID) in catalog search requests. 
Applications cannot change the sort order of a sort attribute.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Ascending">
				<xs:annotation>
					<xs:documentation>
            The results will be sorted by the specified attribute in ascending order
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Descending">
				<xs:annotation>
					<xs:documentation>
            The results will be sorted by the specified attribute in descending order
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
            (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreSearchCodeList.xsd #####

-->
	<xs:simpleType name="StoreSearchCodeType">
		<xs:annotation>
			<xs:documentation>
           StoreSearchCodeType - Type declaration to be used by other schema.
           This code identifies the StoreSearch codes (e.g., for
           GetSearchResults requests).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AllItemsInTheStore">
				<xs:annotation>
					<xs:documentation>
                (in) Within a single store for all items (specify store in
                SearchStoreFilterType.StoreName).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AuctionItemsInTheStore">
				<xs:annotation>
					<xs:documentation> 
                (in) Within a single store for auction items (specify store in
                SearchStoreFilterType.StoreName).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowItemsInTheStore">
				<xs:annotation>
					<xs:documentation> 
                (in) Within a single store for Buy It Now items (specify store in
                SearchStoreFilterType.StoreName).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowItemsInAllStores">
				<xs:annotation>
					<xs:documentation> 
                (in) Across all stores for Buy It Now items.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/TokenReturnMethodCodeList.xsd #####

-->
	<xs:simpleType name="TokenReturnMethodCodeType">
		<xs:annotation>
			<xs:documentation>
Used to specify how the application wants eBay to handle the user's token after the 
user signs in. There are two options: redirect with token, or leave the token at 
eBay and fetch the token through an API call to FetchToken.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Redirect">
				<xs:annotation>
					<xs:documentation>
						     (out) Return the token in the HTTP redirect to the application-specified
						     accept URL
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FetchToken">
				<xs:annotation>
					<xs:documentation>
						    (out) Leaves the token at eBay so that the application can get 
						    the token through the FetchToken API call (SecretId required)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/TradingRoleCodeList.xsd #####

-->
	<xs:simpleType name="TradingRoleCodeType">
		<xs:annotation>
			<xs:documentation>
              Specifies a person's role in doing business on eBay.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Buyer">
				<xs:annotation>
					<xs:documentation>
                      (out) The buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Seller">
				<xs:annotation>
					<xs:documentation>
                     (out) The seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                      (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/UnitCodeList.xsd #####

-->
	<xs:simpleType name="UnitCodeType">
		<xs:annotation>
			<xs:documentation>
UnitCodeType - Type declaration to be used by other schema.
These codes describe the units of measure used to express
such properties as weight and size dimensions.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="kg">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Kilograms
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="lbs">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Pounds
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="oz">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Ounces						
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="cm">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Centimeters
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="inches">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Inches
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ft">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Feet
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/UserStatusCodeList.xsd #####

-->
	<xs:simpleType name="UserStatusCodeType">
		<xs:annotation>
			<xs:documentation>
UserStatusCodeType - Type declaration to be used by other schema.
These codes indicate the current state or status of a an eBay
user account.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unknown">
				<xs:annotation>
					<xs:documentation>
						     (out) User properties have never been set; this value should
						     seldom, if ever, be returned and typically represents a
						     problem
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Suspended">
				<xs:annotation>
					<xs:documentation>
						    (out) User has been suspended from selling and buying, such as
						    for violations of eBay terms or agreement
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Confirmed">
				<xs:annotation>
					<xs:documentation>
						   (out) User has completed online registration and has properly
						   responded to confirmation email; most users should fall
						   in this category
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Unconfirmed">
				<xs:annotation>
					<xs:documentation>
						    (out) User has completed online registration, but has either
						    not responded to confirmation email or has not yet been
						    sent the confirmation email
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Ghost">
				<xs:annotation>
					<xs:documentation>
						    (out) Registered users of AuctionWeb (pre-eBay) who never
						    re-registered on eBay
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="InMaintenance">
				<xs:annotation>
					<xs:documentation>
						    (out) Temporary user record state indicating the record is in
						    the process of being changed by eBay; query user
						    information again to get new status
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Deleted">
				<xs:annotation>
					<xs:documentation>
						    (out) Records for the specified user have been deleted
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardVerify">
				<xs:annotation>
					<xs:documentation>
						    (out) User has completed registration and confirmation, but is
						    pending a verification of credit card information
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AccountOnHold">
				<xs:annotation>
					<xs:documentation>
						    (out) User's account is on hold, such as for non-payment of
						    amounts due eBay; user cannot sell or buy items
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Merged">
				<xs:annotation>
					<xs:documentation>
						      (out) User record has been merged with another account record
						      for the same user
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RegistrationCodeMailOut">
				<xs:annotation>
					<xs:documentation>
						    (out) User has completed online registration and has been sent
						    the confirmation email, but has not yet responded to the
						    confirmation email
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TermPending">
				<xs:annotation>
					<xs:documentation>
						      (out) User has been scheduled for account closure (typically
						      when a user has requested to have their account closed)
						      A user in this state should not be considered an active
						      user
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UnconfirmedHalfOptIn">
				<xs:annotation>
					<xs:documentation>
						      (out) User has completed the registration for Half.com and opted
						      to automatically also be registered with eBay, but the
						      registration confirmation is still pending
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardVerifyHalfOptIn">
				<xs:annotation>
					<xs:documentation>
						      (out) User has completed the registration for Half.com and opted
						      to automatically also be registered with eBay, but the
						      verification of credit card information is still pending
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UnconfirmedPassport">
				<xs:annotation>
					<xs:documentation>
						      (out) Obsolete; signing in with Microsoft Passport is no longer supported
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardVerifyPassport">
				<xs:annotation>
					<xs:documentation>
						     (out) Obsolete; signing in with Microsoft Passport is no longer supported
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UnconfirmedExpress">
				<xs:annotation>
					<xs:documentation>
						     (out) Half.com User; user has completed the registration for Half.com
						     and opted to automatically also be registered with eBay, but the
						     registration confirmation is still pending
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/VATStatusCodeList.xsd #####

-->
	<xs:simpleType name="VATStatusCodeType">
		<xs:annotation>
			<xs:documentation>
				Indicates whether or not the user is subject to VAT.
				Users who have registered with eBay as VAT-exempt are not
				subject to VAT. See documentation on Value-Added Tax (VAT). Not
				returned for users whose country of residence is outside the
				EU.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NoVATTax">
				<xs:annotation>
					<xs:documentation>
						(out) VAT is not applicable
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATTax">
				<xs:annotation>
					<xs:documentation>
						(out) EU user, but not registered as VAT-exempt
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATExempt">
				<xs:annotation>
					<xs:documentation>
						(out) EU user and registered as VAT-exempt
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisplayPayNowButtonCodeList.xsd #####

-->
	<xs:simpleType name="DisplayPayNowButtonCodeType">
		<xs:annotation>
			<xs:documentation>Ways to Display PayNow Button</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ShowPayNowButtonForAllPaymentMethods">
				<xs:annotation>
					<xs:documentation> Show PayNow Button For All Payment Methods </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowPayNowButtonForPayPalOnly">
				<xs:annotation>
					<xs:documentation> Show PayNow Button For PayPal Only</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/UPSRateOptionCodeList.xsd #####

-->
	<xs:simpleType name="UPSRateOptionCodeType">
		<xs:annotation>
			<xs:documentation>UPS Rate Options</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="UPSDailyRates">
				<xs:annotation>
					<xs:documentation>UPS Daily Rates</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPSOnDemandRates">
				<xs:annotation>
					<xs:documentation>UPS On-Demand Rates</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CombinedPaymentPeriodCodeList.xsd #####

-->
	<xs:simpleType name="CombinedPaymentPeriodCodeType">
		<xs:annotation>
			<xs:documentation>Combined Purchase Days</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Days_3">
				<xs:annotation>
					<xs:documentation>(in/out) 3 Days</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_5">
				<xs:annotation>
					<xs:documentation>(in/out) 5 Days</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_7">
				<xs:annotation>
					<xs:documentation>(in/out) 7 Days</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_14">
				<xs:annotation>
					<xs:documentation>(in/out) 14 Days</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_30">
				<xs:annotation>
					<xs:documentation>(in/out) 30 Days</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CombinedPaymentOptionCodeList.xsd #####

-->
	<xs:simpleType name="CombinedPaymentOptionCodeType">
	<xs:annotation>
		<xs:documentation>Combined Purchase Options</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:token">
		<xs:enumeration value="NoCombinedPayment">
			<xs:annotation>
				<xs:documentation>No Combined Purchase</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="DiscountSpecified">
			<xs:annotation>
				<xs:documentation> Yes Specify Discount Now </xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="SpecifyDiscountLater">
			<xs:annotation>
				<xs:documentation> Yes Specify Discount Later </xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="CustomCode">
			<xs:annotation>
				<xs:documentation> Reserved for internal or future use </xs:documentation>
			</xs:annotation>
		</xs:enumeration>
	</xs:restriction>
</xs:simpleType>
<!--  

##### from file eBLBaseComponents/FlatShippingRateOptionCodeList.xsd #####

-->
	<xs:simpleType name="FlatShippingRateOptionCodeType">
		<xs:annotation>
			<xs:documentation>
				Flat Shipping Rate Options
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ChargeAmountForEachAdditionalItem">
				<xs:annotation>
					<xs:documentation>
						Charge highest shipping cost for the first item and 
						X amount for each 
						additional item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DeductAmountFromEachAdditionalItem">
				<xs:annotation>
					<xs:documentation>
						Charge highest shipping cost for the first item and deduct X amount from the 
						shipping cost of each additional item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShipAdditionalItemsFree">
				<xs:annotation>
					<xs:documentation>
						Charge highest shipping cost for the first item and ship each additional item free.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CalculatedShippingChargeOptionCodeList.xsd #####

-->
	<xs:simpleType name="CalculatedShippingChargeOptionCodeType">
		<xs:annotation>
			<xs:documentation>Calculated Shipping Charge Options</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ChargeEachItem">
				<xs:annotation>
					<xs:documentation>
						Charge the actual shipping cost and my full packaging and handling 
						fee for each item
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeEntireOrder">
				<xs:annotation>
					<xs:documentation>
						Charge the actual shipping cost and a packaging and handling fee of 
						X amount for the entire order
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CalculatedShippingRateOptionCodeList.xsd #####

-->
	<xs:simpleType name="CalculatedShippingRateOptionCodeType">
		<xs:annotation>
			<xs:documentation>
				Calculated Shipping Rate Options.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="CombinedItemWeight">
				<xs:annotation>
					<xs:documentation>
						Calculate the Actual Shipping Rate from Combined Item Weight
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IndividualItemWeight">
				<xs:annotation>
					<xs:documentation>
						Calculate the Actual Shipping Rate from Individual Item Weight
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ItemFormatSortFilterCodeList.xsd #####

-->
	<xs:simpleType name="ItemFormatSortFilterCodeType">
		<xs:annotation>
			<xs:documentation>
			  Specifies that you want to display items based
			  on selling format, such as Buy It Now or Store items.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ShowAnyItems">
				<xs:annotation>
					<xs:documentation>
					(in/out) Show any items, in no particular order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowItemsWithBINFirst">
				<xs:annotation>
					<xs:documentation> 
					(in/out) Show items with a Buy It Now price first.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowOnlyItemsWithBIN">
				<xs:annotation>
					<xs:documentation> 
					(in/out) Show only items with a Buy It Now price.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowOnlyStoreItems">
				<xs:annotation>
					<xs:documentation> 
					(in/out) Show only store inventory items.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> 
					(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/GallerySortFilterCodeList.xsd #####

-->
	<xs:simpleType name="GallerySortFilterCodeType">
		<xs:annotation>
			<xs:documentation>
			Specifies how cross-promoted items with gallery images 
			should be displayed.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ShowAnyItems">
				<xs:annotation>
					<xs:documentation>
					(in/out) Show any items, in no particular order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowItemsWithGalleryImagesFirst">
				<xs:annotation>
					<xs:documentation> 
					(in/out) Show items with gallery images first, before
					other items.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowOnlyItemsWithGalleryImages">
				<xs:annotation>
					<xs:documentation> 
					(in/out) Show only items with gallery images.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> 
					(out) Reserved for internal or future use. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ItemSortFilterCodeList.xsd #####

-->
	<xs:simpleType name="ItemSortFilterCodeType">
		<xs:annotation>
			<xs:documentation>
			Specifies how items should be sorted.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="EndingLast">
				<xs:annotation>
					<xs:documentation>
					(in/out) Sort items by ending time, with items ending last first.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EndingSoonest">
				<xs:annotation>
					<xs:documentation>
					(in/out) Sort items by ending time, with items ending soonest first.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HighestPrice">
				<xs:annotation>
					<xs:documentation>
					(in/out) Sort items by price, with the highest price first.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LowestPrice">
				<xs:annotation>
					<xs:documentation> 
					(in/out) Sort items by price, with the lowest price first.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NewlyListed">
				<xs:annotation>
					<xs:documentation>
					(in/out) Sort items by listing time, with newly listed items first.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RandomlySelected">
				<xs:annotation>
					<xs:documentation>
					(in/out) Sort items in a randomly selected order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> 
					(out) Reserved for internal or future use. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/FlatRateInsuranceRangeCodeList.xsd #####

-->
	<xs:simpleType name="FlatRateInsuranceRangeCodeType">
		<xs:annotation>
			<xs:documentation>Flat Rate Insurance Ranges</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="FlatRateInsuranceRange1">
				<xs:annotation>
					<xs:documentation>Range from 0.01 to 9.99</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlatRateInsuranceRange2">
				<xs:annotation>
					<xs:documentation>Range from 10.00 to 49.99</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlatRateInsuranceRange3">
				<xs:annotation>
					<xs:documentation>Range from 50.00 to 99.99</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlatRateInsuranceRange4">
				<xs:annotation>
					<xs:documentation>Range from 100.00 to 199.99</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlatRateInsuranceRange5">
				<xs:annotation>
					<xs:documentation>Range from 200.00 to 299.99</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlatRateInsuranceRange6">
				<xs:annotation>
					<xs:documentation>Range from 300.00 to more</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeActivityCodeList.xsd #####

-->
	<xs:simpleType name="DisputeActivityCodeType">
		<xs:annotation>
			<xs:documentation>
			Defines the allowed values of DisputeActivity.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="SellerAddInformation">
				<xs:annotation>
					<xs:documentation>
					(in) Seller wants to add information or respond to an email from the buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerCompletedTransaction">
				<xs:annotation>
					<xs:documentation>
					(in) The buyer has paid or the seller otherwise does not 
					need to pursue the dispute any longer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CameToAgreementNeedFVFCredit">
				<xs:annotation>
					<xs:documentation>
					(in) Seller has made an agreement with the buyer and 
					requires a credit for FVF fees.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerEndCommunication">
				<xs:annotation>
					<xs:documentation>
					(in) Seller wants to end communication or stop waiting for the buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeSortTypeCodeList.xsd #####

-->
	<xs:simpleType name="DisputeSortTypeCodeType">
		<xs:annotation>
			<xs:documentation>
			Defines the allowed values for sorting a list of
			disputes returned from the eBay server.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
					Sort by DisputeCreatedTime.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DisputeCreatedTimeAscending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by the time the dispute was created, in ascending order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DisputeCreatedTimeDescending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by the time the dispute was created, in descending order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DisputeStatusAscending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by the dispute status, in ascending order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DisputeStatusDescending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by the dispute status, in descending order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DisputeCreditEligibilityAscending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by whether the dispute is eligible for
					fee credit, in ascending
					order, so Ineligible disputes are listed before Eligible disputes.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DisputeCreditEligibilityDescending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by whether the dispute is eleigible for
					fee credit, in descending
					order, so Eligible disputes are listed before Ineligible disputes.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeFilterTypeCodeList.xsd #####

-->
	<xs:simpleType name="DisputeFilterTypeCodeType">
		<xs:annotation>
			<xs:documentation>
			Defines the allowed values for DisputeFilterType, which 
			can reduce the number of disputes returned. All disputes
			returned, regardless of which filter is used, involve the
			requester as buyer or seller.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AllInvolvedDisputes">
				<xs:annotation>
					<xs:documentation>
					(in/out) All disputes that involve me as buyer or seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DisputesAwaitingMyResponse">
				<xs:annotation>
					<xs:documentation>
					(in/out) All disputes that involve me as buyer or seller and
					are awaiting my response. Default.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DisputesAwaitingOtherPartyResponse">
				<xs:annotation>
					<xs:documentation>
					(in/out) All disputes that involve me as buyer or seller and
					are awaiting the other party's response.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AllInvolvedClosedDisputes">
				<xs:annotation>
					<xs:documentation>
					(in/out) All disputes that involve me as buyer or seller and
					are closed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EligibleForCredit">
				<xs:annotation>
					<xs:documentation>
					(in/out) All disputes that involve me as buyer or seller and
					are eligible for a Final Value Fee credit, regardless of whether
					the credit has been granted.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeResolutionRecordTypeCodeList.xsd #####

-->
	<xs:simpleType name="DisputeResolutionRecordTypeCodeType">
		<xs:annotation>
			<xs:documentation>
			Defines allowed values for the action resulting
			from the resolution. The action is taken by the
			eBay site. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="StrikeBuyer">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer received an Unpaid Item Strike.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SuspendBuyer">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer is suspended and unable to use
					the eBay site.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FVFCredit">
				<xs:annotation>
					<xs:documentation>
					(out) The seller received a Final Value Fee credit.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="InsertionFeeCredit">
				<xs:annotation>
					<xs:documentation>
					(out) The seller's listing fee was credited.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AppealBuyerStrike">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer's unpaid item strike was appealed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UnsuspendBuyer">
				<xs:annotation>
					<xs:documentation>
					(out)The buyer's suspension was reversed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReverseFVFCredit">
				<xs:annotation>
					<xs:documentation>
					(out) The seller's Final Value Fee credit was
					reversed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReverseInsertionFeeCredit">
				<xs:annotation>
					<xs:documentation>
					(out) The seller's listing fee was reversed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GenerateCSTicketForSuspend">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer is given a ticket 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeResolutionReasonCodeList.xsd #####

-->
	<xs:simpleType name="DisputeResolutionReasonCodeType">
		<xs:annotation>
			<xs:documentation>
			Defines allowed values for the reason the dispute was resolved.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unresolved">
				<xs:annotation>
					<xs:documentation>	
					(out) The disupute was not resolved.			
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ProofOfPayment">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer provided proof of payment in feedback.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ComputerTechnicalProblem">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer or seller had a technical problem with a computer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NoContact">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer and seller have not made contact.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FamilyEmergency">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer or seller had a family emergency.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ProofGivenInFeedback">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer provided proof of payment in feedback.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FirstInfraction">
				<xs:annotation>
					<xs:documentation>
					(out) The dispute was the buyer's first infraction.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CameToAgreement">
				<xs:annotation>
					<xs:documentation>
					(in/out) The buyer and seller came to agreement.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemReturned">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer returned the item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerPaidAuctionFees">
				<xs:annotation>
					<xs:documentation>
 					(in/out) The buyer reimbursed the seller's auction fees.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerReceivedPayment">
				<xs:annotation>
					<xs:documentation>
					(in/out) The seller received payment.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OtherResolution">
				<xs:annotation>
					<xs:documentation>
					(in/out) There has been some other resolution.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeMessageSourceCodeList.xsd #####

-->
	<xs:simpleType name="DisputeMessageSourceCodeType">
		<xs:annotation>
			<xs:documentation>
			Defines the source of a message added to a dispute.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Buyer">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer of the item under dispute.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Seller">
				<xs:annotation>
					<xs:documentation>
					(out) The seller of the item under dispute.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBay">
				<xs:annotation>
					<xs:documentation>
					(out) eBay, either an administrator or the site itself.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeCreditEligibilityCodeList.xsd #####

-->
	<xs:simpleType name="DisputeCreditEligibilityCodeType">
		<xs:annotation>
			<xs:documentation>
			Defines the values for DisputeCreditEligibility.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="InEligible">
				<xs:annotation>
					<xs:documentation>
    				(out) The seller is not currently eligible for credit.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Eligible">
				<xs:annotation>
					<xs:documentation>
    				(out) The seller is eligible for credit.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeStateCodeList.xsd #####

-->
	<xs:simpleType name="DisputeStateCodeType">
		<xs:annotation>
			<xs:documentation>
			Defines valid values for the current state
			of the dispute. The current state of the dispute
			determines the values that can be used for DisputeActivity.
			The DisputeState is an internal value that is returned as output
			in the response.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Locked">
				<xs:annotation>
					<xs:documentation>
					(out) Locked; cannot be updated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Closed">
				<xs:annotation>
					<xs:documentation>
					(out) Closed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerFirstResponsePayOption">
				<xs:annotation>
					<xs:documentation>
					(out) eBay sent the buyer an Unpaid Item Reminder
					with a Pay Now option.
					Waiting for the buyer's first response. Within
					the 7-day grace period.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerFirstResponseNoPayOption">
				<xs:annotation>
					<xs:documentation>
					(out) eBay sent the buyer an Unpaid Item Reminder
					with no Pay Now option. Waiting for the buyer's 
					first response. Within the 7-day grace period.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerFirstResponsePayOptionLateResponse">
				<xs:annotation>
					<xs:documentation>
					(out) eBay sent the buyer an Unpaid Item Reminder
					with a Pay Now option. Waiting for the buyer's 
					first response. The 7-day grace period has expired.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerFirstResponseNoPayOptionLateResponse">
				<xs:annotation>
					<xs:documentation>
					(out) eBay sent the buyer an Unpaid Item Reminder
					with no Pay Now option. Waiting for the buyer's 
					first response. The 7-day grace period has expired.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MutualCommunicationPayOption">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer and seller have communicated. The buyer
					was offered a Pay Now option.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MutualCommunicationNoPayOption">
				<xs:annotation>
					<xs:documentation>
				    (out) The buyer and seller have communicated. The buyer
					was not offered a Pay Now option.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PendingResolve">
				<xs:annotation>
					<xs:documentation>
					(out) The dispute is pending resolution.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MutualWithdrawalAgreement">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer and seller have agreed not to
					complete the transaction, within the grace
					period.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MutualWithdrawalAgreementLate">
				<xs:annotation>
					<xs:documentation>
					(out) The buyer and seller have agreed not to
					complete the transaction, after the grace period.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeStatusCodeList.xsd #####

-->
	<xs:simpleType name="DisputeStatusCodeType">
	<!-- define ascending and descending order -->
		<xs:annotation>
			<xs:documentation>
			Defines the values allowed for DisputeStatus.
			DisputeStatus supplements DisputeState. Disputes can be sorted by
			DisputeStatus. Ascending order is 1 - WaitingForSellerResponse; 2 -
			WaitingForBuyerResponse; 3 - ClosedFVFCreditStrike; 4 - ClosedNoFVFCreditStrike;
			5 - ClosedFVFCreditNoStrike; 6 - ClosedNoFVFCreditNoStrike. Descending
			order is the reverse.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="WaitingForSellerResponse">
				<xs:annotation>
					<xs:documentation>
					(out) The dispute is waiting for the seller's response.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WaitingForBuyerResponse">
				<xs:annotation>
					<xs:documentation>
					(out) The dispute is waiting for the buyer's response.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ClosedFVFCreditStrike">
				<xs:annotation>
					<xs:documentation>
					(out) The dispute is closed, the seller received
					an FVF credit, and the buyer received a strike.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ClosedNoFVFCreditStrike">
				<xs:annotation>
					<xs:documentation>
					(out) The dispute is closed, the seller did not receive
					an FVF credit, and the buyer received a strike.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ClosedFVFCreditNoStrike">
				<xs:annotation>
					<xs:documentation>
					(out) The dispute is closed, the seller received an
					FVF credit, and the buyer did not receive a strike.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ClosedNoFVFCreditNoStrike">
				<xs:annotation>
					<xs:documentation>
					(out) The dispute is closed, the seller did not receive
					an FVF credit, and the buyer did not receive a strike.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeRecordTypeCodeList.xsd #####

-->
	<xs:simpleType name="DisputeRecordTypeCodeType">
		<xs:annotation>
			<xs:documentation>
			Describes the type of dispute, identifying whether
			it is part of the Unpaid Item Process or the Item Not
			Received Process.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="UnpaidItem">
				<xs:annotation>
					<xs:documentation>
    				The buyer has not paid for the item.
    				Used for disputes created as part of the Unpaid
    				Item Process.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemNotReceived">
				<xs:annotation>
					<xs:documentation>
    				The buyer has not received the item.
    				Used for disputes created as part of the Item
    				Not Received Process.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeReasonCodeList.xsd #####

-->
	<xs:simpleType name="DisputeReasonCodeType">
		<xs:annotation>
			<xs:documentation>
			Defines the allowed values for the dispute reason,
			used when the dispute is created. The dispute reason
			value determines the values you can use for the dispute
			explanation.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="BuyerHasNotPaid">
				<xs:annotation>
					<xs:documentation>
    				(in/out) The buyer has not paid for the item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TransactionMutuallyCanceled">
				<xs:annotation>
					<xs:documentation>
    				(in/out) The buyer and seller have both agreed not to complete the transaction.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisputeExplanationCodeList.xsd #####

-->
	<xs:simpleType name="DisputeExplanationCodeType">
		<xs:annotation>
			<xs:documentation>
			The allowed values for DisputeExplanation.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="BuyerHasNotResponded">
				<xs:annotation>
					<xs:documentation>
					 (in/out) The buyer has not responded within the 7-day
					 waiting period.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerRefusedToPay">
				<xs:annotation>
					<xs:documentation>
					(in/out) The buyer has refused to pay.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerReturnedItemForRefund">
				<xs:annotation>
					<xs:documentation>
    				(in/out) The buyer returned the item for a refund.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UnableToResolveTerms">
				<xs:annotation>
					<xs:documentation>
    				(in/out) The buyer and seller were unable to resolve a 
    				disagreement over terms.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerPurchasingMistake">
				<xs:annotation>
					<xs:documentation>
    				(in/out) The buyer made a mistake and no longer wants the item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShipCountryNotSupported">
				<xs:annotation>
					<xs:documentation>
    				(in/out) The buyer requests shipment to a country the seller 
    				does not ship to.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShippingAddressNotConfirmed">
				<xs:annotation>
					<xs:documentation>
    				(in/out) The buyer requests shipment to an unconfirmed address.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentMethodNotSupported">
				<xs:annotation>
					<xs:documentation>
    				(in/out) The buyer requests a payment method that I don't accept.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerNoLongerRegistered">
				<xs:annotation>
					<xs:documentation>
    				(in/out) The buyer is no longer a registered user.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OtherExplanation">
				<xs:annotation>
					<xs:documentation>
    				(in/out) Some other reason not specified in this code list.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                	(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingRateTypeCodeList.xsd #####

-->
	<xs:simpleType name="ShippingRateTypeCodeType">
		<xs:annotation>
			<xs:documentation>
				A shipping rate scale for shipping through UPS that
				affects the shipping cost calculated for UPS (lower if
				ShippingRateType is DailyPickup). For calculated shipping only.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="OnDemand">
				<xs:annotation>
					<xs:documentation>
						"On-demand" shipping rate scale.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DailyPickup">
				<xs:annotation>
					<xs:documentation>
						"Daily pickup" shipping rate scale.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingTypeCodeList.xsd #####

-->
	<xs:simpleType name="ShippingTypeCodeType">
		<xs:annotation>
			<xs:documentation>
				The shipping cost model offered by the seller.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Flat">
				<xs:annotation>
					<xs:documentation>
						(in/out) Flat shipping model: the seller establishes the cost
						of shipping and cost of shipping insurance, regardless of
						what any buyer-selected shipping service might charge the
						seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Calculated">
				<xs:annotation>
					<xs:documentation>
						(in/out) Calculated shipping model: the cost of shipping is 
						determined in large part by the seller-offered and 
						buyer-selected shipping service. The seller might assess an
						additional fee via PackagingHandlingCosts.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/EnableCodeList.xsd #####

-->
	<xs:simpleType name="EnableCodeType">
		<xs:annotation>
			<xs:documentation>
				Indicates the status of a particular entry.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Enable">
				<xs:annotation>
					<xs:documentation>
						(in/out) The entry is enabled.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Disable">
				<xs:annotation>
					<xs:documentation>
						(in/out) The entry is disabled.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/NotificationRoleCodeList.xsd #####

-->
	<xs:simpleType name="NotificationRoleCodeType">
		<xs:annotation>
			<xs:documentation>
			Defines roles for platform notifications. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Application">
				<xs:annotation>
					<xs:documentation>
					(in/out) Specifies that you want to set or return application-level
					preferences. Default value.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="User">
				<xs:annotation>
					<xs:documentation>
					(in/out) Specifies that you want to set or return user-level preferences.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingCarrierCodeList.xsd #####

-->
	<xs:simpleType name="ShippingCarrierCodeType">
		<xs:annotation>
			<xs:documentation>
         Identifies a shipping carrier.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="UPS">
				<xs:annotation>
					<xs:documentation>
						(in/out) United Parcel Service.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPS">
				<xs:annotation>
					<xs:documentation>
						(in/out) U.S. Postal Service.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingFeatureCodeList.xsd #####

-->
	<xs:simpleType name="ShippingFeatureCodeType">
		<xs:annotation>
			<xs:documentation>
           ShippingServiceCodeType - Type declaration to be used by other
           schema. Specifies a particular shipping carrier.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="DeliveryConfirmation">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SignatureConfirmation">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StealthPostage">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SaturdayDelivery">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ListingFlowCodeList.xsd #####

-->
	<xs:simpleType name="ListingFlowCodeType">
		<xs:annotation>
			<xs:documentation>
ListingFlowCodeType - Type declaration to be used by other schema.
Identifies the listing flows on the eBay Web site for use with calls like 
GetRecommendations.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AddItem">
				<xs:annotation>
					<xs:documentation>
                (in) AddItem (Sell Your Item) listing flow.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReviseItem">
				<xs:annotation>
					<xs:documentation>
                (in) ReviseItem (Revise Your Item) listing flow.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RelistItem">
				<xs:annotation>
					<xs:documentation>
                (in) RelistItem listing flow.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/RecommendationEngineCodeList.xsd #####

-->
	<xs:simpleType name="RecommendationEngineCodeType">
		<xs:annotation>
			<xs:documentation>
RecommendationEngineCodeType - Type declaration to be used by other schema.
Identifies the engines that can be used to analyze proposed listing data. 
See the Developer's Guide for a list of recommendation engines that 
are currently operational.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ListingAnalyzer">
				<xs:annotation>
					<xs:documentation>
                (in) Listing Analyzer engine; Returns tips related to fields 
                that a seller wants to specify in a listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SIFFTAS">
				<xs:annotation>
					<xs:documentation>
                (in) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ProductPricing">
				<xs:annotation>
					<xs:documentation>
                (in) Product Pricing engine. Returns average start and sold prices 
                of completed items that were listed a specified product ID.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SellerGuaranteeLevelCodeList.xsd #####

-->
	<xs:simpleType name="SellerGuaranteeLevelCodeType">
		<xs:annotation>
			<xs:documentation>
Maximum level of guarantee a seller is authorized to offer.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NotEligible">
				<xs:annotation>
					<xs:documentation>
						  (out) Not eligible for Seller Level Guarantee
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Regular">
				<xs:annotation>
					<xs:documentation>
						  (out) Regular eligibility level
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Premium">
				<xs:annotation>
					<xs:documentation>
						  (out) Premium eligibility level
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Ultra">
				<xs:annotation>
					<xs:documentation>
						  (out) Ultra eligibility level
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreCustomHeaderLayoutCodeList.xsd #####

-->
	<xs:simpleType name="StoreCustomHeaderLayoutCodeType">
		<xs:annotation>
			<xs:documentation>
				Specifies whether the Store has a custom header.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NoHeader">
				<xs:annotation>
					<xs:documentation>
						Specifies that the Store does not have a custom header.
					</xs:documentation>
				</xs:annotation>		
			</xs:enumeration>
			<xs:enumeration value="CustomHeaderShown">
				<xs:annotation>
					<xs:documentation>
						Specifies that the Store does have a custom header.
					</xs:documentation>
				</xs:annotation>		
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreCustomListingHeaderDisplayCodeList.xsd #####

-->
	<xs:simpleType name="StoreCustomListingHeaderDisplayCodeType">
		<xs:annotation>
			<xs:documentation>
				Specifies how the custom listing header will be displayed.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						No custom listing header is displayed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Full">
				<xs:annotation>
					<xs:documentation>			
						The full custom listing header is displayed.
					</xs:documentation>
				</xs:annotation>						
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreCustomListingHeaderLinkCodeList.xsd #####

-->
	<xs:simpleType name="StoreCustomListingHeaderLinkCodeType">
		<xs:annotation>
			<xs:documentation>
				Specifies the type of link in the custom listing header.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						No type.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AboutMePage">
				<xs:annotation>
					<xs:documentation>
						Link is to an About Me page.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="CustomPage">
				<xs:annotation>
					<xs:documentation>
						Link is to a custom page.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="CustomCategory">
				<xs:annotation>
					<xs:documentation>
						Link is to a custom category.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreCustomPageStatusCodeList.xsd #####

-->
	<xs:simpleType name="StoreCustomPageStatusCodeType">
		<xs:annotation>
			<xs:documentation>
				List of possible statuses for Store custom pages.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Active">
				<xs:annotation>
					<xs:documentation>
						(in,out) The page is visible.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Delete">
				<xs:annotation>
					<xs:documentation>
						(in) The page is to be deleted.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="Inactive">
				<xs:annotation>
					<xs:documentation>
						(in,out) The page is not visible.
					</xs:documentation>
				</xs:annotation>		
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreFontFaceCodeList.xsd #####

-->
	<xs:simpleType name="StoreFontFaceCodeType">
		<xs:annotation>
			<xs:documentation>
				Font selection for Store configuration.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Arial">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Arial font.
					</xs:documentation>
				</xs:annotation>		
			</xs:enumeration>
			<xs:enumeration value="Courier">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Courier font.
					</xs:documentation>
				</xs:annotation>		
			</xs:enumeration>
			<xs:enumeration value="Times">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Times New Roman font.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="Verdana">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Verdana font.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreFontSizeCodeList.xsd #####

-->
	<xs:simpleType name="StoreFontSizeCodeType">
		<xs:annotation>
			<xs:documentation>
				Font size selection for Store configuration.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="XXS">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Extra extra small.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="XS">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Extra small.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="S">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Small.
					</xs:documentation>
				</xs:annotation>		
			</xs:enumeration>
			<xs:enumeration value="M">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Medium.
					</xs:documentation>
				</xs:annotation>		
			</xs:enumeration>
			<xs:enumeration value="L">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Large.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="XL">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Extra large.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="XXL">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Extra extra large.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreHeaderStyleCodeList.xsd #####

-->
	<xs:simpleType name="StoreHeaderStyleCodeType">
		<xs:annotation>
			<xs:documentation>
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Full">
				<xs:annotation>
					<xs:documentation>
						The full Store header is used.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Minimized">
				<xs:annotation>
					<xs:documentation>
						A minimized Store header is used.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreItemListLayoutCodeList.xsd #####

-->
	<xs:simpleType name="StoreItemListLayoutCodeType">
		<xs:annotation>
			<xs:documentation>
				Set of available layouts for items listed in an eBay Store.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ListView">
				<xs:annotation>
					<xs:documentation>
						Displays item list as a single column, with smaller item pictures.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GalleryView">
				<xs:annotation>
					<xs:documentation>
						Displays item list in two columns, with larger item pictures.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreItemListSortOrderCodeList.xsd #####

-->
	<xs:simpleType name="StoreItemListSortOrderCodeType">
		<xs:annotation>
			<xs:documentation>
				List of available options for how items are sorted in an eBay Store.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="EndingFirst">
				<xs:annotation>
					<xs:documentation>
						(in,out) Lists items with those ending soon listed first.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="NewlyListed">
				<xs:annotation>
					<xs:documentation>
						(in,out) Lists items with those newly listed appearing in the list first.
					</xs:documentation>
				</xs:annotation>					
			</xs:enumeration>
			<xs:enumeration value="LowestPriced">
				<xs:annotation>
					<xs:documentation>
						(in,out) Lists items by price in ascending order. The item with the lowest
						starting price is listed first.
					</xs:documentation>
				</xs:annotation>					
			</xs:enumeration>
			<xs:enumeration value="HighestPriced">
				<xs:annotation>
					<xs:documentation>
						(in,out) Lists items by price in descending order. The item with the highest
						starting price is listed first.
					</xs:documentation>
				</xs:annotation>				
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreSubscriptionLevelCodeList.xsd #####

-->
	<xs:simpleType name="StoreSubscriptionLevelCodeType">
		<xs:annotation>
			<xs:documentation>
				User's eBay Store subscription level.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Close">
				<xs:annotation>
					<xs:documentation>
					   (in) Used to cancel the user's eBay Store subscription.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="Basic">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Basic level subscription.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="Featured">
				<xs:annotation>
					<xs:documentation>
					   (in,out) Featured level subscription.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="Anchor">
				<xs:annotation>
					<xs:documentation>
					   (out) Anchor level subscription.
					</xs:documentation>
				</xs:annotation>			
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AccountEntrySortTypeCodeList.xsd #####

-->
	<xs:simpleType name="AccountEntrySortTypeCodeType">
		<xs:annotation>
			<xs:documentation>
			  Specifies how account entries should be sorted in a response
			  from eBay.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
					 (in) Sort by date (Asending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AccountEntryCreatedTimeAscending">
				<xs:annotation>
					<xs:documentation>
					 (in) Sort by date (Desending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AccountEntryCreatedTimeDescending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by date (Asending).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AccountEntryItemNumberAscending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by AccountEntryItemNumber.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AccountEntryItemNumberDescending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by AccountEntryItemNumber.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AccountEntryFeeTypeAscending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by AccountEntryFeeType.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AccountEntryFeeTypeDescending">
				<xs:annotation>
					<xs:documentation>
					(in) Sort by AccountEntryFeeType.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                    (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/BidderTypeCodeList.xsd #####

-->
	<xs:simpleType name="BidderTypeCodeType">
		<xs:annotation>
			<xs:documentation>
           BidderTypeCodeType - Type declaration to be used by other schema.
           Specifies the whether to retrieve all bidders for ended or open
           listings. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AllBidder">
				<xs:annotation>
					<xs:documentation>
                (in) Retrieve all bidders for ended or open listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HighBidder">
				<xs:annotation>
					<xs:documentation>
                (in) Retrieve all high bidders.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/MyMessagesAlertResolutionStatusCodeList.xsd #####

-->
	<xs:simpleType name="MyMessagesAlertResolutionStatusCode">
		<xs:annotation>
			<xs:documentation>
				MyMessagesAlertResolutionStatusCode - Whether or not an alert was resolved, and how. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unresolved">
				<xs:annotation>
					<xs:documentation>
						The alert has not been resolved. If the alert requires user action, an unresolved status 
						means that the user did not take action on the alert. If the alert does not require user 
						action, an unresolved status means that the alert has not been read. Note that an 
						unresolved alert can not be deleted.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ResolvedByAutoResolution">
				<xs:annotation>
					<xs:documentation>
						The alert was resolved by auto resolution. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ResolvedByUser">
				<xs:annotation>
					<xs:documentation>
						The alert was resolved by user. If the alert requires user action, resolved status 
						means that the user took the necessary action on the alert. If the alert does not require user 
						action, resolved status means that the alert was read by the user. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/BestOfferStatusCodeList.xsd #####

-->
	<xs:simpleType name="BestOfferStatusCodeType">
		<xs:annotation>
			<xs:documentation>
				The status of the best offer.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Pending">
				<xs:annotation>
					<xs:documentation>
						The best offer is awaiting seller response or will naturally expire after 48 hours.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Accepted">
				<xs:annotation>
					<xs:documentation> 
						The best offer was accepted by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Declined">
				<xs:annotation>
					<xs:documentation>
						The best offer was rejected by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Expired">
				<xs:annotation>
					<xs:documentation>
						The best offer expired after 48 hours due to no action by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Retracted">
				<xs:annotation>
					<xs:documentation>
						The best offer was retracted by the buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AdminEnded">
				<xs:annotation>
					<xs:documentation>
						The best offer was ended by an administrator.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Active">
				<xs:annotation>
					<xs:documentation>
						Retrieve active best offers only.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="All">
				<xs:annotation>
					<xs:documentation>
						Retrieve all best offers (including declined offers, etc.).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>


		</xs:schema>
	</wsdl:types>
	<wsdl:message name="RequesterCredentials">
		<wsdl:part name="RequesterCredentials" element="ns:RequesterCredentials"/>
	</wsdl:message>
	
	<wsdl:message name="GetItemResponse">
		<wsdl:part name="GetItemResponse" element="ns:GetItemResponse"/>
	</wsdl:message>
	<wsdl:message name="GetItemRequest">
		<wsdl:part name="GetItemRequest" element="ns:GetItemRequest"/>
	</wsdl:message>
	<wsdl:message name="AddItemResponse">
		<wsdl:part name="AddItemResponse" element="ns:AddItemResponse"/>
	</wsdl:message>
	<wsdl:message name="AddItemRequest">
		<wsdl:part name="AddItemRequest" element="ns:AddItemRequest"/>
	</wsdl:message>
	<wsdl:message name="VerifyAddItemResponse">
		<wsdl:part name="VerifyAddItemResponse" element="ns:VerifyAddItemResponse"/>
	</wsdl:message>
	<wsdl:message name="VerifyAddItemRequest">
		<wsdl:part name="VerifyAddItemRequest" element="ns:VerifyAddItemRequest"/>
	</wsdl:message>
	<wsdl:message name="GetUserResponse">
		<wsdl:part name="GetUserResponse" element="ns:GetUserResponse"/>
	</wsdl:message>
	<wsdl:message name="GetUserRequest">
		<wsdl:part name="GetUserRequest" element="ns:GetUserRequest"/>
	</wsdl:message>
	<wsdl:message name="GetSellerEventsResponse">
		<wsdl:part name="GetSellerEventsResponse" element="ns:GetSellerEventsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetSellerEventsRequest">
		<wsdl:part name="GetSellerEventsRequest" element="ns:GetSellerEventsRequest"/>
	</wsdl:message>
	<wsdl:message name="RelistItemResponse">
		<wsdl:part name="RelistItemResponse" element="ns:RelistItemResponse"/>
	</wsdl:message>
	<wsdl:message name="RelistItemRequest">
		<wsdl:part name="RelistItemRequest" element="ns:RelistItemRequest"/>
	</wsdl:message>
	<wsdl:message name="ReviseItemResponse">
		<wsdl:part name="ReviseItemResponse" element="ns:ReviseItemResponse"/>
	</wsdl:message>
	<wsdl:message name="ReviseItemRequest">
		<wsdl:part name="ReviseItemRequest" element="ns:ReviseItemRequest"/>
	</wsdl:message>
	<wsdl:message name="GetSellerListResponse">
		<wsdl:part name="GetSellerListResponse" element="ns:GetSellerListResponse"/>
	</wsdl:message>
	<wsdl:message name="GetSellerListRequest">
		<wsdl:part name="GetSellerListRequest" element="ns:GetSellerListRequest"/>
	</wsdl:message>
	<wsdl:message name="GetItemTransactionsResponse">
		<wsdl:part name="GetItemTransactionsResponse" element="ns:GetItemTransactionsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetItemTransactionsRequest">
		<wsdl:part name="GetItemTransactionsRequest" element="ns:GetItemTransactionsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetSellerTransactionsResponse">
		<wsdl:part name="GetSellerTransactionsResponse" element="ns:GetSellerTransactionsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetSellerTransactionsRequest">
		<wsdl:part name="GetSellerTransactionsRequest" element="ns:GetSellerTransactionsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetCategoriesResponse">
		<wsdl:part name="GetCategoriesResponse" element="ns:GetCategoriesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetCategoriesRequest">
		<wsdl:part name="GetCategoriesRequest" element="ns:GetCategoriesRequest"/>
	</wsdl:message>
	<wsdl:message name="GetAttributesCSResponse">
		<wsdl:part name="GetAttributesCSResponse" element="ns:GetAttributesCSResponse"/>
	</wsdl:message>
	<wsdl:message name="GetAttributesCSRequest">
		<wsdl:part name="GetAttributesCSRequest" element="ns:GetAttributesCSRequest"/>
	</wsdl:message>
	<wsdl:message name="GetAttributesXSLResponse">
		<wsdl:part name="GetAttributesXSLResponse" element="ns:GetAttributesXSLResponse"/>
	</wsdl:message>
	<wsdl:message name="GetAttributesXSLRequest">
		<wsdl:part name="GetAttributesXSLRequest" element="ns:GetAttributesXSLRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductFinderResponse">
		<wsdl:part name="GetProductFinderResponse" element="ns:GetProductFinderResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductFinderRequest">
		<wsdl:part name="GetProductFinderRequest" element="ns:GetProductFinderRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductFinderXSLResponse">
		<wsdl:part name="GetProductFinderXSLResponse" element="ns:GetProductFinderXSLResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductFinderXSLRequest">
		<wsdl:part name="GetProductFinderXSLRequest" element="ns:GetProductFinderXSLRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductSellingPagesResponse">
		<wsdl:part name="GetProductSellingPagesResponse" element="ns:GetProductSellingPagesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductSellingPagesRequest">
		<wsdl:part name="GetProductSellingPagesRequest" element="ns:GetProductSellingPagesRequest"/>
	</wsdl:message>
	<wsdl:message name="GetAccountResponse">
		<wsdl:part name="GetAccountResponse" element="ns:GetAccountResponse"/>
	</wsdl:message>
	<wsdl:message name="GetAccountRequest">
		<wsdl:part name="GetAccountRequest" element="ns:GetAccountRequest"/>
	</wsdl:message>
	<wsdl:message name="AddToItemDescriptionResponse">
		<wsdl:part name="AddToItemDescriptionResponse" element="ns:AddToItemDescriptionResponse"/>
	</wsdl:message>
	<wsdl:message name="AddToItemDescriptionRequest">
		<wsdl:part name="AddToItemDescriptionRequest" element="ns:AddToItemDescriptionRequest"/>
	</wsdl:message>
	<wsdl:message name="EndItemResponse">
		<wsdl:part name="EndItemResponse" element="ns:EndItemResponse"/>
	</wsdl:message>
	<wsdl:message name="EndItemRequest">
		<wsdl:part name="EndItemRequest" element="ns:EndItemRequest"/>
	</wsdl:message>
	<wsdl:message name="GetHighBiddersResponse">
		<wsdl:part name="GetHighBiddersResponse" element="ns:GetHighBiddersResponse"/>
	</wsdl:message>
	<wsdl:message name="GetHighBiddersRequest">
		<wsdl:part name="GetHighBiddersRequest" element="ns:GetHighBiddersRequest"/>
	</wsdl:message>
	<wsdl:message name="GetCategory2CSResponse">
		<wsdl:part name="GetCategory2CSResponse" element="ns:GetCategory2CSResponse"/>
	</wsdl:message>
	<wsdl:message name="GetCategory2CSRequest">
		<wsdl:part name="GetCategory2CSRequest" element="ns:GetCategory2CSRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductSearchResultsResponse">
		<wsdl:part name="GetProductSearchResultsResponse" element="ns:GetProductSearchResultsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductSearchResultsRequest">
		<wsdl:part name="GetProductSearchResultsRequest" element="ns:GetProductSearchResultsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetMyeBayResponse">
		<wsdl:part name="GetMyeBayResponse" element="ns:GetMyeBayResponse"/>
	</wsdl:message>
	<wsdl:message name="GetMyeBayRequest">
		<wsdl:part name="GetMyeBayRequest" element="ns:GetMyeBayRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductSearchPageResponse">
		<wsdl:part name="GetProductSearchPageResponse" element="ns:GetProductSearchPageResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductSearchPageRequest">
		<wsdl:part name="GetProductSearchPageRequest" element="ns:GetProductSearchPageRequest"/>
	</wsdl:message>
	<wsdl:message name="GetSearchResultsResponse">
		<wsdl:part name="GetSearchResultsResponse" element="ns:GetSearchResultsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetSearchResultsRequest">
		<wsdl:part name="GetSearchResultsRequest" element="ns:GetSearchResultsRequest"/>
	</wsdl:message>
	<wsdl:message name="AddSecondChanceItemResponse">
		<wsdl:part name="AddSecondChanceItemResponse" element="ns:AddSecondChanceItemResponse"/>
	</wsdl:message>
	<wsdl:message name="AddSecondChanceItemRequest">
		<wsdl:part name="AddSecondChanceItemRequest" element="ns:AddSecondChanceItemRequest"/>
	</wsdl:message>
	<wsdl:message name="VerifyAddSecondChanceItemResponse">
		<wsdl:part name="VerifyAddSecondChanceItemResponse" element="ns:VerifyAddSecondChanceItemResponse"/>
	</wsdl:message>
	<wsdl:message name="VerifyAddSecondChanceItemRequest">
		<wsdl:part name="VerifyAddSecondChanceItemRequest" element="ns:VerifyAddSecondChanceItemRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductFamilyMembersResponse">
		<wsdl:part name="GetProductFamilyMembersResponse" element="ns:GetProductFamilyMembersResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductFamilyMembersRequest">
		<wsdl:part name="GetProductFamilyMembersRequest" element="ns:GetProductFamilyMembersRequest"/>
	</wsdl:message>
	<wsdl:message name="GetCategoryListingsResponse">
		<wsdl:part name="GetCategoryListingsResponse" element="ns:GetCategoryListingsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetCategoryListingsRequest">
		<wsdl:part name="GetCategoryListingsRequest" element="ns:GetCategoryListingsRequest"/>
	</wsdl:message>
	<wsdl:message name="LeaveFeedbackResponse">
		<wsdl:part name="LeaveFeedbackResponse" element="ns:LeaveFeedbackResponse"/>
	</wsdl:message>
	<wsdl:message name="LeaveFeedbackRequest">
		<wsdl:part name="LeaveFeedbackRequest" element="ns:LeaveFeedbackRequest"/>
	</wsdl:message>
	<wsdl:message name="GetFeedbackResponse">
		<wsdl:part name="GetFeedbackResponse" element="ns:GetFeedbackResponse"/>
	</wsdl:message>
	<wsdl:message name="GetFeedbackRequest">
		<wsdl:part name="GetFeedbackRequest" element="ns:GetFeedbackRequest"/>
	</wsdl:message>
	<wsdl:message name="GetMemberMessagesResponse">
		<wsdl:part name="GetMemberMessagesResponse" element="ns:GetMemberMessagesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetMemberMessagesRequest">
		<wsdl:part name="GetMemberMessagesRequest" element="ns:GetMemberMessagesRequest"/>
	</wsdl:message>
	<wsdl:message name="AddMemberMessageResponse">
		<wsdl:part name="AddMemberMessageResponse" element="ns:AddMemberMessageResponse"/>
	</wsdl:message>
	<wsdl:message name="AddMemberMessageRequest">
		<wsdl:part name="AddMemberMessageRequest" element="ns:AddMemberMessageRequest"/>
	</wsdl:message>
	<wsdl:message name="SetReturnURLResponse">
		<wsdl:part name="SetReturnURLResponse" element="ns:SetReturnURLResponse"/>
	</wsdl:message>
	<wsdl:message name="SetReturnURLRequest">
		<wsdl:part name="SetReturnURLRequest" element="ns:SetReturnURLRequest"/>
	</wsdl:message>
	<wsdl:message name="GetReturnURLResponse">
		<wsdl:part name="GetReturnURLResponse" element="ns:GetReturnURLResponse"/>
	</wsdl:message>
	<wsdl:message name="GetReturnURLRequest">
		<wsdl:part name="GetReturnURLRequest" element="ns:GetReturnURLRequest"/>
	</wsdl:message>
	<wsdl:message name="GetRuNameResponse">
		<wsdl:part name="GetRuNameResponse" element="ns:GetRuNameResponse"/>
	</wsdl:message>
	<wsdl:message name="GetRuNameRequest">
		<wsdl:part name="GetRuNameRequest" element="ns:GetRuNameRequest"/>
	</wsdl:message>
	<wsdl:message name="FetchTokenResponse">
		<wsdl:part name="FetchTokenResponse" element="ns:FetchTokenResponse"/>
	</wsdl:message>
	<wsdl:message name="FetchTokenRequest">
		<wsdl:part name="FetchTokenRequest" element="ns:FetchTokenRequest"/>
	</wsdl:message>
	<wsdl:message name="GetStoreResponse">
		<wsdl:part name="GetStoreResponse" element="ns:GetStoreResponse"/>
	</wsdl:message>
	<wsdl:message name="GetStoreRequest">
		<wsdl:part name="GetStoreRequest" element="ns:GetStoreRequest"/>
	</wsdl:message>
	<wsdl:message name="SetStoreResponse">
		<wsdl:part name="SetStoreResponse" element="ns:SetStoreResponse"/>
	</wsdl:message>
	<wsdl:message name="SetStoreRequest">
		<wsdl:part name="SetStoreRequest" element="ns:SetStoreRequest"/>
	</wsdl:message>
	<wsdl:message name="GetStoreCustomPageResponse">
		<wsdl:part name="GetStoreCustomPageResponse" element="ns:GetStoreCustomPageResponse"/>
	</wsdl:message>
	<wsdl:message name="GetStoreCustomPageRequest">
		<wsdl:part name="GetStoreCustomPageRequest" element="ns:GetStoreCustomPageRequest"/>
	</wsdl:message>
	<wsdl:message name="SetStoreCustomPageResponse">
		<wsdl:part name="SetStoreCustomPageResponse" element="ns:SetStoreCustomPageResponse"/>
	</wsdl:message>
	<wsdl:message name="SetStoreCustomPageRequest">
		<wsdl:part name="SetStoreCustomPageRequest" element="ns:SetStoreCustomPageRequest"/>
	</wsdl:message>
	<wsdl:message name="GetStoreOptionsResponse">
		<wsdl:part name="GetStoreOptionsResponse" element="ns:GetStoreOptionsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetStoreOptionsRequest">
		<wsdl:part name="GetStoreOptionsRequest" element="ns:GetStoreOptionsRequest"/>
	</wsdl:message>
	<wsdl:message name="AddDisputeResponse">
		<wsdl:part name="AddDisputeResponse" element="ns:AddDisputeResponse"/>
	</wsdl:message>
	<wsdl:message name="AddDisputeRequest">
		<wsdl:part name="AddDisputeRequest" element="ns:AddDisputeRequest"/>
	</wsdl:message>
	<wsdl:message name="SetStorePreferencesResponse">
		<wsdl:part name="SetStorePreferencesResponse" element="ns:SetStorePreferencesResponse"/>
	</wsdl:message>
	<wsdl:message name="SetStorePreferencesRequest">
		<wsdl:part name="SetStorePreferencesRequest" element="ns:SetStorePreferencesRequest"/>
	</wsdl:message>
	<wsdl:message name="GetStorePreferencesResponse">
		<wsdl:part name="GetStorePreferencesResponse" element="ns:GetStorePreferencesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetStorePreferencesRequest">
		<wsdl:part name="GetStorePreferencesRequest" element="ns:GetStorePreferencesRequest"/>
	</wsdl:message>
	<wsdl:message name="GetDisputeResponse">
		<wsdl:part name="GetDisputeResponse" element="ns:GetDisputeResponse"/>
	</wsdl:message>
	<wsdl:message name="GetDisputeRequest">
		<wsdl:part name="GetDisputeRequest" element="ns:GetDisputeRequest"/>
	</wsdl:message>
	<wsdl:message name="GetUserDisputesResponse">
		<wsdl:part name="GetUserDisputesResponse" element="ns:GetUserDisputesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetUserDisputesRequest">
		<wsdl:part name="GetUserDisputesRequest" element="ns:GetUserDisputesRequest"/>
	</wsdl:message>
	<wsdl:message name="AddDisputeResponseResponse">
		<wsdl:part name="AddDisputeResponseResponse" element="ns:AddDisputeResponseResponse"/>
	</wsdl:message>
	<wsdl:message name="AddDisputeResponseRequest">
		<wsdl:part name="AddDisputeResponseRequest" element="ns:AddDisputeResponseRequest"/>
	</wsdl:message>
	<wsdl:message name="SellerReverseDisputeResponse">
		<wsdl:part name="SellerReverseDisputeResponse" element="ns:SellerReverseDisputeResponse"/>
	</wsdl:message>
	<wsdl:message name="SellerReverseDisputeRequest">
		<wsdl:part name="SellerReverseDisputeRequest" element="ns:SellerReverseDisputeRequest"/>
	</wsdl:message>
	<wsdl:message name="GetItemShippingResponse">
		<wsdl:part name="GetItemShippingResponse" element="ns:GetItemShippingResponse"/>
	</wsdl:message>
	<wsdl:message name="GetItemShippingRequest">
		<wsdl:part name="GetItemShippingRequest" element="ns:GetItemShippingRequest"/>
	</wsdl:message>
	<wsdl:message name="GetCrossPromotionsResponse">
		<wsdl:part name="GetCrossPromotionsResponse" element="ns:GetCrossPromotionsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetCrossPromotionsRequest">
		<wsdl:part name="GetCrossPromotionsRequest" element="ns:GetCrossPromotionsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetNotificationPreferencesResponse">
		<wsdl:part name="GetNotificationPreferencesResponse" element="ns:GetNotificationPreferencesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetNotificationPreferencesRequest">
		<wsdl:part name="GetNotificationPreferencesRequest" element="ns:GetNotificationPreferencesRequest"/>
	</wsdl:message>
	<wsdl:message name="SetNotificationPreferencesResponse">
		<wsdl:part name="SetNotificationPreferencesResponse" element="ns:SetNotificationPreferencesResponse"/>
	</wsdl:message>
	<wsdl:message name="SetNotificationPreferencesRequest">
		<wsdl:part name="SetNotificationPreferencesRequest" element="ns:SetNotificationPreferencesRequest"/>
	</wsdl:message>
	<wsdl:message name="GetPromotionRulesResponse">
		<wsdl:part name="GetPromotionRulesResponse" element="ns:GetPromotionRulesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetPromotionRulesRequest">
		<wsdl:part name="GetPromotionRulesRequest" element="ns:GetPromotionRulesRequest"/>
	</wsdl:message>
	<wsdl:message name="SetPromotionRulesResponse">
		<wsdl:part name="SetPromotionRulesResponse" element="ns:SetPromotionRulesResponse"/>
	</wsdl:message>
	<wsdl:message name="SetPromotionRulesRequest">
		<wsdl:part name="SetPromotionRulesRequest" element="ns:SetPromotionRulesRequest"/>
	</wsdl:message>
	<wsdl:message name="ReviseCheckoutStatusResponse">
		<wsdl:part name="ReviseCheckoutStatusResponse" element="ns:ReviseCheckoutStatusResponse"/>
	</wsdl:message>
	<wsdl:message name="ReviseCheckoutStatusRequest">
		<wsdl:part name="ReviseCheckoutStatusRequest" element="ns:ReviseCheckoutStatusRequest"/>
	</wsdl:message>
	<wsdl:message name="GetOrdersResponse">
		<wsdl:part name="GetOrdersResponse" element="ns:GetOrdersResponse"/>
	</wsdl:message>
	<wsdl:message name="GetOrdersRequest">
		<wsdl:part name="GetOrdersRequest" element="ns:GetOrdersRequest"/>
	</wsdl:message>
	<wsdl:message name="GetSuggestedCategoriesResponse">
		<wsdl:part name="GetSuggestedCategoriesResponse" element="ns:GetSuggestedCategoriesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetSuggestedCategoriesRequest">
		<wsdl:part name="GetSuggestedCategoriesRequest" element="ns:GetSuggestedCategoriesRequest"/>
	</wsdl:message>
	<wsdl:message name="GeteBayOfficialTimeResponse">
		<wsdl:part name="GeteBayOfficialTimeResponse" element="ns:GeteBayOfficialTimeResponse"/>
	</wsdl:message>
	<wsdl:message name="GeteBayOfficialTimeRequest">
		<wsdl:part name="GeteBayOfficialTimeRequest" element="ns:GeteBayOfficialTimeRequest"/>
	</wsdl:message>
	<wsdl:message name="GetAllBiddersResponse">
		<wsdl:part name="GetAllBiddersResponse" element="ns:GetAllBiddersResponse"/>
	</wsdl:message>
	<wsdl:message name="GetAllBiddersRequest">
		<wsdl:part name="GetAllBiddersRequest" element="ns:GetAllBiddersRequest"/>
	</wsdl:message>
	<wsdl:message name="GetFinanceOffersResponse">
		<wsdl:part name="GetFinanceOffersResponse" element="ns:GetFinanceOffersResponse"/>
	</wsdl:message>
	<wsdl:message name="GetFinanceOffersRequest">
		<wsdl:part name="GetFinanceOffersRequest" element="ns:GetFinanceOffersRequest"/>
	</wsdl:message>
	<wsdl:message name="GetCategory2FinanceOfferResponse">
		<wsdl:part name="GetCategory2FinanceOfferResponse" element="ns:GetCategory2FinanceOfferResponse"/>
	</wsdl:message>
	<wsdl:message name="GetCategory2FinanceOfferRequest">
		<wsdl:part name="GetCategory2FinanceOfferRequest" element="ns:GetCategory2FinanceOfferRequest"/>
	</wsdl:message>
	<wsdl:message name="GetApiAccessRulesResponse">
		<wsdl:part name="GetApiAccessRulesResponse" element="ns:GetApiAccessRulesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetApiAccessRulesRequest">
		<wsdl:part name="GetApiAccessRulesRequest" element="ns:GetApiAccessRulesRequest"/>
	</wsdl:message>
	<wsdl:message name="AddOrderResponse">
		<wsdl:part name="AddOrderResponse" element="ns:AddOrderResponse"/>
	</wsdl:message>
	<wsdl:message name="AddOrderRequest">
		<wsdl:part name="AddOrderRequest" element="ns:AddOrderRequest"/>
	</wsdl:message>
	<wsdl:message name="GetMyMessagesResponse">
		<wsdl:part name="GetMyMessagesResponse" element="ns:GetMyMessagesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetMyMessagesRequest">
		<wsdl:part name="GetMyMessagesRequest" element="ns:GetMyMessagesRequest"/>
	</wsdl:message>
	<wsdl:message name="ReviseMyMessagesResponse">
		<wsdl:part name="ReviseMyMessagesResponse" element="ns:ReviseMyMessagesResponse"/>
	</wsdl:message>
	<wsdl:message name="ReviseMyMessagesRequest">
		<wsdl:part name="ReviseMyMessagesRequest" element="ns:ReviseMyMessagesRequest"/>
	</wsdl:message>
	<wsdl:message name="DeleteMyMessagesResponse">
		<wsdl:part name="DeleteMyMessagesResponse" element="ns:DeleteMyMessagesResponse"/>
	</wsdl:message>
	<wsdl:message name="DeleteMyMessagesRequest">
		<wsdl:part name="DeleteMyMessagesRequest" element="ns:DeleteMyMessagesRequest"/>
	</wsdl:message>
	<wsdl:message name="GetUserPreferencesResponse">
		<wsdl:part name="GetUserPreferencesResponse" element="ns:GetUserPreferencesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetUserPreferencesRequest">
		<wsdl:part name="GetUserPreferencesRequest" element="ns:GetUserPreferencesRequest"/>
	</wsdl:message>
	<wsdl:message name="SetUserPreferencesResponse">
		<wsdl:part name="SetUserPreferencesResponse" element="ns:SetUserPreferencesResponse"/>
	</wsdl:message>
	<wsdl:message name="SetUserPreferencesRequest">
		<wsdl:part name="SetUserPreferencesRequest" element="ns:SetUserPreferencesRequest"/>
	</wsdl:message>
	<wsdl:message name="GetBestOffersResponse">
		<wsdl:part name="GetBestOffersResponse" element="ns:GetBestOffersResponse"/>
	</wsdl:message>
	<wsdl:message name="GetBestOffersRequest">
		<wsdl:part name="GetBestOffersRequest" element="ns:GetBestOffersRequest"/>
	</wsdl:message>
	<wsdl:portType name="eBayAPIInterface">
			
		<wsdl:operation name="GetItem">
			<wsdl:input message="ns:GetItemRequest"/>
			<wsdl:output message="ns:GetItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="AddItem">
			<wsdl:input message="ns:AddItemRequest"/>
			<wsdl:output message="ns:AddItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="VerifyAddItem">
			<wsdl:input message="ns:VerifyAddItemRequest"/>
			<wsdl:output message="ns:VerifyAddItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetUser">
			<wsdl:input message="ns:GetUserRequest"/>
			<wsdl:output message="ns:GetUserResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetSellerEvents">
			<wsdl:input message="ns:GetSellerEventsRequest"/>
			<wsdl:output message="ns:GetSellerEventsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="RelistItem">
			<wsdl:input message="ns:RelistItemRequest"/>
			<wsdl:output message="ns:RelistItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="ReviseItem">
			<wsdl:input message="ns:ReviseItemRequest"/>
			<wsdl:output message="ns:ReviseItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetSellerList">
			<wsdl:input message="ns:GetSellerListRequest"/>
			<wsdl:output message="ns:GetSellerListResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetItemTransactions">
			<wsdl:input message="ns:GetItemTransactionsRequest"/>
			<wsdl:output message="ns:GetItemTransactionsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetSellerTransactions">
			<wsdl:input message="ns:GetSellerTransactionsRequest"/>
			<wsdl:output message="ns:GetSellerTransactionsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetCategories">
			<wsdl:input message="ns:GetCategoriesRequest"/>
			<wsdl:output message="ns:GetCategoriesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetAttributesCS">
			<wsdl:input message="ns:GetAttributesCSRequest"/>
			<wsdl:output message="ns:GetAttributesCSResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetAttributesXSL">
			<wsdl:input message="ns:GetAttributesXSLRequest"/>
			<wsdl:output message="ns:GetAttributesXSLResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductFinder">
			<wsdl:input message="ns:GetProductFinderRequest"/>
			<wsdl:output message="ns:GetProductFinderResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductFinderXSL">
			<wsdl:input message="ns:GetProductFinderXSLRequest"/>
			<wsdl:output message="ns:GetProductFinderXSLResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductSellingPages">
			<wsdl:input message="ns:GetProductSellingPagesRequest"/>
			<wsdl:output message="ns:GetProductSellingPagesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetAccount">
			<wsdl:input message="ns:GetAccountRequest"/>
			<wsdl:output message="ns:GetAccountResponse"/>
		</wsdl:operation>
		<wsdl:operation name="AddToItemDescription">
			<wsdl:input message="ns:AddToItemDescriptionRequest"/>
			<wsdl:output message="ns:AddToItemDescriptionResponse"/>
		</wsdl:operation>
		<wsdl:operation name="EndItem">
			<wsdl:input message="ns:EndItemRequest"/>
			<wsdl:output message="ns:EndItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetHighBidders">
			<wsdl:input message="ns:GetHighBiddersRequest"/>
			<wsdl:output message="ns:GetHighBiddersResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetCategory2CS">
			<wsdl:input message="ns:GetCategory2CSRequest"/>
			<wsdl:output message="ns:GetCategory2CSResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductSearchResults">
			<wsdl:input message="ns:GetProductSearchResultsRequest"/>
			<wsdl:output message="ns:GetProductSearchResultsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetMyeBay">
			<wsdl:input message="ns:GetMyeBayRequest"/>
			<wsdl:output message="ns:GetMyeBayResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductSearchPage">
			<wsdl:input message="ns:GetProductSearchPageRequest"/>
			<wsdl:output message="ns:GetProductSearchPageResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetSearchResults">
			<wsdl:input message="ns:GetSearchResultsRequest"/>
			<wsdl:output message="ns:GetSearchResultsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="AddSecondChanceItem">
			<wsdl:input message="ns:AddSecondChanceItemRequest"/>
			<wsdl:output message="ns:AddSecondChanceItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="VerifyAddSecondChanceItem">
			<wsdl:input message="ns:VerifyAddSecondChanceItemRequest"/>
			<wsdl:output message="ns:VerifyAddSecondChanceItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductFamilyMembers">
			<wsdl:input message="ns:GetProductFamilyMembersRequest"/>
			<wsdl:output message="ns:GetProductFamilyMembersResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetCategoryListings">
			<wsdl:input message="ns:GetCategoryListingsRequest"/>
			<wsdl:output message="ns:GetCategoryListingsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="LeaveFeedback">
			<wsdl:input message="ns:LeaveFeedbackRequest"/>
			<wsdl:output message="ns:LeaveFeedbackResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetFeedback">
			<wsdl:input message="ns:GetFeedbackRequest"/>
			<wsdl:output message="ns:GetFeedbackResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetMemberMessages">
			<wsdl:input message="ns:GetMemberMessagesRequest"/>
			<wsdl:output message="ns:GetMemberMessagesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="AddMemberMessage">
			<wsdl:input message="ns:AddMemberMessageRequest"/>
			<wsdl:output message="ns:AddMemberMessageResponse"/>
		</wsdl:operation>
		<wsdl:operation name="SetReturnURL">
			<wsdl:input message="ns:SetReturnURLRequest"/>
			<wsdl:output message="ns:SetReturnURLResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetReturnURL">
			<wsdl:input message="ns:GetReturnURLRequest"/>
			<wsdl:output message="ns:GetReturnURLResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetRuName">
			<wsdl:input message="ns:GetRuNameRequest"/>
			<wsdl:output message="ns:GetRuNameResponse"/>
		</wsdl:operation>
		<wsdl:operation name="FetchToken">
			<wsdl:input message="ns:FetchTokenRequest"/>
			<wsdl:output message="ns:FetchTokenResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetStore">
			<wsdl:input message="ns:GetStoreRequest"/>
			<wsdl:output message="ns:GetStoreResponse"/>
		</wsdl:operation>
		<wsdl:operation name="SetStore">
			<wsdl:input message="ns:SetStoreRequest"/>
			<wsdl:output message="ns:SetStoreResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetStoreCustomPage">
			<wsdl:input message="ns:GetStoreCustomPageRequest"/>
			<wsdl:output message="ns:GetStoreCustomPageResponse"/>
		</wsdl:operation>
		<wsdl:operation name="SetStoreCustomPage">
			<wsdl:input message="ns:SetStoreCustomPageRequest"/>
			<wsdl:output message="ns:SetStoreCustomPageResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetStoreOptions">
			<wsdl:input message="ns:GetStoreOptionsRequest"/>
			<wsdl:output message="ns:GetStoreOptionsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="AddDispute">
			<wsdl:input message="ns:AddDisputeRequest"/>
			<wsdl:output message="ns:AddDisputeResponse"/>
		</wsdl:operation>
		<wsdl:operation name="SetStorePreferences">
			<wsdl:input message="ns:SetStorePreferencesRequest"/>
			<wsdl:output message="ns:SetStorePreferencesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetStorePreferences">
			<wsdl:input message="ns:GetStorePreferencesRequest"/>
			<wsdl:output message="ns:GetStorePreferencesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetDispute">
			<wsdl:input message="ns:GetDisputeRequest"/>
			<wsdl:output message="ns:GetDisputeResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetUserDisputes">
			<wsdl:input message="ns:GetUserDisputesRequest"/>
			<wsdl:output message="ns:GetUserDisputesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="AddDisputeResponse">
			<wsdl:input message="ns:AddDisputeResponseRequest"/>
			<wsdl:output message="ns:AddDisputeResponseResponse"/>
		</wsdl:operation>
		<wsdl:operation name="SellerReverseDispute">
			<wsdl:input message="ns:SellerReverseDisputeRequest"/>
			<wsdl:output message="ns:SellerReverseDisputeResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetItemShipping">
			<wsdl:input message="ns:GetItemShippingRequest"/>
			<wsdl:output message="ns:GetItemShippingResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetCrossPromotions">
			<wsdl:input message="ns:GetCrossPromotionsRequest"/>
			<wsdl:output message="ns:GetCrossPromotionsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetNotificationPreferences">
			<wsdl:input message="ns:GetNotificationPreferencesRequest"/>
			<wsdl:output message="ns:GetNotificationPreferencesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="SetNotificationPreferences">
			<wsdl:input message="ns:SetNotificationPreferencesRequest"/>
			<wsdl:output message="ns:SetNotificationPreferencesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetPromotionRules">
			<wsdl:input message="ns:GetPromotionRulesRequest"/>
			<wsdl:output message="ns:GetPromotionRulesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="SetPromotionRules">
			<wsdl:input message="ns:SetPromotionRulesRequest"/>
			<wsdl:output message="ns:SetPromotionRulesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="ReviseCheckoutStatus">
			<wsdl:input message="ns:ReviseCheckoutStatusRequest"/>
			<wsdl:output message="ns:ReviseCheckoutStatusResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetOrders">
			<wsdl:input message="ns:GetOrdersRequest"/>
			<wsdl:output message="ns:GetOrdersResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetSuggestedCategories">
			<wsdl:input message="ns:GetSuggestedCategoriesRequest"/>
			<wsdl:output message="ns:GetSuggestedCategoriesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GeteBayOfficialTime">
			<wsdl:input message="ns:GeteBayOfficialTimeRequest"/>
			<wsdl:output message="ns:GeteBayOfficialTimeResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetAllBidders">
			<wsdl:input message="ns:GetAllBiddersRequest"/>
			<wsdl:output message="ns:GetAllBiddersResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetFinanceOffers">
			<wsdl:input message="ns:GetFinanceOffersRequest"/>
			<wsdl:output message="ns:GetFinanceOffersResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetCategory2FinanceOffer">
			<wsdl:input message="ns:GetCategory2FinanceOfferRequest"/>
			<wsdl:output message="ns:GetCategory2FinanceOfferResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetApiAccessRules">
			<wsdl:input message="ns:GetApiAccessRulesRequest"/>
			<wsdl:output message="ns:GetApiAccessRulesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="AddOrder">
			<wsdl:input message="ns:AddOrderRequest"/>
			<wsdl:output message="ns:AddOrderResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetMyMessages">
			<wsdl:input message="ns:GetMyMessagesRequest"/>
			<wsdl:output message="ns:GetMyMessagesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="ReviseMyMessages">
			<wsdl:input message="ns:ReviseMyMessagesRequest"/>
			<wsdl:output message="ns:ReviseMyMessagesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="DeleteMyMessages">
			<wsdl:input message="ns:DeleteMyMessagesRequest"/>
			<wsdl:output message="ns:DeleteMyMessagesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetUserPreferences">
			<wsdl:input message="ns:GetUserPreferencesRequest"/>
			<wsdl:output message="ns:GetUserPreferencesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="SetUserPreferences">
			<wsdl:input message="ns:SetUserPreferencesRequest"/>
			<wsdl:output message="ns:SetUserPreferencesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetBestOffers">
			<wsdl:input message="ns:GetBestOffersRequest"/>
			<wsdl:output message="ns:GetBestOffersResponse"/>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name="eBayAPISoapBinding" type="ns:eBayAPIInterface">	
	<wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
			
		<wsdl:operation name="GetItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="VerifyAddItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetUser">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetSellerEvents">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="RelistItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ReviseItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetSellerList">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetItemTransactions">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetSellerTransactions">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetCategories">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetAttributesCS">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetAttributesXSL">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductFinder">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductFinderXSL">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductSellingPages">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetAccount">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddToItemDescription">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="EndItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetHighBidders">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetCategory2CS">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductSearchResults">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetMyeBay">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductSearchPage">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetSearchResults">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddSecondChanceItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="VerifyAddSecondChanceItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductFamilyMembers">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetCategoryListings">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="LeaveFeedback">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetFeedback">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetMemberMessages">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddMemberMessage">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SetReturnURL">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetReturnURL">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetRuName">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="FetchToken">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetStore">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SetStore">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetStoreCustomPage">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SetStoreCustomPage">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetStoreOptions">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddDispute">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SetStorePreferences">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetStorePreferences">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetDispute">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetUserDisputes">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddDisputeResponse">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SellerReverseDispute">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetItemShipping">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetCrossPromotions">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetNotificationPreferences">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SetNotificationPreferences">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetPromotionRules">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SetPromotionRules">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ReviseCheckoutStatus">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetOrders">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetSuggestedCategories">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GeteBayOfficialTime">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetAllBidders">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetFinanceOffers">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetCategory2FinanceOffer">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetApiAccessRules">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddOrder">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetMyMessages">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ReviseMyMessages">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="DeleteMyMessages">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetUserPreferences">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SetUserPreferences">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetBestOffers">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name="eBayAPIInterfaceService">
			<wsdl:port binding="ns:eBayAPISoapBinding" name="eBayAPI">
				<wsdlsoap:address location="https://api.ebay.com/wsapi"/>
			</wsdl:port>
	</wsdl:service>
</wsdl:definitions>